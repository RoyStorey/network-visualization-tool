{"ast":null,"code":"import { htmlRenderer } from \"../htmlRenderer/index.mjs\";\nimport { textRenderer } from \"../textRenderer/index.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { addClass, hasClass } from \"../../helpers/dom/element.mjs\";\nexport var RENDERER_TYPE = 'autocomplete';\n\n/**\n * Autocomplete renderer.\n *\n * @private\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\nexport function autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var rootDocument = instance.rootDocument;\n  var rendererFunc = cellProperties.allowHtml ? htmlRenderer : textRenderer;\n  var ARROW = rootDocument.createElement('DIV');\n  ARROW.className = 'htAutocompleteArrow';\n  ARROW.appendChild(rootDocument.createTextNode(String.fromCharCode(9660)));\n  rendererFunc.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\n  if (!TD.firstChild) {\n    // http://jsperf.com/empty-node-if-needed\n    // otherwise empty fields appear borderless in demo/renderers.html (IE)\n    TD.appendChild(rootDocument.createTextNode(String.fromCharCode(160))); // workaround for https://github.com/handsontable/handsontable/issues/1946\n    // this is faster than innerHTML. See: https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n  }\n\n  TD.insertBefore(ARROW, TD.firstChild);\n  addClass(TD, 'htAutocomplete');\n  if (!instance.acArrowListener) {\n    var eventManager = new EventManager(instance);\n\n    // not very elegant but easy and fast\n    instance.acArrowListener = function (event) {\n      if (hasClass(event.target, 'htAutocompleteArrow')) {\n        instance.view._wt.getSetting('onCellDblClick', null, instance._createCellCoords(row, col), TD);\n      }\n    };\n    eventManager.addEventListener(instance.rootElement, 'mousedown', instance.acArrowListener);\n\n    // We need to unbind the listener after the table has been destroyed\n    instance.addHookOnce('afterDestroy', function () {\n      eventManager.destroy();\n    });\n  }\n}\nautocompleteRenderer.RENDERER_TYPE = RENDERER_TYPE;","map":{"version":3,"names":["htmlRenderer","textRenderer","EventManager","addClass","hasClass","RENDERER_TYPE","autocompleteRenderer","instance","TD","row","col","prop","value","cellProperties","rootDocument","rendererFunc","allowHtml","ARROW","createElement","className","appendChild","createTextNode","String","fromCharCode","apply","firstChild","insertBefore","acArrowListener","eventManager","event","target","view","_wt","getSetting","_createCellCoords","addEventListener","rootElement","addHookOnce","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/renderers/autocompleteRenderer/autocompleteRenderer.mjs"],"sourcesContent":["import { htmlRenderer } from \"../htmlRenderer/index.mjs\";\nimport { textRenderer } from \"../textRenderer/index.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { addClass, hasClass } from \"../../helpers/dom/element.mjs\";\nexport var RENDERER_TYPE = 'autocomplete';\n\n/**\n * Autocomplete renderer.\n *\n * @private\n * @param {Core} instance The Handsontable instance.\n * @param {HTMLTableCellElement} TD The rendered cell element.\n * @param {number} row The visual row index.\n * @param {number} col The visual column index.\n * @param {number|string} prop The column property (passed when datasource is an array of objects).\n * @param {*} value The rendered value.\n * @param {object} cellProperties The cell meta object ({@see Core#getCellMeta}).\n */\nexport function autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var rootDocument = instance.rootDocument;\n  var rendererFunc = cellProperties.allowHtml ? htmlRenderer : textRenderer;\n  var ARROW = rootDocument.createElement('DIV');\n  ARROW.className = 'htAutocompleteArrow';\n  ARROW.appendChild(rootDocument.createTextNode(String.fromCharCode(9660)));\n  rendererFunc.apply(this, [instance, TD, row, col, prop, value, cellProperties]);\n  if (!TD.firstChild) {\n    // http://jsperf.com/empty-node-if-needed\n    // otherwise empty fields appear borderless in demo/renderers.html (IE)\n    TD.appendChild(rootDocument.createTextNode(String.fromCharCode(160))); // workaround for https://github.com/handsontable/handsontable/issues/1946\n    // this is faster than innerHTML. See: https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n  }\n\n  TD.insertBefore(ARROW, TD.firstChild);\n  addClass(TD, 'htAutocomplete');\n  if (!instance.acArrowListener) {\n    var eventManager = new EventManager(instance);\n\n    // not very elegant but easy and fast\n    instance.acArrowListener = function (event) {\n      if (hasClass(event.target, 'htAutocompleteArrow')) {\n        instance.view._wt.getSetting('onCellDblClick', null, instance._createCellCoords(row, col), TD);\n      }\n    };\n    eventManager.addEventListener(instance.rootElement, 'mousedown', instance.acArrowListener);\n\n    // We need to unbind the listener after the table has been destroyed\n    instance.addHookOnce('afterDestroy', function () {\n      eventManager.destroy();\n    });\n  }\n}\nautocompleteRenderer.RENDERER_TYPE = RENDERER_TYPE;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,+BAA+B;AAClE,OAAO,IAAIC,aAAa,GAAG,cAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAE;EACxF,IAAIC,YAAY,GAAGP,QAAQ,CAACO,YAAY;EACxC,IAAIC,YAAY,GAAGF,cAAc,CAACG,SAAS,GAAGhB,YAAY,GAAGC,YAAY;EACzE,IAAIgB,KAAK,GAAGH,YAAY,CAACI,aAAa,CAAC,KAAK,CAAC;EAC7CD,KAAK,CAACE,SAAS,GAAG,qBAAqB;EACvCF,KAAK,CAACG,WAAW,CAACN,YAAY,CAACO,cAAc,CAACC,MAAM,CAACC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACzER,YAAY,CAACS,KAAK,CAAC,IAAI,EAAE,CAACjB,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,CAAC,CAAC;EAC/E,IAAI,CAACL,EAAE,CAACiB,UAAU,EAAE;IAClB;IACA;IACAjB,EAAE,CAACY,WAAW,CAACN,YAAY,CAACO,cAAc,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE;EACF;;EAEAf,EAAE,CAACkB,YAAY,CAACT,KAAK,EAAET,EAAE,CAACiB,UAAU,CAAC;EACrCtB,QAAQ,CAACK,EAAE,EAAE,gBAAgB,CAAC;EAC9B,IAAI,CAACD,QAAQ,CAACoB,eAAe,EAAE;IAC7B,IAAIC,YAAY,GAAG,IAAI1B,YAAY,CAACK,QAAQ,CAAC;;IAE7C;IACAA,QAAQ,CAACoB,eAAe,GAAG,UAAUE,KAAK,EAAE;MAC1C,IAAIzB,QAAQ,CAACyB,KAAK,CAACC,MAAM,EAAE,qBAAqB,CAAC,EAAE;QACjDvB,QAAQ,CAACwB,IAAI,CAACC,GAAG,CAACC,UAAU,CAAC,gBAAgB,EAAE,IAAI,EAAE1B,QAAQ,CAAC2B,iBAAiB,CAACzB,GAAG,EAAEC,GAAG,CAAC,EAAEF,EAAE,CAAC;MAChG;IACF,CAAC;IACDoB,YAAY,CAACO,gBAAgB,CAAC5B,QAAQ,CAAC6B,WAAW,EAAE,WAAW,EAAE7B,QAAQ,CAACoB,eAAe,CAAC;;IAE1F;IACApB,QAAQ,CAAC8B,WAAW,CAAC,cAAc,EAAE,YAAY;MAC/CT,YAAY,CAACU,OAAO,EAAE;IACxB,CAAC,CAAC;EACJ;AACF;AACAhC,oBAAoB,CAACD,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}