{"ast":null,"code":"/* eslint-disable no-console */\n/* eslint-disable no-restricted-globals */\n/**\n * \"In Internet Explorer 9 (and 8), the console object is only exposed when the developer tools are opened\n * for a particular tab.\".\n *\n * Source: https://stackoverflow.com/a/5473193.\n */\nimport { isDefined } from \"./mixed.mjs\";\n/**\n * Logs message to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function log() {\n  if (isDefined(console)) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n}\n\n/**\n * Logs warn to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function warn() {\n  if (isDefined(console)) {\n    var _console2;\n    (_console2 = console).warn.apply(_console2, arguments);\n  }\n}\n\n/**\n * Logs info to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function info() {\n  if (isDefined(console)) {\n    var _console3;\n    (_console3 = console).info.apply(_console3, arguments);\n  }\n}\n\n/**\n * Logs error to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function error() {\n  if (isDefined(console)) {\n    var _console4;\n    (_console4 = console).error.apply(_console4, arguments);\n  }\n}","map":{"version":3,"names":["isDefined","log","console","_console","apply","arguments","warn","_console2","info","_console3","error","_console4"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/helpers/console.mjs"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-restricted-globals */\n/**\n * \"In Internet Explorer 9 (and 8), the console object is only exposed when the developer tools are opened\n * for a particular tab.\".\n *\n * Source: https://stackoverflow.com/a/5473193.\n */\nimport { isDefined } from \"./mixed.mjs\";\n/**\n * Logs message to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function log() {\n  if (isDefined(console)) {\n    var _console;\n    (_console = console).log.apply(_console, arguments);\n  }\n}\n\n/**\n * Logs warn to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function warn() {\n  if (isDefined(console)) {\n    var _console2;\n    (_console2 = console).warn.apply(_console2, arguments);\n  }\n}\n\n/**\n * Logs info to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function info() {\n  if (isDefined(console)) {\n    var _console3;\n    (_console3 = console).info.apply(_console3, arguments);\n  }\n}\n\n/**\n * Logs error to the console if the `console` object is exposed.\n *\n * @param {...*} args Values which will be logged.\n */\nexport function error() {\n  if (isDefined(console)) {\n    var _console4;\n    (_console4 = console).error.apply(_console4, arguments);\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAAA,EAAG;EACpB,IAAID,SAAS,CAACE,OAAO,CAAC,EAAE;IACtB,IAAIC,QAAQ;IACZ,CAACA,QAAQ,GAAGD,OAAO,EAAED,GAAG,CAACG,KAAK,CAACD,QAAQ,EAAEE,SAAS,CAAC;EACrD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAAA,EAAG;EACrB,IAAIN,SAAS,CAACE,OAAO,CAAC,EAAE;IACtB,IAAIK,SAAS;IACb,CAACA,SAAS,GAAGL,OAAO,EAAEI,IAAI,CAACF,KAAK,CAACG,SAAS,EAAEF,SAAS,CAAC;EACxD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,IAAIA,CAAA,EAAG;EACrB,IAAIR,SAAS,CAACE,OAAO,CAAC,EAAE;IACtB,IAAIO,SAAS;IACb,CAACA,SAAS,GAAGP,OAAO,EAAEM,IAAI,CAACJ,KAAK,CAACK,SAAS,EAAEJ,SAAS,CAAC;EACxD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,KAAKA,CAAA,EAAG;EACtB,IAAIV,SAAS,CAACE,OAAO,CAAC,EAAE;IACtB,IAAIS,SAAS;IACb,CAACA,SAAS,GAAGT,OAAO,EAAEQ,KAAK,CAACN,KAAK,CAACO,SAAS,EAAEN,SAAS,CAAC;EACzD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}