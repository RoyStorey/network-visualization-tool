{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { getScrollableElement, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { requestAnimationFrame } from \"../../../helpers/feature.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { isChrome } from \"../../../helpers/browser.mjs\";\nimport { InlineStartOverlay, TopOverlay, TopInlineStartCornerOverlay, BottomOverlay, BottomInlineStartCornerOverlay } from \"./overlay/index.mjs\";\n/**\n * @class Overlays\n */\nvar Overlays = /*#__PURE__*/function () {\n  /**\n   * Walkontable instance's reference.\n   *\n   * @protected\n   * @type {Walkontable}\n   */\n\n  /**\n   * Refer to the TopOverlay instance.\n   *\n   * @protected\n   * @type {TopOverlay}\n   */\n\n  /**\n   * Refer to the BottomOverlay instance.\n   *\n   * @protected\n   * @type {BottomOverlay}\n   */\n\n  /**\n   * Refer to the InlineStartOverlay or instance.\n   *\n   * @protected\n   * @type {InlineStartOverlay}\n   */\n\n  /**\n   * Refer to the TopInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {TopInlineStartCornerOverlay}\n   */\n\n  /**\n   * Refer to the BottomInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {BottomInlineStartCornerOverlay}\n   */\n\n  /**\n   * Browser line height for purposes of translating mouse wheel.\n   *\n   * @private\n   * @type {number}\n   */\n\n  /**\n   * The walkontable settings.\n   *\n   * @protected\n   * @type {Settings}\n   */\n\n  /**\n   * The instance of the ResizeObserver that observes the size of the Walkontable wrapper element.\n   * In case of the size change detection the `onContainerElementResize` is fired.\n   *\n   * @private\n   * @type {ResizeObserver}\n   */\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @todo refactoring remove.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {DomBindings} domBindings Bindings into DOM.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {MasterTable} wtTable The master table.\n   */\n  function Overlays(wotInstance, facadeGetter, domBindings, wtSettings, eventManager, wtTable) {\n    var _this = this;\n    _classCallCheck(this, Overlays);\n    _defineProperty(this, \"wot\", null);\n    _defineProperty(this, \"topOverlay\", null);\n    _defineProperty(this, \"bottomOverlay\", null);\n    _defineProperty(this, \"inlineStartOverlay\", null);\n    _defineProperty(this, \"topInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"bottomInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"browserLineHeight\", undefined);\n    _defineProperty(this, \"wtSettings\", null);\n    _defineProperty(this, \"resizeObserver\", new ResizeObserver(function (entries) {\n      requestAnimationFrame(function () {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        _this.wtSettings.getSetting('onContainerElementResize');\n      });\n    }));\n    this.wot = wotInstance;\n    this.wtSettings = wtSettings;\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtTable = wtTable;\n    var _this$domBindings = this.domBindings,\n      rootDocument = _this$domBindings.rootDocument,\n      rootWindow = _this$domBindings.rootWindow;\n\n    // legacy support\n    this.instance = this.wot; // todo refactoring: move to facade\n    this.eventManager = eventManager;\n\n    // TODO refactoring: probably invalid place to this logic\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.initOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.initBrowserLineHeight();\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n\n  /**\n   * Get the list of references to all overlays.\n   *\n   * @param {boolean} [includeMaster = false] If set to `true`, the list will contain the master table as the last\n   * element.\n   * @returns {(TopOverlay|TopInlineStartCornerOverlay|InlineStartOverlay|BottomOverlay|BottomInlineStartCornerOverlay)[]}\n   */\n  _createClass(Overlays, [{\n    key: \"getOverlays\",\n    value: function getOverlays() {\n      var includeMaster = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var overlays = [this.topOverlay, this.topInlineStartCornerOverlay, this.inlineStartOverlay, this.bottomOverlay, this.bottomInlineStartCornerOverlay];\n      if (includeMaster) {\n        overlays.push(this.wtTable);\n      }\n      return overlays;\n    }\n\n    /**\n     * Retrieve browser line height and apply its value to `browserLineHeight`.\n     *\n     * @private\n     */\n  }, {\n    key: \"initBrowserLineHeight\",\n    value: function initBrowserLineHeight() {\n      var _this$domBindings2 = this.domBindings,\n        rootWindow = _this$domBindings2.rootWindow,\n        rootDocument = _this$domBindings2.rootDocument;\n      var computedStyle = rootWindow.getComputedStyle(rootDocument.body);\n      /**\n       * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n       * Https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values.\n       */\n      var lineHeight = parseInt(computedStyle.lineHeight, 10);\n      var lineHeightFalback = parseInt(computedStyle.fontSize, 10) * 1.2;\n      this.browserLineHeight = lineHeight || lineHeightFalback;\n    }\n\n    /**\n     * Prepare overlays based on user settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"initOverlays\",\n    value: function initOverlays() {\n      var args = [this.wot, this.facadeGetter, this.wtSettings, this.domBindings];\n\n      // todo refactoring: IOC, collection or factories.\n      // TODO refactoring, conceive about using generic collection of overlays.\n      this.topOverlay = _construct(TopOverlay, args);\n      this.bottomOverlay = _construct(BottomOverlay, args);\n      this.inlineStartOverlay = _construct(InlineStartOverlay, args);\n\n      // TODO discuss, the controversial here would be removing the lazy creation mechanism for corners.\n      // TODO cond. Has no any visual impact. They're initially hidden in same way like left, top, and bottom overlays.\n      this.topInlineStartCornerOverlay = _construct(TopInlineStartCornerOverlay, args.concat([this.topOverlay, this.inlineStartOverlay]));\n      this.bottomInlineStartCornerOverlay = _construct(BottomInlineStartCornerOverlay, args.concat([this.bottomOverlay, this.inlineStartOverlay]));\n    }\n\n    /**\n     * Update state of rendering, check if changed.\n     *\n     * @package\n     * @returns {boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n     */\n  }, {\n    key: \"updateStateOfRendering\",\n    value: function updateStateOfRendering() {\n      var syncScroll = this.topOverlay.updateStateOfRendering();\n      syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      syncScroll = this.inlineStartOverlay.updateStateOfRendering() || syncScroll;\n\n      // todo refactoring: move conditions into updateStateOfRendering(),\n      if (this.inlineStartOverlay.needFullRender) {\n        if (this.topOverlay.needFullRender) {\n          syncScroll = this.topInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n        if (this.bottomOverlay.needFullRender) {\n          syncScroll = this.bottomInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n      }\n      return syncScroll;\n    }\n\n    /**\n     * Refresh and redraw table.\n     */\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n      if (!this.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n      this.wot.draw(true);\n      if (this.verticalScrolling) {\n        this.inlineStartOverlay.onScroll(); // todo the inlineStartOverlay.onScroll() fires hook. Why is it needed there, not in any another place?\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n\n    /**\n     * Register all necessary event listeners.\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this2 = this;\n      var _this$domBindings3 = this.domBindings,\n        rootDocument = _this$domBindings3.rootDocument,\n        rootWindow = _this$domBindings3.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var inlineStartOverlayScrollableElement = this.inlineStartOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this2.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this2.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this2.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this2.onTableScroll(event);\n      }, {\n        passive: true\n      });\n      if (topOverlayScrollableElement !== inlineStartOverlayScrollableElement) {\n        this.eventManager.addEventListener(inlineStartOverlayScrollableElement, 'scroll', function (event) {\n          return _this2.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this2.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n      var overlays = [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder; // todo rethink, maybe: overlay.getHolder()\n\n          _this2.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this2.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this2.wtSettings.getSetting('onWindowResize');\n        }, 200);\n      });\n      if (!isScrollOnWindow) {\n        this.resizeObserver.observe(this.wtTable.wtRootElement.parentElement);\n      }\n    }\n\n    /**\n     * Deregister all previously registered listeners.\n     */\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n\n    /**\n     * Scroll listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.domBindings.rootWindow;\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n      this.syncScrollPositions(event);\n    }\n\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event The mouse event object.\n     * @param {boolean} preventDefault If `true`, the `preventDefault` will be called on event object.\n     */\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.domBindings.rootWindow;\n\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The keyboard event object.\n     */\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n\n    /**\n     * Key up listener.\n     */\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * this.browserLineHeight;\n        deltaY += deltaY * this.browserLineHeight;\n      }\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n      var rootWindow = this.domBindings.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder; // todo rethink\n      var leftHolder = this.inlineStartOverlay.clone.wtTable.holder; // todo rethink\n\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n        scrollLeft = _ref[0],\n        scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null; // todo rethink\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n      this.refreshAll();\n    }\n\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar.\n     */\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n        scrollTop = master.scrollTop;\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.inlineStartOverlay.needFullRender) {\n        this.inlineStartOverlay.clone.wtTable.holder.scrollTop = scrollTop; // todo rethink, *overlay.setScroll*()\n      }\n    }\n\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.inlineStartOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n      var wtTable = this.wtTable;\n      var rootWindow = this.domBindings.rootWindow;\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n      this.registerListeners();\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.resizeObserver.disconnect();\n      this.eventManager.destroy();\n      // todo, probably all below `destory` calls has no sense. To analyze\n      this.topOverlay.destroy();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n      this.inlineStartOverlay.destroy();\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.destroy();\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.destroy();\n      }\n      this.destroyed = true;\n    }\n\n    /**\n     * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\n     *                                   the data. It will only work if Table.draw() does not force\n     *                                   rendering anyway.\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wasSpreaderSizeUpdated = this.updateLastSpreaderSize();\n      if (wasSpreaderSizeUpdated) {\n        this.adjustElementsSize();\n      }\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n      this.inlineStartOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.refresh(fastDraw);\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.refresh(fastDraw);\n      }\n    }\n\n    /**\n     * Update the last cached spreader size with the current size.\n     *\n     * @returns {boolean} `true` if the lastSpreaderSize cache was updated, `false` otherwise.\n     */\n  }, {\n    key: \"updateLastSpreaderSize\",\n    value: function updateLastSpreaderSize() {\n      var spreader = this.wtTable.spreader;\n      var width = spreader.clientWidth;\n      var height = spreader.clientHeight;\n      var needsUpdating = width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height;\n      if (needsUpdating) {\n        this.spreaderLastSize.width = width;\n        this.spreaderLastSize.height = height;\n      }\n      return needsUpdating;\n    }\n\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wtViewport = this.wot.wtViewport;\n      var wtTable = this.wtTable;\n      var totalColumns = this.wtSettings.getSetting('totalColumns');\n      var totalRows = this.wtSettings.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.inlineStartOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n      if (this.scrollbarSize > 0) {\n        // todo refactoring, looking as a part of logic which should be moved outside the class\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n          rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n          rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n          holderScrollHeight = _wtTable$holder.scrollHeight,\n          holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n      this.topOverlay.adjustElementsSize(force);\n      this.inlineStartOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      if (!this.wtTable.isVisible()) {\n        return;\n      }\n      this.topOverlay.applyToDOM();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n      this.inlineStartOverlay.applyToDOM();\n    }\n\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element An element to process.\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (overlay) {\n        if (!overlay) {\n          return;\n        }\n        if (overlay.clone && overlay.clone.wtTable.TABLE.contains(element)) {\n          // todo demeter\n          result = overlay.clone;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Synchronize the class names between the main overlay table and the tables on the other overlays.\n     *\n     */\n  }, {\n    key: \"syncOverlayTableClassNames\",\n    value: function syncOverlayTableClassNames() {\n      var masterTable = this.wtTable.TABLE;\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n        elem.clone.wtTable.TABLE.className = masterTable.className; // todo demeter\n      });\n    }\n  }]);\n\n  return Overlays;\n}();\nexport default Overlays;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","Constructor","Function","instance","_setPrototypeOf","arguments","sham","Proxy","Boolean","valueOf","call","e","o","p","Object","setPrototypeOf","__proto__","_classCallCheck","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","value","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","getScrollableElement","getScrollbarWidth","requestAnimationFrame","arrayEach","isKey","isChrome","InlineStartOverlay","TopOverlay","TopInlineStartCornerOverlay","BottomOverlay","BottomInlineStartCornerOverlay","Overlays","wotInstance","facadeGetter","domBindings","wtSettings","eventManager","wtTable","_this","ResizeObserver","entries","Array","isArray","getSetting","wot","_this$domBindings","rootDocument","rootWindow","scrollbarSize","isOverflowHidden","getComputedStyle","wtRootElement","parentNode","getPropertyValue","scrollableElement","holder","TABLE","initOverlays","hasScrollbarBottom","hasScrollbarRight","destroyed","keyPressed","spreaderLastSize","width","height","verticalScrolling","horizontalScrolling","initBrowserLineHeight","registerListeners","lastScrollX","scrollX","lastScrollY","scrollY","getOverlays","includeMaster","overlays","topOverlay","topInlineStartCornerOverlay","inlineStartOverlay","bottomOverlay","bottomInlineStartCornerOverlay","_this$domBindings2","computedStyle","body","lineHeight","parseInt","lineHeightFalback","fontSize","browserLineHeight","concat","updateStateOfRendering","syncScroll","needFullRender","refreshAll","drawn","destroy","draw","onScroll","_this2","_this$domBindings3","topOverlayScrollableElement","mainTableScrollableElement","inlineStartOverlayScrollableElement","addEventListener","documentElement","event","onKeyDown","onKeyUp","onTableScroll","passive","isHighPixelRatio","devicePixelRatio","isScrollOnWindow","preventWheel","wheelEventOptions","onCloneWheel","forEach","overlay","clone","resizeTimeout","clearTimeout","setTimeout","resizeObserver","observe","parentElement","deregisterListeners","clearEvents","masterHorizontal","masterVertical","contains","syncScrollPositions","preventDefault","shouldNotWheelVertically","shouldNotWheelHorizontally","isScrollPossible","translateMouseWheelToScroll","keyCode","deltaY","isNaN","wheelDeltaY","deltaX","wheelDeltaX","deltaMode","isScrollVerticallyPossible","scrollVertically","isScrollHorizontallyPossible","scrollHorizontally","delta","previousScroll","scrollTop","scrollLeft","topHolder","leftHolder","_ref","bottomHolder","syncScrollWithMaster","master","updateMainScrollableElements","updateMainScrollableElement","disconnect","refresh","fastDraw","wasSpreaderSizeUpdated","updateLastSpreaderSize","adjustElementsSize","spreader","clientWidth","clientHeight","needsUpdating","force","wtViewport","totalColumns","totalRows","headerRowSize","getRowHeaderWidth","headerColumnSize","getColumnHeaderHeight","hiderStyle","hider","style","sumCellSizes","_wtTable$wtRootElemen","rootElemScrollHeight","scrollHeight","rootElemScrollWidth","scrollWidth","_wtTable$holder","holderScrollHeight","holderScrollWidth","applyToDOM","isVisible","getParentOverlay","element","result","syncOverlayTableClassNames","masterTable","elem","className"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/3rdparty/walkontable/src/overlays.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { getScrollableElement, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { requestAnimationFrame } from \"../../../helpers/feature.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { isChrome } from \"../../../helpers/browser.mjs\";\nimport { InlineStartOverlay, TopOverlay, TopInlineStartCornerOverlay, BottomOverlay, BottomInlineStartCornerOverlay } from \"./overlay/index.mjs\";\n/**\n * @class Overlays\n */\nvar Overlays = /*#__PURE__*/function () {\n  /**\n   * Walkontable instance's reference.\n   *\n   * @protected\n   * @type {Walkontable}\n   */\n\n  /**\n   * Refer to the TopOverlay instance.\n   *\n   * @protected\n   * @type {TopOverlay}\n   */\n\n  /**\n   * Refer to the BottomOverlay instance.\n   *\n   * @protected\n   * @type {BottomOverlay}\n   */\n\n  /**\n   * Refer to the InlineStartOverlay or instance.\n   *\n   * @protected\n   * @type {InlineStartOverlay}\n   */\n\n  /**\n   * Refer to the TopInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {TopInlineStartCornerOverlay}\n   */\n\n  /**\n   * Refer to the BottomInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {BottomInlineStartCornerOverlay}\n   */\n\n  /**\n   * Browser line height for purposes of translating mouse wheel.\n   *\n   * @private\n   * @type {number}\n   */\n\n  /**\n   * The walkontable settings.\n   *\n   * @protected\n   * @type {Settings}\n   */\n\n  /**\n   * The instance of the ResizeObserver that observes the size of the Walkontable wrapper element.\n   * In case of the size change detection the `onContainerElementResize` is fired.\n   *\n   * @private\n   * @type {ResizeObserver}\n   */\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @todo refactoring remove.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {DomBindings} domBindings Bindings into DOM.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {MasterTable} wtTable The master table.\n   */\n  function Overlays(wotInstance, facadeGetter, domBindings, wtSettings, eventManager, wtTable) {\n    var _this = this;\n    _classCallCheck(this, Overlays);\n    _defineProperty(this, \"wot\", null);\n    _defineProperty(this, \"topOverlay\", null);\n    _defineProperty(this, \"bottomOverlay\", null);\n    _defineProperty(this, \"inlineStartOverlay\", null);\n    _defineProperty(this, \"topInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"bottomInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"browserLineHeight\", undefined);\n    _defineProperty(this, \"wtSettings\", null);\n    _defineProperty(this, \"resizeObserver\", new ResizeObserver(function (entries) {\n      requestAnimationFrame(function () {\n        if (!Array.isArray(entries) || !entries.length) {\n          return;\n        }\n        _this.wtSettings.getSetting('onContainerElementResize');\n      });\n    }));\n    this.wot = wotInstance;\n    this.wtSettings = wtSettings;\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtTable = wtTable;\n    var _this$domBindings = this.domBindings,\n      rootDocument = _this$domBindings.rootDocument,\n      rootWindow = _this$domBindings.rootWindow;\n\n    // legacy support\n    this.instance = this.wot; // todo refactoring: move to facade\n    this.eventManager = eventManager;\n\n    // TODO refactoring: probably invalid place to this logic\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.initOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.initBrowserLineHeight();\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n\n  /**\n   * Get the list of references to all overlays.\n   *\n   * @param {boolean} [includeMaster = false] If set to `true`, the list will contain the master table as the last\n   * element.\n   * @returns {(TopOverlay|TopInlineStartCornerOverlay|InlineStartOverlay|BottomOverlay|BottomInlineStartCornerOverlay)[]}\n   */\n  _createClass(Overlays, [{\n    key: \"getOverlays\",\n    value: function getOverlays() {\n      var includeMaster = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var overlays = [this.topOverlay, this.topInlineStartCornerOverlay, this.inlineStartOverlay, this.bottomOverlay, this.bottomInlineStartCornerOverlay];\n      if (includeMaster) {\n        overlays.push(this.wtTable);\n      }\n      return overlays;\n    }\n\n    /**\n     * Retrieve browser line height and apply its value to `browserLineHeight`.\n     *\n     * @private\n     */\n  }, {\n    key: \"initBrowserLineHeight\",\n    value: function initBrowserLineHeight() {\n      var _this$domBindings2 = this.domBindings,\n        rootWindow = _this$domBindings2.rootWindow,\n        rootDocument = _this$domBindings2.rootDocument;\n      var computedStyle = rootWindow.getComputedStyle(rootDocument.body);\n      /**\n       * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n       * Https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values.\n       */\n      var lineHeight = parseInt(computedStyle.lineHeight, 10);\n      var lineHeightFalback = parseInt(computedStyle.fontSize, 10) * 1.2;\n      this.browserLineHeight = lineHeight || lineHeightFalback;\n    }\n\n    /**\n     * Prepare overlays based on user settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"initOverlays\",\n    value: function initOverlays() {\n      var args = [this.wot, this.facadeGetter, this.wtSettings, this.domBindings];\n\n      // todo refactoring: IOC, collection or factories.\n      // TODO refactoring, conceive about using generic collection of overlays.\n      this.topOverlay = _construct(TopOverlay, args);\n      this.bottomOverlay = _construct(BottomOverlay, args);\n      this.inlineStartOverlay = _construct(InlineStartOverlay, args);\n\n      // TODO discuss, the controversial here would be removing the lazy creation mechanism for corners.\n      // TODO cond. Has no any visual impact. They're initially hidden in same way like left, top, and bottom overlays.\n      this.topInlineStartCornerOverlay = _construct(TopInlineStartCornerOverlay, args.concat([this.topOverlay, this.inlineStartOverlay]));\n      this.bottomInlineStartCornerOverlay = _construct(BottomInlineStartCornerOverlay, args.concat([this.bottomOverlay, this.inlineStartOverlay]));\n    }\n\n    /**\n     * Update state of rendering, check if changed.\n     *\n     * @package\n     * @returns {boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n     */\n  }, {\n    key: \"updateStateOfRendering\",\n    value: function updateStateOfRendering() {\n      var syncScroll = this.topOverlay.updateStateOfRendering();\n      syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      syncScroll = this.inlineStartOverlay.updateStateOfRendering() || syncScroll;\n\n      // todo refactoring: move conditions into updateStateOfRendering(),\n      if (this.inlineStartOverlay.needFullRender) {\n        if (this.topOverlay.needFullRender) {\n          syncScroll = this.topInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n        if (this.bottomOverlay.needFullRender) {\n          syncScroll = this.bottomInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n      }\n      return syncScroll;\n    }\n\n    /**\n     * Refresh and redraw table.\n     */\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n      if (!this.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n      this.wot.draw(true);\n      if (this.verticalScrolling) {\n        this.inlineStartOverlay.onScroll(); // todo the inlineStartOverlay.onScroll() fires hook. Why is it needed there, not in any another place?\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n\n    /**\n     * Register all necessary event listeners.\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this2 = this;\n      var _this$domBindings3 = this.domBindings,\n        rootDocument = _this$domBindings3.rootDocument,\n        rootWindow = _this$domBindings3.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var inlineStartOverlayScrollableElement = this.inlineStartOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this2.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this2.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this2.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this2.onTableScroll(event);\n      }, {\n        passive: true\n      });\n      if (topOverlayScrollableElement !== inlineStartOverlayScrollableElement) {\n        this.eventManager.addEventListener(inlineStartOverlayScrollableElement, 'scroll', function (event) {\n          return _this2.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this2.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n      var overlays = [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder; // todo rethink, maybe: overlay.getHolder()\n\n          _this2.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this2.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this2.wtSettings.getSetting('onWindowResize');\n        }, 200);\n      });\n      if (!isScrollOnWindow) {\n        this.resizeObserver.observe(this.wtTable.wtRootElement.parentElement);\n      }\n    }\n\n    /**\n     * Deregister all previously registered listeners.\n     */\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n\n    /**\n     * Scroll listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.domBindings.rootWindow;\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n      this.syncScrollPositions(event);\n    }\n\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event The mouse event object.\n     * @param {boolean} preventDefault If `true`, the `preventDefault` will be called on event object.\n     */\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.domBindings.rootWindow;\n\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The keyboard event object.\n     */\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n\n    /**\n     * Key up listener.\n     */\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * this.browserLineHeight;\n        deltaY += deltaY * this.browserLineHeight;\n      }\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n      var rootWindow = this.domBindings.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder; // todo rethink\n      var leftHolder = this.inlineStartOverlay.clone.wtTable.holder; // todo rethink\n\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n        scrollLeft = _ref[0],\n        scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null; // todo rethink\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n      this.refreshAll();\n    }\n\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar.\n     */\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n        scrollTop = master.scrollTop;\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.inlineStartOverlay.needFullRender) {\n        this.inlineStartOverlay.clone.wtTable.holder.scrollTop = scrollTop; // todo rethink, *overlay.setScroll*()\n      }\n    }\n\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.inlineStartOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n      var wtTable = this.wtTable;\n      var rootWindow = this.domBindings.rootWindow;\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n      this.registerListeners();\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.resizeObserver.disconnect();\n      this.eventManager.destroy();\n      // todo, probably all below `destory` calls has no sense. To analyze\n      this.topOverlay.destroy();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n      this.inlineStartOverlay.destroy();\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.destroy();\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.destroy();\n      }\n      this.destroyed = true;\n    }\n\n    /**\n     * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\n     *                                   the data. It will only work if Table.draw() does not force\n     *                                   rendering anyway.\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wasSpreaderSizeUpdated = this.updateLastSpreaderSize();\n      if (wasSpreaderSizeUpdated) {\n        this.adjustElementsSize();\n      }\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n      this.inlineStartOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.refresh(fastDraw);\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.refresh(fastDraw);\n      }\n    }\n\n    /**\n     * Update the last cached spreader size with the current size.\n     *\n     * @returns {boolean} `true` if the lastSpreaderSize cache was updated, `false` otherwise.\n     */\n  }, {\n    key: \"updateLastSpreaderSize\",\n    value: function updateLastSpreaderSize() {\n      var spreader = this.wtTable.spreader;\n      var width = spreader.clientWidth;\n      var height = spreader.clientHeight;\n      var needsUpdating = width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height;\n      if (needsUpdating) {\n        this.spreaderLastSize.width = width;\n        this.spreaderLastSize.height = height;\n      }\n      return needsUpdating;\n    }\n\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wtViewport = this.wot.wtViewport;\n      var wtTable = this.wtTable;\n      var totalColumns = this.wtSettings.getSetting('totalColumns');\n      var totalRows = this.wtSettings.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.inlineStartOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n      if (this.scrollbarSize > 0) {\n        // todo refactoring, looking as a part of logic which should be moved outside the class\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n          rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n          rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n          holderScrollHeight = _wtTable$holder.scrollHeight,\n          holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n      this.topOverlay.adjustElementsSize(force);\n      this.inlineStartOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      if (!this.wtTable.isVisible()) {\n        return;\n      }\n      this.topOverlay.applyToDOM();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n      this.inlineStartOverlay.applyToDOM();\n    }\n\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element An element to process.\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (overlay) {\n        if (!overlay) {\n          return;\n        }\n        if (overlay.clone && overlay.clone.wtTable.TABLE.contains(element)) {\n          // todo demeter\n          result = overlay.clone;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Synchronize the class names between the main overlay table and the tables on the other overlays.\n     *\n     */\n  }, {\n    key: \"syncOverlayTableClassNames\",\n    value: function syncOverlayTableClassNames() {\n      var masterTable = this.wtTable.TABLE;\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n        elem.clone.wtTable.TABLE.className = masterTable.className; // todo demeter\n      });\n    }\n  }]);\n  return Overlays;\n}();\nexport default Overlays;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}