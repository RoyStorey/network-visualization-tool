{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter } from \"../../helpers/array.mjs\";\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\nimport { isVisible } from \"../../helpers/dom/element.mjs\";\nimport GhostTable from \"../../utils/ghostTable.mjs\";\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\nimport { isPercentValue } from \"../../helpers/string.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nexport var PLUGIN_KEY = 'autoRowSize';\nexport var PLUGIN_PRIORITY = 40;\nvar ROW_WIDTHS_MAP_NAME = 'autoRowSize';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin AutoRowSize\n * @class AutoRowSize\n * @description\n * The `AutoRowSize` plugin allows you to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * But, to display Handsontable's [scrollbar](https://handsontable.com/docs/8.0.0/demo-scrolling.html)\n * in a proper size, you need to enable the `AutoRowSize` plugin,\n * by setting the [`autoRowSize`](@/api/options.md#autoRowSize) option to `true`.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of rows) or a percentage value to a config object:\n * ```js\n * // as a number (300 rows in sync, rest async)\n * autoRowSize: {syncLimit: 300},.\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},.\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * // First, let's contruct Handsontable\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   autoRowSize={true}\n * />\n *\n * ...\n *\n * // Access to plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nexport var AutoRowSize = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n  var _super = _createSuper(AutoRowSize);\n  function AutoRowSize(hotInstance) {\n    var _this;\n    _classCallCheck(this, AutoRowSize);\n    _this = _super.call(this, hotInstance);\n    /**\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _this.rowHeightsMap = void 0;\n    /**\n     * Columns header's height cache.\n     *\n     * @private\n     * @type {number}\n     */\n    _this.headerHeight = null;\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {boolean}\n     */\n    _this.inProgress = false;\n    /**\n     * Number of already measured rows (we already know their sizes).\n     *\n     * @type {number}\n     */\n    _this.measuredRows = 0;\n    /**\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _this.rowHeightsMap = new IndexToValueMap();\n    _this.hot.rowIndexMapper.registerMap(ROW_WIDTHS_MAP_NAME, _this.rowHeightsMap);\n\n    // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n    // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n    _this.addHook('beforeRowResize', function (size, row, isDblClick) {\n      return _this.onBeforeRowResize(size, row, isDblClick);\n    });\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      return settings === true || isObject(settings);\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.addHook('beforeChangeRender', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeViewRender', function (force) {\n        return _this2.onBeforeViewRender(force);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n      this.headerHeight = null;\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n\n      // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n      // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n      this.addHook('beforeRowResize', function (size, row, isDblClick) {\n        return _this3.onBeforeRowResize(size, row, isDblClick);\n      });\n    }\n\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {number|object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {number|object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this4 = this;\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // eslint-disable-line max-len\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this4.rowHeightsMap.getValueAtIndex(row) === null) {\n          var _samples = _this4.samplesGenerator.generateRowSamples(row, columnsRange);\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              rowIndex = _ref2[0],\n              sample = _ref2[1];\n            return _this4.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n      if (this.ghostTable.rows.length) {\n        this.hot.batchExecution(function () {\n          _this4.ghostTable.getHeights(function (row, height) {\n            if (row < 0) {\n              _this4.headerHeight = height;\n            } else {\n              _this4.rowHeightsMap.setValueAtIndex(_this4.hot.toPhysicalRow(row), height);\n            }\n          });\n        }, true);\n        this.measuredRows = rowsRange.to + 1;\n        this.ghostTable.clean();\n      }\n    }\n\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specified row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {object|number} colRange Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this5 = this;\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this5.hot) {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false;\n          return;\n        }\n        _this5.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false;\n\n          // @TODO Should call once per render cycle, currently fired separately in different plugins\n          _this5.hot.view.adjustElementsSize(true);\n\n          // tmp\n          if (_this5.hot.view._wt.wtOverlays.inlineStartOverlay.needFullRender) {\n            _this5.hot.view._wt.wtOverlays.inlineStartOverlay.clone.draw();\n          }\n        }\n      };\n      var syncLimit = this.getSyncCalculationLimit();\n\n      // sync\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      }\n      // async\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.adjustElementsSize(false);\n      }\n    }\n\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings()[PLUGIN_KEY];\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : void 0;\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view._wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n      if (isObject(settings)) {\n        limit = settings.syncLimit;\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n      return Math.min(limit, rowsLimit);\n    }\n\n    /**\n     * Get a row's height, as measured in the DOM.\n     *\n     * The height returned includes 1 px of the row's bottom border.\n     *\n     * Mind that this method is different from the\n     * [`getRowHeight()`](@/api/core.md#getrowheight) method\n     * of Handsontable's [Core](@/api/core.md).\n     *\n     * @param {number} row A visual row index.\n     * @param {number} [defaultHeight] If no height is found, `defaultHeight` is returned instead.\n     * @returns {number} The height of the specified row, in pixels.\n     */\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var cachedHeight = row < 0 ? this.headerHeight : this.rowHeightsMap.getValueAtIndex(this.hot.toPhysicalRow(row));\n      var height = defaultHeight;\n      if (cachedHeight !== null && cachedHeight > (defaultHeight || 0)) {\n        height = cachedHeight;\n      }\n      return height;\n    }\n\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {number|undefined}\n     */\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.headerHeight;\n    }\n\n    /**\n     * Get the first visible row.\n     *\n     * @returns {number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view._wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {number} Returns row index or -1 if table is not rendered.\n     */\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view._wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n      return -1;\n    }\n\n    /**\n     * Clears cached heights.\n     */\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.headerHeight = null;\n      this.rowHeightsMap.init();\n    }\n\n    /**\n     * Clears cache by range.\n     *\n     * @param {object|number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this6 = this;\n      var _ref3 = typeof range === 'number' ? {\n          from: range,\n          to: range\n        } : range,\n        from = _ref3.from,\n        to = _ref3.to;\n      this.hot.batchExecution(function () {\n        rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n          _this6.rowHeightsMap.setValueAtIndex(row, null);\n        });\n      }, true);\n    }\n\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.rowHeightsMap.getValues().slice(0, this.measuredRows), function (item) {\n        return item === null;\n      }).length;\n    }\n\n    /**\n     * On before view render listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeViewRender\",\n    value: function onBeforeViewRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force);\n\n      // Calculate rows height synchronously for bottom overlay\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {number} from Row index where was grabbed.\n     * @param {number} to Destination row index.\n     */\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {number} size The size of the current row index.\n     * @param {number} row Current row index.\n     * @param {boolean} isDblClick Indicates if the resize was triggered by doubleclick.\n     * @returns {number}\n     */\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(size, row, isDblClick) {\n      var newSize = size;\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n      return newSize;\n    }\n\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this7 = this;\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this7.hot) {\n            _this7.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     */\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }, {\n    key: \"SETTING_KEYS\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n  return AutoRowSize;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","arrayEach","arrayFilter","cancelAnimationFrame","requestAnimationFrame","isVisible","GhostTable","isObject","valueAccordingPercent","rangeEach","SamplesGenerator","isPercentValue","PhysicalIndexToValueMap","IndexToValueMap","PLUGIN_KEY","PLUGIN_PRIORITY","ROW_WIDTHS_MAP_NAME","AutoRowSize","_BasePlugin","_super","hotInstance","_this","rowHeightsMap","headerHeight","ghostTable","hot","samplesGenerator","row","col","cellValue","getDataAtCell","getColHeader","firstCalculation","inProgress","measuredRows","rowIndexMapper","registerMap","addHook","size","isDblClick","onBeforeRowResize","isEnabled","settings","getSettings","enablePlugin","_this2","enabled","setSamplingOptions","onAfterLoadData","changes","onBeforeChange","recalculateAllRowsHeight","force","onBeforeViewRender","height","getRowHeight","getColumnHeaderHeight","disablePlugin","_this3","calculateRowsHeight","_this4","rowRange","to","countRows","colRange","countCols","rowsRange","columnsRange","samples","generateRowSamples","addColumnHeadersRow","getValueAtIndex","_samples","_ref","_ref2","rowIndex","sample","addRow","rows","batchExecution","getHeights","setValueAtIndex","toPhysicalRow","clean","calculateAllRowsHeight","_this5","current","timer","loop","Math","min","CALCULATION_STEP","view","adjustElementsSize","_wt","wtOverlays","inlineStartOverlay","needFullRender","clone","draw","syncLimit","getSyncCalculationLimit","setting","samplingRatio","allowSampleDuplicates","isNaN","setSampleCount","parseInt","setAllowDuplicates","wtTable","TABLE","clearCache","limit","SYNC_CALCULATION_LIMIT","rowsLimit","defaultHeight","cachedHeight","getFirstVisibleRow","wot","wtViewport","rowsVisibleCalculator","rowsRenderCalculator","getFirstRenderedRow","getLastVisibleRow","getLastRenderedRow","init","clearCacheByRange","range","_this6","_ref3","max","isNeedRecalculate","getValues","item","renderCall","fixedRowsBottom","firstVisibleRow","lastVisibleRow","totalRows","onBeforeRowMove","newSize","_this7","setTimeout","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/autoRowSize/autoRowSize.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach, arrayFilter } from \"../../helpers/array.mjs\";\nimport { cancelAnimationFrame, requestAnimationFrame } from \"../../helpers/feature.mjs\";\nimport { isVisible } from \"../../helpers/dom/element.mjs\";\nimport GhostTable from \"../../utils/ghostTable.mjs\";\nimport { isObject, hasOwnProperty } from \"../../helpers/object.mjs\";\nimport { valueAccordingPercent, rangeEach } from \"../../helpers/number.mjs\";\nimport SamplesGenerator from \"../../utils/samplesGenerator.mjs\";\nimport { isPercentValue } from \"../../helpers/string.mjs\";\nimport { PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nexport var PLUGIN_KEY = 'autoRowSize';\nexport var PLUGIN_PRIORITY = 40;\nvar ROW_WIDTHS_MAP_NAME = 'autoRowSize';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin AutoRowSize\n * @class AutoRowSize\n * @description\n * The `AutoRowSize` plugin allows you to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * But, to display Handsontable's [scrollbar](https://handsontable.com/docs/8.0.0/demo-scrolling.html)\n * in a proper size, you need to enable the `AutoRowSize` plugin,\n * by setting the [`autoRowSize`](@/api/options.md#autoRowSize) option to `true`.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of rows) or a percentage value to a config object:\n * ```js\n * // as a number (300 rows in sync, rest async)\n * autoRowSize: {syncLimit: 300},.\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},.\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * // First, let's contruct Handsontable\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   autoRowSize={true}\n * />\n *\n * ...\n *\n * // Access to plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n * :::\n */\n/* eslint-enable jsdoc/require-description-complete-sentence */\nexport var AutoRowSize = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n  var _super = _createSuper(AutoRowSize);\n  function AutoRowSize(hotInstance) {\n    var _this;\n    _classCallCheck(this, AutoRowSize);\n    _this = _super.call(this, hotInstance);\n    /**\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _this.rowHeightsMap = void 0;\n    /**\n     * Columns header's height cache.\n     *\n     * @private\n     * @type {number}\n     */\n    _this.headerHeight = null;\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {boolean}\n     */\n    _this.inProgress = false;\n    /**\n     * Number of already measured rows (we already know their sizes).\n     *\n     * @type {number}\n     */\n    _this.measuredRows = 0;\n    /**\n     * PhysicalIndexToValueMap to keep and track heights for physical row indexes.\n     *\n     * @private\n     * @type {PhysicalIndexToValueMap}\n     */\n    _this.rowHeightsMap = new IndexToValueMap();\n    _this.hot.rowIndexMapper.registerMap(ROW_WIDTHS_MAP_NAME, _this.rowHeightsMap);\n\n    // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n    // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n    _this.addHook('beforeRowResize', function (size, row, isDblClick) {\n      return _this.onBeforeRowResize(size, row, isDblClick);\n    });\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      return settings === true || isObject(settings);\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.addHook('beforeChangeRender', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeViewRender', function (force) {\n        return _this2.onBeforeViewRender(force);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n      this.headerHeight = null;\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n\n      // Leave the listener active to allow auto-sizing the rows when the plugin is disabled.\n      // This is necesseary for height recalculation for resize handler doubleclick (ManualRowResize).\n      this.addHook('beforeRowResize', function (size, row, isDblClick) {\n        return _this3.onBeforeRowResize(size, row, isDblClick);\n      });\n    }\n\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {number|object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {number|object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this4 = this;\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      // eslint-disable-line max-len\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this4.rowHeightsMap.getValueAtIndex(row) === null) {\n          var _samples = _this4.samplesGenerator.generateRowSamples(row, columnsRange);\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              rowIndex = _ref2[0],\n              sample = _ref2[1];\n            return _this4.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n      if (this.ghostTable.rows.length) {\n        this.hot.batchExecution(function () {\n          _this4.ghostTable.getHeights(function (row, height) {\n            if (row < 0) {\n              _this4.headerHeight = height;\n            } else {\n              _this4.rowHeightsMap.setValueAtIndex(_this4.hot.toPhysicalRow(row), height);\n            }\n          });\n        }, true);\n        this.measuredRows = rowsRange.to + 1;\n        this.ghostTable.clean();\n      }\n    }\n\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specified row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {object|number} colRange Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this5 = this;\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this5.hot) {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false;\n          return;\n        }\n        _this5.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this5.inProgress = false;\n\n          // @TODO Should call once per render cycle, currently fired separately in different plugins\n          _this5.hot.view.adjustElementsSize(true);\n\n          // tmp\n          if (_this5.hot.view._wt.wtOverlays.inlineStartOverlay.needFullRender) {\n            _this5.hot.view._wt.wtOverlays.inlineStartOverlay.clone.draw();\n          }\n        }\n      };\n      var syncLimit = this.getSyncCalculationLimit();\n\n      // sync\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      }\n      // async\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.adjustElementsSize(false);\n      }\n    }\n\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings()[PLUGIN_KEY];\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? setting.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? setting.allowSampleDuplicates : void 0;\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view._wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      var settings = this.hot.getSettings()[PLUGIN_KEY];\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n      if (isObject(settings)) {\n        limit = settings.syncLimit;\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n      return Math.min(limit, rowsLimit);\n    }\n\n    /**\n     * Get a row's height, as measured in the DOM.\n     *\n     * The height returned includes 1 px of the row's bottom border.\n     *\n     * Mind that this method is different from the\n     * [`getRowHeight()`](@/api/core.md#getrowheight) method\n     * of Handsontable's [Core](@/api/core.md).\n     *\n     * @param {number} row A visual row index.\n     * @param {number} [defaultHeight] If no height is found, `defaultHeight` is returned instead.\n     * @returns {number} The height of the specified row, in pixels.\n     */\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var cachedHeight = row < 0 ? this.headerHeight : this.rowHeightsMap.getValueAtIndex(this.hot.toPhysicalRow(row));\n      var height = defaultHeight;\n      if (cachedHeight !== null && cachedHeight > (defaultHeight || 0)) {\n        height = cachedHeight;\n      }\n      return height;\n    }\n\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {number|undefined}\n     */\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.headerHeight;\n    }\n\n    /**\n     * Get the first visible row.\n     *\n     * @returns {number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view._wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {number} Returns row index or -1 if table is not rendered.\n     */\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view._wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n      return -1;\n    }\n\n    /**\n     * Clears cached heights.\n     */\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.headerHeight = null;\n      this.rowHeightsMap.init();\n    }\n\n    /**\n     * Clears cache by range.\n     *\n     * @param {object|number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this6 = this;\n      var _ref3 = typeof range === 'number' ? {\n          from: range,\n          to: range\n        } : range,\n        from = _ref3.from,\n        to = _ref3.to;\n      this.hot.batchExecution(function () {\n        rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n          _this6.rowHeightsMap.setValueAtIndex(row, null);\n        });\n      }, true);\n    }\n\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.rowHeightsMap.getValues().slice(0, this.measuredRows), function (item) {\n        return item === null;\n      }).length;\n    }\n\n    /**\n     * On before view render listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeViewRender\",\n    value: function onBeforeViewRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force);\n\n      // Calculate rows height synchronously for bottom overlay\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {number} from Row index where was grabbed.\n     * @param {number} to Destination row index.\n     */\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {number} size The size of the current row index.\n     * @param {number} row Current row index.\n     * @param {boolean} isDblClick Indicates if the resize was triggered by doubleclick.\n     * @returns {number}\n     */\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(size, row, isDblClick) {\n      var newSize = size;\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n      return newSize;\n    }\n\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this7 = this;\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this7.hot) {\n            _this7.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes 2D array containing information about each of the edited cells.\n     */\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }, {\n    key: \"SETTING_KEYS\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n  return AutoRowSize;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}