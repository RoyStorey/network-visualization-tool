{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\nimport { getListWithRemovedItems as getListWithoutIndexes } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/actionsOnIndexes.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\n/**\n * Map for storing mappings from an physical index to a value. Those entries are linked and stored in a certain order.\n *\n * It does not update stored values on remove/add row or column action. Otherwise, order of entries is updated after\n * such changes.\n *\n * @class LinkedPhysicalIndexToValueMap\n */\nexport var LinkedPhysicalIndexToValueMap = /*#__PURE__*/function (_IndexMap) {\n  _inherits(LinkedPhysicalIndexToValueMap, _IndexMap);\n  var _super = _createSuper(LinkedPhysicalIndexToValueMap);\n  function LinkedPhysicalIndexToValueMap() {\n    var _this;\n    _classCallCheck(this, LinkedPhysicalIndexToValueMap);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"orderOfIndexes\", []);\n    return _this;\n  }\n  _createClass(LinkedPhysicalIndexToValueMap, [{\n    key: \"getValues\",\n    value:\n    /**\n     * Get full list of ordered values for particular indexes.\n     *\n     * @returns {Array}\n     */\n    function getValues() {\n      var _this2 = this;\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return _this2.indexedValues[physicalIndex];\n      });\n    }\n\n    /**\n     * Set new values for particular indexes. Entries are linked and stored in a certain order.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.orderOfIndexes = _toConsumableArray(Array(values.length).keys());\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValues\", this).call(this, values);\n    }\n\n    /**\n     * Set value at index and add it to the linked list of entries. Entries are stored in a certain order.\n     *\n     * Note: Value will be added at the end of the queue.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     * @param {number} position Position to which entry will be added.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.orderOfIndexes.length;\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n        if (this.orderOfIndexes.includes(index) === false) {\n          this.orderOfIndexes.splice(position, 0, index);\n        }\n        this.runLocalHooks('change');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Clear value for particular index.\n     *\n     * @param {number} physicalIndex Physical index.\n     */\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(physicalIndex) {\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, [physicalIndex]);\n      if (isFunction(this.initValueOrFn)) {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn(physicalIndex));\n      } else {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn);\n      }\n    }\n\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.orderOfIndexes.length;\n    }\n\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.orderOfIndexes.length = 0;\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setDefaultValues\", this).call(this, length);\n    }\n\n    /**\n     * Add values to list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {number} insertionIndex Position inside the list.\n     * @param {Array} insertedIndexes List of inserted indexes.\n     */\n  }, {\n    key: \"insert\",\n    value: function insert(insertionIndex, insertedIndexes) {\n      this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n      this.orderOfIndexes = getIncreasedIndexes(this.orderOfIndexes, insertedIndexes);\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"insert\", this).call(this, insertionIndex, insertedIndexes);\n    }\n\n    /**\n     * Remove values from the list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {Array} removedIndexes List of removed indexes.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(removedIndexes) {\n      this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, removedIndexes);\n      this.orderOfIndexes = getDecreasedIndexes(this.orderOfIndexes, removedIndexes);\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"remove\", this).call(this, removedIndexes);\n    }\n\n    /**\n     * Get every entry containing index and value, respecting order of indexes.\n     *\n     * @returns {Array}\n     */\n  }, {\n    key: \"getEntries\",\n    value: function getEntries() {\n      var _this3 = this;\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return [physicalIndex, _this3.getValueAtIndex(physicalIndex)];\n      });\n    }\n  }]);\n  return LinkedPhysicalIndexToValueMap;\n}(IndexMap);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","IndexMap","getListWithRemovedItems","getListWithInsertedItems","getListWithoutIndexes","getDecreasedIndexes","getIncreasedIndexes","isFunction","LinkedPhysicalIndexToValueMap","_IndexMap","_super","_this","_len","args","_key","concat","getValues","_this2","orderOfIndexes","map","physicalIndex","indexedValues","setValues","values","keys","setValueAtIndex","index","position","includes","splice","runLocalHooks","clearValue","initValueOrFn","getLength","setDefaultValues","insert","insertionIndex","insertedIndexes","remove","removedIndexes","getEntries","_this3","getValueAtIndex"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/translations/maps/linkedPhysicalIndexToValueMap.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { IndexMap } from \"./indexMap.mjs\";\nimport { getListWithRemovedItems, getListWithInsertedItems } from \"./utils/physicallyIndexed.mjs\";\nimport { getListWithRemovedItems as getListWithoutIndexes } from \"./utils/indexesSequence.mjs\";\nimport { getDecreasedIndexes, getIncreasedIndexes } from \"./utils/actionsOnIndexes.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\n/**\n * Map for storing mappings from an physical index to a value. Those entries are linked and stored in a certain order.\n *\n * It does not update stored values on remove/add row or column action. Otherwise, order of entries is updated after\n * such changes.\n *\n * @class LinkedPhysicalIndexToValueMap\n */\nexport var LinkedPhysicalIndexToValueMap = /*#__PURE__*/function (_IndexMap) {\n  _inherits(LinkedPhysicalIndexToValueMap, _IndexMap);\n  var _super = _createSuper(LinkedPhysicalIndexToValueMap);\n  function LinkedPhysicalIndexToValueMap() {\n    var _this;\n    _classCallCheck(this, LinkedPhysicalIndexToValueMap);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"orderOfIndexes\", []);\n    return _this;\n  }\n  _createClass(LinkedPhysicalIndexToValueMap, [{\n    key: \"getValues\",\n    value:\n    /**\n     * Get full list of ordered values for particular indexes.\n     *\n     * @returns {Array}\n     */\n    function getValues() {\n      var _this2 = this;\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return _this2.indexedValues[physicalIndex];\n      });\n    }\n\n    /**\n     * Set new values for particular indexes. Entries are linked and stored in a certain order.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @param {Array} values List of set values.\n     */\n  }, {\n    key: \"setValues\",\n    value: function setValues(values) {\n      this.orderOfIndexes = _toConsumableArray(Array(values.length).keys());\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValues\", this).call(this, values);\n    }\n\n    /**\n     * Set value at index and add it to the linked list of entries. Entries are stored in a certain order.\n     *\n     * Note: Value will be added at the end of the queue.\n     *\n     * @param {number} index The index.\n     * @param {*} value The value to save.\n     * @param {number} position Position to which entry will be added.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"setValueAtIndex\",\n    value: function setValueAtIndex(index, value) {\n      var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.orderOfIndexes.length;\n      if (index < this.indexedValues.length) {\n        this.indexedValues[index] = value;\n        if (this.orderOfIndexes.includes(index) === false) {\n          this.orderOfIndexes.splice(position, 0, index);\n        }\n        this.runLocalHooks('change');\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Clear value for particular index.\n     *\n     * @param {number} physicalIndex Physical index.\n     */\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(physicalIndex) {\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, [physicalIndex]);\n      if (isFunction(this.initValueOrFn)) {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn(physicalIndex));\n      } else {\n        _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setValueAtIndex\", this).call(this, physicalIndex, this.initValueOrFn);\n      }\n    }\n\n    /**\n     * Get length of the index map.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.orderOfIndexes.length;\n    }\n\n    /**\n     * Set default values for elements from `0` to `n`, where `n` is equal to the handled variable.\n     *\n     * Note: Please keep in mind that `change` hook triggered by the method may not update cache of a collection immediately.\n     *\n     * @private\n     * @param {number} [length] Length of list.\n     */\n  }, {\n    key: \"setDefaultValues\",\n    value: function setDefaultValues() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.indexedValues.length;\n      this.orderOfIndexes.length = 0;\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"setDefaultValues\", this).call(this, length);\n    }\n\n    /**\n     * Add values to list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {number} insertionIndex Position inside the list.\n     * @param {Array} insertedIndexes List of inserted indexes.\n     */\n  }, {\n    key: \"insert\",\n    value: function insert(insertionIndex, insertedIndexes) {\n      this.indexedValues = getListWithInsertedItems(this.indexedValues, insertionIndex, insertedIndexes, this.initValueOrFn);\n      this.orderOfIndexes = getIncreasedIndexes(this.orderOfIndexes, insertedIndexes);\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"insert\", this).call(this, insertionIndex, insertedIndexes);\n    }\n\n    /**\n     * Remove values from the list and reorganize. It updates list of indexes related to ordered values.\n     *\n     * @private\n     * @param {Array} removedIndexes List of removed indexes.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(removedIndexes) {\n      this.indexedValues = getListWithRemovedItems(this.indexedValues, removedIndexes);\n      this.orderOfIndexes = getListWithoutIndexes(this.orderOfIndexes, removedIndexes);\n      this.orderOfIndexes = getDecreasedIndexes(this.orderOfIndexes, removedIndexes);\n      _get(_getPrototypeOf(LinkedPhysicalIndexToValueMap.prototype), \"remove\", this).call(this, removedIndexes);\n    }\n\n    /**\n     * Get every entry containing index and value, respecting order of indexes.\n     *\n     * @returns {Array}\n     */\n  }, {\n    key: \"getEntries\",\n    value: function getEntries() {\n      var _this3 = this;\n      return this.orderOfIndexes.map(function (physicalIndex) {\n        return [physicalIndex, _this3.getValueAtIndex(physicalIndex)];\n      });\n    }\n  }]);\n  return LinkedPhysicalIndexToValueMap;\n}(IndexMap);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}