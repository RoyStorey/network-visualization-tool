{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar _templateObject, _templateObject2;\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isNumeric } from \"../../helpers/number.mjs\";\nimport { isLeftClick, isRightClick } from \"../../helpers/dom/event.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { ACTIVE_HEADER_TYPE, HEADER_TYPE } from \"../../selection/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport StateManager from \"./stateManager/index.mjs\";\nimport GhostTable from \"./utils/ghostTable.mjs\";\nexport var PLUGIN_KEY = 'nestedHeaders';\nexport var PLUGIN_PRIORITY = 280;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin NestedHeaders\n * @class NestedHeaders\n *\n * @description\n * The plugin allows to create a nested header structure, using the HTML's colspan attribute.\n *\n * To make any header wider (covering multiple table columns), it's corresponding configuration array element should be\n * provided as an object with `label` and `colspan` properties. The `label` property defines the header's label,\n * while the `colspan` property defines a number of columns that the header should cover.\n *\n * __Note__ that the plugin supports a *nested* structure, which means, any header cannot be wider than it's \"parent\". In\n * other words, headers cannot overlap each other.\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   nestedHeaders: [\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ],\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   nestedHeaders={[\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ]}\n * />\n * ```\n * :::\n */\nvar _stateManager = /*#__PURE__*/new WeakMap();\nvar _hidingIndexMapObserver = /*#__PURE__*/new WeakMap();\nexport var NestedHeaders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(NestedHeaders, _BasePlugin);\n  var _super = _createSuper(NestedHeaders);\n  function NestedHeaders() {\n    var _this;\n    _classCallCheck(this, NestedHeaders);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _stateManager, {\n      writable: true,\n      value: new StateManager()\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hidingIndexMapObserver, {\n      writable: true,\n      value: null\n    });\n    _defineProperty(_assertThisInitialized(_this), \"ghostTable\", new GhostTable(_this.hot, function (row, column) {\n      return _this.getHeaderSettings(row, column);\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"detectedOverlappedHeaders\", false);\n    return _this;\n  }\n  _createClass(NestedHeaders, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Check if plugin is enabled.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var _this$hot$getSettings = this.hot.getSettings(),\n        nestedHeaders = _this$hot$getSettings.nestedHeaders;\n      if (!Array.isArray(nestedHeaders) || !Array.isArray(nestedHeaders[0])) {\n        warn(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"Your Nested Headers plugin configuration is invalid. The settings has to be \\n                        passed as an array of arrays e.q. [['A1', { label: 'A2', colspan: 2 }]]\"], [\"Your Nested Headers plugin configuration is invalid. The settings has to be\\\\x20\\n                        passed as an array of arrays e.q. [['A1', { label: 'A2', colspan: 2 }]]\"]))));\n      }\n      this.addHook('init', function () {\n        return _this2.onInit();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('afterOnCellMouseDown', function () {\n        return _this2.onAfterOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterGetColumnHeaderRenderers', function (array) {\n        return _this2.onAfterGetColumnHeaderRenderers(array);\n      });\n      this.addHook('modifyColWidth', function () {\n        return _this2.onModifyColWidth.apply(_this2, arguments);\n      });\n      this.addHook('modifyColumnHeaderValue', function () {\n        return _this2.onModifyColumnHeaderValue.apply(_this2, arguments);\n      });\n      this.addHook('beforeHighlightingColumnHeader', function () {\n        return _this2.onBeforeHighlightingColumnHeader.apply(_this2, arguments);\n      });\n      this.addHook('beforeCopy', function () {\n        return _this2.onBeforeCopy.apply(_this2, arguments);\n      });\n      this.addHook('afterViewportColumnCalculatorOverride', function () {\n        return _this2.onAfterViewportColumnCalculatorOverride.apply(_this2, arguments);\n      });\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"enablePlugin\", this).call(this);\n      this.updatePlugin(); // @TODO: Workaround for broken plugin initialization abstraction.\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`nestedHeaders`](@/api/options.md#nestedheaders)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      var _this3 = this;\n      if (!this.hot.view) {\n        // @TODO: Workaround for broken plugin initialization abstraction.\n        return;\n      }\n      var _this$hot$getSettings2 = this.hot.getSettings(),\n        nestedHeaders = _this$hot$getSettings2.nestedHeaders;\n      _classPrivateFieldGet(this, _stateManager).setColumnsLimit(this.hot.countCols());\n      if (Array.isArray(nestedHeaders)) {\n        this.detectedOverlappedHeaders = _classPrivateFieldGet(this, _stateManager).setState(nestedHeaders);\n      }\n      if (this.detectedOverlappedHeaders) {\n        warn(toSingleLine(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"Your Nested Headers plugin setup contains overlapping headers. This kind of configuration \\n                        is currently not supported.\"], [\"Your Nested Headers plugin setup contains overlapping headers. This kind of configuration\\\\x20\\n                        is currently not supported.\"]))));\n      }\n      if (this.enabled) {\n        // This line covers the case when a developer uses the external hiding maps to manipulate\n        // the columns' visibility. The tree state built from the settings - which is always built\n        // as if all the columns are visible, needs to be modified to be in sync with a dataset.\n        this.hot.columnIndexMapper.hidingMapsCollection.getMergedValues().forEach(function (isColumnHidden, physicalColumnIndex) {\n          var actionName = isColumnHidden === true ? 'hide-column' : 'show-column';\n          _classPrivateFieldGet(_this3, _stateManager).triggerColumnModification(actionName, physicalColumnIndex);\n        });\n      }\n      if (!_classPrivateFieldGet(this, _hidingIndexMapObserver) && this.enabled) {\n        _classPrivateFieldSet(this, _hidingIndexMapObserver, this.hot.columnIndexMapper.createChangesObserver('hiding').subscribe(function (changes) {\n          changes.forEach(function (_ref) {\n            var op = _ref.op,\n              columnIndex = _ref.index,\n              newValue = _ref.newValue;\n            if (op === 'replace') {\n              var actionName = newValue === true ? 'hide-column' : 'show-column';\n              _classPrivateFieldGet(_this3, _stateManager).triggerColumnModification(actionName, columnIndex);\n            }\n          });\n          _this3.ghostTable.buildWidthsMap();\n        }));\n      }\n      this.ghostTable.setLayersCount(this.getLayersCount()).buildWidthsMap();\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearColspans();\n      _classPrivateFieldGet(this, _stateManager).clear();\n      _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n      _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n      this.ghostTable.clear();\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Returns an instance of the internal state manager of the plugin.\n     *\n     * @private\n     * @returns {StateManager}\n     */\n  }, {\n    key: \"getStateManager\",\n    value: function getStateManager() {\n      return _classPrivateFieldGet(this, _stateManager);\n    }\n\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @private\n     * @returns {number}\n     */\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _stateManager).getLayersCount();\n    }\n\n    /**\n     * Gets column settings for a specified header. The returned object contains\n     * information about the header label, its colspan length, or if it is hidden\n     * in the header renderers.\n     *\n     * @private\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object}\n     */\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      return _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, columnIndex);\n    }\n\n    /**\n     * Clear the colspans remaining after plugin usage.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearColspans\",\n    value: function clearColspans() {\n      if (!this.hot.view) {\n        return;\n      }\n      var wt = this.hot.view._wt;\n      var headerLevels = wt.getSetting('columnHeaders').length;\n      var mainHeaders = wt.wtTable.THEAD;\n      var topHeaders = wt.wtOverlays.topOverlay.clone.wtTable.THEAD;\n      var topLeftCornerHeaders = wt.wtOverlays.topInlineStartCornerOverlay ? wt.wtOverlays.topInlineStartCornerOverlay.clone.wtTable.THEAD : null;\n      for (var i = 0; i < headerLevels; i++) {\n        var masterLevel = mainHeaders.childNodes[i];\n        if (!masterLevel) {\n          break;\n        }\n        var topLevel = topHeaders.childNodes[i];\n        var topLeftCornerLevel = topLeftCornerHeaders ? topLeftCornerHeaders.childNodes[i] : null;\n        for (var j = 0, masterNodes = masterLevel.childNodes.length; j < masterNodes; j++) {\n          masterLevel.childNodes[j].removeAttribute('colspan');\n          removeClass(masterLevel.childNodes[j], 'hiddenHeader');\n          if (topLevel && topLevel.childNodes[j]) {\n            topLevel.childNodes[j].removeAttribute('colspan');\n            removeClass(topLevel.childNodes[j], 'hiddenHeader');\n          }\n          if (topLeftCornerHeaders && topLeftCornerLevel && topLeftCornerLevel.childNodes[j]) {\n            topLeftCornerLevel.childNodes[j].removeAttribute('colspan');\n            removeClass(topLeftCornerLevel.childNodes[j], 'hiddenHeader');\n          }\n        }\n      }\n    }\n\n    /**\n     * Generates the appropriate header renderer for a header row.\n     *\n     * @private\n     * @param {number} headerLevel The index of header level counting from the top (positive\n     *                             values counting from 0 to N).\n     * @returns {Function}\n     * @fires Hooks#afterGetColHeader\n     */\n  }, {\n    key: \"headerRendererFactory\",\n    value: function headerRendererFactory(headerLevel) {\n      var _this4 = this;\n      var fixedColumnsStart = this.hot.view._wt.getSetting('fixedColumnsStart');\n      return function (renderedColumnIndex, TH) {\n        var _classPrivateFieldGet2;\n        var _this4$hot = _this4.hot,\n          columnIndexMapper = _this4$hot.columnIndexMapper,\n          view = _this4$hot.view;\n        var visualColumnIndex = columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n        if (visualColumnIndex === null) {\n          visualColumnIndex = renderedColumnIndex;\n        }\n        TH.removeAttribute('colspan');\n        removeClass(TH, 'hiddenHeader');\n        var _ref2 = (_classPrivateFieldGet2 = _classPrivateFieldGet(_this4, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : {\n            label: ''\n          },\n          colspan = _ref2.colspan,\n          isHidden = _ref2.isHidden,\n          isPlaceholder = _ref2.isPlaceholder;\n        if (isPlaceholder || isHidden) {\n          addClass(TH, 'hiddenHeader');\n        } else if (colspan > 1) {\n          var _wtOverlays$topInline, _wtOverlays$inlineSta;\n          var wtOverlays = view._wt.wtOverlays;\n          var isTopInlineStartOverlay = (_wtOverlays$topInline = wtOverlays.topInlineStartCornerOverlay) === null || _wtOverlays$topInline === void 0 ? void 0 : _wtOverlays$topInline.clone.wtTable.THEAD.contains(TH);\n          var isInlineStartOverlay = (_wtOverlays$inlineSta = wtOverlays.inlineStartOverlay) === null || _wtOverlays$inlineSta === void 0 ? void 0 : _wtOverlays$inlineSta.clone.wtTable.THEAD.contains(TH);\n\n          // Check if there is a fixed column enabled, if so then reduce colspan to fixed column width.\n          var correctedColspan = isTopInlineStartOverlay || isInlineStartOverlay ? Math.min(colspan, fixedColumnsStart - renderedColumnIndex) : colspan;\n          if (correctedColspan > 1) {\n            TH.setAttribute('colspan', correctedColspan);\n          }\n        }\n        _this4.hot.view.appendColHeader(visualColumnIndex, TH, function () {\n          return _this4.getColumnHeaderValue.apply(_this4, arguments);\n        }, headerLevel);\n      };\n    }\n\n    /**\n     * Returns the column header value for specified column and header level index.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n     *                             and negative (-1 to -N) values. For positive values, 0 points to the\n     *                             top most header, and for negative direction, -1 points to the most bottom\n     *                             header (the header closest to the cells).\n     * @returns {string} Returns the column header value to update.\n     */\n  }, {\n    key: \"getColumnHeaderValue\",\n    value: function getColumnHeaderValue(visualColumnIndex, headerLevel) {\n      var _classPrivateFieldGet3;\n      var _ref3 = (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet3 !== void 0 ? _classPrivateFieldGet3 : {},\n        isHidden = _ref3.isHidden,\n        isPlaceholder = _ref3.isPlaceholder;\n      if (isPlaceholder || isHidden) {\n        return '';\n      }\n      return this.hot.getColHeader(visualColumnIndex, headerLevel);\n    }\n\n    /**\n     * Allows to control which header DOM element will be used to highlight.\n     *\n     * @private\n     * @param {number} visualColumn A visual column index of the highlighted row header.\n     * @param {number} headerLevel A row header level that is currently highlighted.\n     * @param {object} highlightMeta An object with meta data that describes the highlight state.\n     * @returns {number}\n     */\n  }, {\n    key: \"onBeforeHighlightingColumnHeader\",\n    value: function onBeforeHighlightingColumnHeader(visualColumn, headerLevel, highlightMeta) {\n      var headerNodeData = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumn);\n      if (!headerNodeData) {\n        return visualColumn;\n      }\n      var classNames = highlightMeta.classNames,\n        columnCursor = highlightMeta.columnCursor,\n        selectionType = highlightMeta.selectionType,\n        selectionWidth = highlightMeta.selectionWidth;\n      var _classPrivateFieldGet4 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumn),\n        isRoot = _classPrivateFieldGet4.isRoot,\n        colspan = _classPrivateFieldGet4.colspan;\n      if (selectionType === HEADER_TYPE) {\n        if (!isRoot) {\n          return headerNodeData.columnIndex;\n        }\n      } else if (selectionType === ACTIVE_HEADER_TYPE) {\n        if (colspan > selectionWidth - columnCursor || !isRoot) {\n          // Reset the class names array so the generated TH element won't be modified.\n          classNames.length = 0;\n        }\n      }\n      return visualColumn;\n    }\n\n    /**\n     * Listens the `beforeCopy` hook that allows processing the copied column headers so that the\n     * merged column headers do not propagate the value for each column but only once at the beginning\n     * of the column.\n     *\n     * @private\n     * @param {Array[]} data An array of arrays which contains data to copied.\n     * @param {object[]} copyableRanges An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\n     *                                  which will copied.\n     * @param {{ columnHeadersCount: number }} copiedHeadersCount An object with keys that holds information with\n     *                                                            the number of copied headers.\n     */\n  }, {\n    key: \"onBeforeCopy\",\n    value: function onBeforeCopy(data, copyableRanges, _ref4) {\n      var columnHeadersCount = _ref4.columnHeadersCount;\n      if (columnHeadersCount === 0) {\n        return;\n      }\n      for (var rangeIndex = 0; rangeIndex < copyableRanges.length; rangeIndex++) {\n        var _copyableRanges$range = copyableRanges[rangeIndex],\n          startRow = _copyableRanges$range.startRow,\n          startCol = _copyableRanges$range.startCol,\n          endRow = _copyableRanges$range.endRow,\n          endCol = _copyableRanges$range.endCol;\n        var rowsCount = endRow - startRow + 1;\n        var columnsCount = startCol - endCol + 1;\n\n        // do not process dataset ranges and column headers where only one column is copied\n        if (startRow >= 0 || columnsCount === 1) {\n          break;\n        }\n        for (var column = startCol; column <= endCol; column++) {\n          for (var row = startRow; row <= endRow; row++) {\n            var _classPrivateFieldGet5;\n            var zeroBasedColumnHeaderLevel = rowsCount + row;\n            var zeroBasedColumnIndex = column - startCol;\n            if (zeroBasedColumnIndex === 0) {\n              continue; // eslint-disable-line no-continue\n            }\n\n            var isRoot = (_classPrivateFieldGet5 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(row, column)) === null || _classPrivateFieldGet5 === void 0 ? void 0 : _classPrivateFieldGet5.isRoot;\n            if (isRoot === false) {\n              data[zeroBasedColumnHeaderLevel][zeroBasedColumnIndex] = '';\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Allows blocking the column selection that is controlled by the core Selection module.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {CellCoords} TD The table cell or header element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (headerNodeData) {\n        // Block the Selection module in controlling how the columns are selected. Pass the\n        // responsibility of the column selection to this plugin (see \"onAfterOnCellMouseDown\" hook).\n        controller.column = true;\n      }\n    }\n\n    /**\n     * Allows to control how the column selection based on the coordinates and the nested headers is made.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     */\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (!headerNodeData) {\n        return;\n      }\n      var selection = this.hot.selection;\n      var currentSelection = selection.isSelected() ? selection.getSelectedRange().current() : null;\n      var columnsToSelect = [];\n      var columnIndex = headerNodeData.columnIndex,\n        origColspan = headerNodeData.origColspan;\n\n      // The Selection module doesn't allow it to extend its behavior easily. That's why here we need\n      // to re-implement the \"click\" and \"shift\" behavior. As a workaround, the logic for the nested\n      // headers must implement a similar logic as in the original Selection handler\n      // (see src/selection/mouseEventHandler.js).\n      var allowRightClickSelection = !selection.inInSelection(coords);\n      if (event.shiftKey && currentSelection) {\n        if (coords.col < currentSelection.from.col) {\n          columnsToSelect.push(currentSelection.getTopEndCorner().col, columnIndex, coords.row);\n        } else if (coords.col > currentSelection.from.col) {\n          columnsToSelect.push(currentSelection.getTopStartCorner().col, columnIndex + origColspan - 1, coords.row);\n        } else {\n          columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n        }\n      } else if (isLeftClick(event) || isRightClick(event) && allowRightClickSelection) {\n        columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n      }\n\n      // The plugin takes control of how the columns are selected.\n      selection.selectColumns.apply(selection, columnsToSelect);\n    }\n\n    /**\n     * Makes the header-selection properly select the nested headers.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var _this$hot;\n      if (!this.hot.view.isMouseDown()) {\n        return;\n      }\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (!headerNodeData) {\n        return;\n      }\n      var columnIndex = headerNodeData.columnIndex,\n        origColspan = headerNodeData.origColspan;\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var topStartCoords = selectedRange.getTopStartCorner();\n      var bottomEndCoords = selectedRange.getBottomEndCorner();\n      var from = selectedRange.from;\n\n      // Block the Selection module in controlling how the columns and cells are selected.\n      // From now on, the plugin is responsible for the selection.\n      controller.column = true;\n      controller.cell = true;\n      var columnsToSelect = [];\n      if (coords.col < from.col) {\n        columnsToSelect.push(bottomEndCoords.col, columnIndex);\n      } else if (coords.col > from.col) {\n        columnsToSelect.push(topStartCoords.col, columnIndex + origColspan - 1);\n      } else {\n        columnsToSelect.push(columnIndex, columnIndex + origColspan - 1);\n      }\n      (_this$hot = this.hot).selectColumns.apply(_this$hot, columnsToSelect);\n    }\n\n    /**\n     * `afterGetColumnHeader` hook callback - prepares the header structure.\n     *\n     * @private\n     * @param {Array} renderersArray Array of renderers.\n     */\n  }, {\n    key: \"onAfterGetColumnHeaderRenderers\",\n    value: function onAfterGetColumnHeaderRenderers(renderersArray) {\n      renderersArray.length = 0;\n      for (var headerLayer = 0; headerLayer < _classPrivateFieldGet(this, _stateManager).getLayersCount(); headerLayer++) {\n        renderersArray.push(this.headerRendererFactory(headerLayer));\n      }\n    }\n\n    /**\n     * Make the renderer render the first nested column in its entirety.\n     *\n     * @private\n     * @param {object} calc Viewport column calculator.\n     */\n  }, {\n    key: \"onAfterViewportColumnCalculatorOverride\",\n    value: function onAfterViewportColumnCalculatorOverride(calc) {\n      var headerLayersCount = _classPrivateFieldGet(this, _stateManager).getLayersCount();\n      var newStartColumn = calc.startColumn;\n      var nonRenderable = !!headerLayersCount;\n      for (var headerLayer = 0; headerLayer < headerLayersCount; headerLayer++) {\n        var startColumn = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(headerLayer, calc.startColumn);\n        var renderedStartColumn = this.hot.columnIndexMapper.getRenderableFromVisualIndex(startColumn);\n\n        // If any of the headers for that column index is rendered, all of them should be rendered properly, see\n        // comment below.\n        if (startColumn >= 0) {\n          nonRenderable = false;\n        }\n\n        // `renderedStartColumn` can be `null` if the leftmost columns are hidden. In that case -> ignore that header\n        // level, as it should be handled by the \"parent\" header\n        if (isNumeric(renderedStartColumn) && renderedStartColumn < calc.startColumn) {\n          newStartColumn = renderedStartColumn;\n          break;\n        }\n      }\n\n      // If no headers for the provided column index are renderable, start rendering from the beginning of the upmost\n      // header for that position.\n      calc.startColumn = nonRenderable ? _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(0, newStartColumn).columnIndex : newStartColumn;\n    }\n\n    /**\n     * `modifyColWidth` hook callback - returns width from cache, when is greater than incoming from hook.\n     *\n     * @private\n     * @param {number} width Width from hook.\n     * @param {number} column Visual index of an column.\n     * @returns {number}\n     */\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, column) {\n      var cachedWidth = this.ghostTable.getWidth(column);\n      return width > cachedWidth ? width : cachedWidth;\n    }\n\n    /**\n     * Listens the `modifyColumnHeaderValue` hook that overwrites the column headers values based on\n     * the internal state and settings of the plugin.\n     *\n     * @private\n     * @param {string} value The column header value.\n     * @param {number} visualColumnIndex The visual column index.\n     * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n     *                             and negative (-1 to -N) values. For positive values, 0 points to the\n     *                             top most header, and for negative direction, -1 points to the most bottom\n     *                             header (the header closest to the cells).\n     * @returns {string} Returns the column header value to update.\n     */\n  }, {\n    key: \"onModifyColumnHeaderValue\",\n    value: function onModifyColumnHeaderValue(value, visualColumnIndex, headerLevel) {\n      var _classPrivateFieldGet6;\n      var _ref5 = (_classPrivateFieldGet6 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet6 !== void 0 ? _classPrivateFieldGet6 : {\n          label: ''\n        },\n        label = _ref5.label;\n      return label;\n    }\n\n    /**\n     * Updates the plugin state after HoT initialization.\n     *\n     * @private\n     */\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      // @TODO: Workaround for broken plugin initialization abstraction.\n      this.updatePlugin();\n    }\n\n    /**\n     * Updates the plugin state after new dataset load.\n     *\n     * @private\n     * @param {Array[]} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded\n     *                              during the initialization.\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData(sourceData, initialLoad) {\n      if (!initialLoad) {\n        this.updatePlugin();\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _stateManager, null);\n      if (_classPrivateFieldGet(this, _hidingIndexMapObserver) !== null) {\n        _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n        _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n      }\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"destroy\", this).call(this);\n    }\n\n    /**\n     * Gets the tree data that belongs to the column headers pointed by the passed coordinates.\n     *\n     * @private\n     * @param {CellCoords} coords The CellCoords instance.\n     * @returns {object|undefined}\n     */\n  }, {\n    key: \"_getHeaderTreeNodeDataByCoords\",\n    value: function _getHeaderTreeNodeDataByCoords(coords) {\n      if (coords.row >= 0 || coords.col < 0) {\n        return;\n      }\n      return _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(coords.row, coords.col);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * The state manager for the nested headers.\n     *\n     * @private\n     * @type {StateManager}\n     */\n  }]);\n\n  return NestedHeaders;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_templateObject","_templateObject2","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","_classPrivateFieldSet","_classExtractFieldDescriptor","_classApplyDescriptorSet","_classPrivateFieldGet","_classApplyDescriptorGet","action","addClass","removeClass","isNumeric","isLeftClick","isRightClick","toSingleLine","warn","ACTIVE_HEADER_TYPE","HEADER_TYPE","BasePlugin","StateManager","GhostTable","PLUGIN_KEY","PLUGIN_PRIORITY","_stateManager","WeakMap","_hidingIndexMapObserver","NestedHeaders","_BasePlugin","_super","_this","_len","args","Array","_key","concat","hot","row","column","getHeaderSettings","isEnabled","getSettings","enablePlugin","_this2","enabled","_this$hot$getSettings","nestedHeaders","isArray","addHook","onInit","onAfterLoadData","onBeforeOnCellMouseDown","onAfterOnCellMouseDown","onBeforeOnCellMouseOver","array","onAfterGetColumnHeaderRenderers","onModifyColWidth","onModifyColumnHeaderValue","onBeforeHighlightingColumnHeader","onBeforeCopy","onAfterViewportColumnCalculatorOverride","updatePlugin","_this3","view","_this$hot$getSettings2","setColumnsLimit","countCols","detectedOverlappedHeaders","setState","columnIndexMapper","hidingMapsCollection","getMergedValues","forEach","isColumnHidden","physicalColumnIndex","actionName","triggerColumnModification","createChangesObserver","subscribe","changes","_ref","op","columnIndex","index","newValue","ghostTable","buildWidthsMap","setLayersCount","getLayersCount","disablePlugin","clearColspans","clear","unsubscribe","getStateManager","headerLevel","wt","_wt","headerLevels","getSetting","mainHeaders","wtTable","THEAD","topHeaders","wtOverlays","topOverlay","clone","topLeftCornerHeaders","topInlineStartCornerOverlay","masterLevel","childNodes","topLevel","topLeftCornerLevel","j","masterNodes","removeAttribute","headerRendererFactory","_this4","fixedColumnsStart","renderedColumnIndex","TH","_classPrivateFieldGet2","_this4$hot","visualColumnIndex","getVisualFromRenderableIndex","_ref2","label","colspan","isHidden","isPlaceholder","_wtOverlays$topInline","_wtOverlays$inlineSta","isTopInlineStartOverlay","contains","isInlineStartOverlay","inlineStartOverlay","correctedColspan","Math","min","setAttribute","appendColHeader","getColumnHeaderValue","_classPrivateFieldGet3","_ref3","getColHeader","visualColumn","highlightMeta","headerNodeData","getHeaderTreeNodeData","classNames","columnCursor","selectionType","selectionWidth","_classPrivateFieldGet4","isRoot","data","copyableRanges","_ref4","columnHeadersCount","rangeIndex","_copyableRanges$range","startRow","startCol","endRow","endCol","rowsCount","columnsCount","_classPrivateFieldGet5","zeroBasedColumnHeaderLevel","zeroBasedColumnIndex","event","coords","TD","controller","_getHeaderTreeNodeDataByCoords","selection","currentSelection","isSelected","getSelectedRange","current","columnsToSelect","origColspan","allowRightClickSelection","inInSelection","shiftKey","col","from","push","getTopEndCorner","getTopStartCorner","selectColumns","_this$hot","isMouseDown","selectedRange","getSelectedRangeLast","topStartCoords","bottomEndCoords","getBottomEndCorner","cell","renderersArray","headerLayer","calc","headerLayersCount","newStartColumn","startColumn","nonRenderable","findLeftMostColumnIndex","renderedStartColumn","getRenderableFromVisualIndex","width","cachedWidth","getWidth","_classPrivateFieldGet6","_ref5","sourceData","initialLoad","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/nestedHeaders/nestedHeaders.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _templateObject, _templateObject2;\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isNumeric } from \"../../helpers/number.mjs\";\nimport { isLeftClick, isRightClick } from \"../../helpers/dom/event.mjs\";\nimport { toSingleLine } from \"../../helpers/templateLiteralTag.mjs\";\nimport { warn } from \"../../helpers/console.mjs\";\nimport { ACTIVE_HEADER_TYPE, HEADER_TYPE } from \"../../selection/index.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport StateManager from \"./stateManager/index.mjs\";\nimport GhostTable from \"./utils/ghostTable.mjs\";\nexport var PLUGIN_KEY = 'nestedHeaders';\nexport var PLUGIN_PRIORITY = 280;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin NestedHeaders\n * @class NestedHeaders\n *\n * @description\n * The plugin allows to create a nested header structure, using the HTML's colspan attribute.\n *\n * To make any header wider (covering multiple table columns), it's corresponding configuration array element should be\n * provided as an object with `label` and `colspan` properties. The `label` property defines the header's label,\n * while the `colspan` property defines a number of columns that the header should cover.\n *\n * __Note__ that the plugin supports a *nested* structure, which means, any header cannot be wider than it's \"parent\". In\n * other words, headers cannot overlap each other.\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   nestedHeaders: [\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ],\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   nestedHeaders={[\n *     ['A', {label: 'B', colspan: 8}, 'C'],\n *     ['D', {label: 'E', colspan: 4}, {label: 'F', colspan: 4}, 'G'],\n *     ['H', {label: 'I', colspan: 2}, {label: 'J', colspan: 2}, {label: 'K', colspan: 2}, {label: 'L', colspan: 2}, 'M'],\n *     ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W']\n *  ]}\n * />\n * ```\n * :::\n */\nvar _stateManager = /*#__PURE__*/new WeakMap();\nvar _hidingIndexMapObserver = /*#__PURE__*/new WeakMap();\nexport var NestedHeaders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(NestedHeaders, _BasePlugin);\n  var _super = _createSuper(NestedHeaders);\n  function NestedHeaders() {\n    var _this;\n    _classCallCheck(this, NestedHeaders);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _stateManager, {\n      writable: true,\n      value: new StateManager()\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hidingIndexMapObserver, {\n      writable: true,\n      value: null\n    });\n    _defineProperty(_assertThisInitialized(_this), \"ghostTable\", new GhostTable(_this.hot, function (row, column) {\n      return _this.getHeaderSettings(row, column);\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"detectedOverlappedHeaders\", false);\n    return _this;\n  }\n  _createClass(NestedHeaders, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Check if plugin is enabled.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var _this$hot$getSettings = this.hot.getSettings(),\n        nestedHeaders = _this$hot$getSettings.nestedHeaders;\n      if (!Array.isArray(nestedHeaders) || !Array.isArray(nestedHeaders[0])) {\n        warn(toSingleLine(_templateObject || (_templateObject = _taggedTemplateLiteral([\"Your Nested Headers plugin configuration is invalid. The settings has to be \\n                        passed as an array of arrays e.q. [['A1', { label: 'A2', colspan: 2 }]]\"], [\"Your Nested Headers plugin configuration is invalid. The settings has to be\\\\x20\\n                        passed as an array of arrays e.q. [['A1', { label: 'A2', colspan: 2 }]]\"]))));\n      }\n      this.addHook('init', function () {\n        return _this2.onInit();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('afterOnCellMouseDown', function () {\n        return _this2.onAfterOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('beforeOnCellMouseOver', function () {\n        return _this2.onBeforeOnCellMouseOver.apply(_this2, arguments);\n      });\n      this.addHook('afterGetColumnHeaderRenderers', function (array) {\n        return _this2.onAfterGetColumnHeaderRenderers(array);\n      });\n      this.addHook('modifyColWidth', function () {\n        return _this2.onModifyColWidth.apply(_this2, arguments);\n      });\n      this.addHook('modifyColumnHeaderValue', function () {\n        return _this2.onModifyColumnHeaderValue.apply(_this2, arguments);\n      });\n      this.addHook('beforeHighlightingColumnHeader', function () {\n        return _this2.onBeforeHighlightingColumnHeader.apply(_this2, arguments);\n      });\n      this.addHook('beforeCopy', function () {\n        return _this2.onBeforeCopy.apply(_this2, arguments);\n      });\n      this.addHook('afterViewportColumnCalculatorOverride', function () {\n        return _this2.onAfterViewportColumnCalculatorOverride.apply(_this2, arguments);\n      });\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"enablePlugin\", this).call(this);\n      this.updatePlugin(); // @TODO: Workaround for broken plugin initialization abstraction.\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`nestedHeaders`](@/api/options.md#nestedheaders)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      var _this3 = this;\n      if (!this.hot.view) {\n        // @TODO: Workaround for broken plugin initialization abstraction.\n        return;\n      }\n      var _this$hot$getSettings2 = this.hot.getSettings(),\n        nestedHeaders = _this$hot$getSettings2.nestedHeaders;\n      _classPrivateFieldGet(this, _stateManager).setColumnsLimit(this.hot.countCols());\n      if (Array.isArray(nestedHeaders)) {\n        this.detectedOverlappedHeaders = _classPrivateFieldGet(this, _stateManager).setState(nestedHeaders);\n      }\n      if (this.detectedOverlappedHeaders) {\n        warn(toSingleLine(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"Your Nested Headers plugin setup contains overlapping headers. This kind of configuration \\n                        is currently not supported.\"], [\"Your Nested Headers plugin setup contains overlapping headers. This kind of configuration\\\\x20\\n                        is currently not supported.\"]))));\n      }\n      if (this.enabled) {\n        // This line covers the case when a developer uses the external hiding maps to manipulate\n        // the columns' visibility. The tree state built from the settings - which is always built\n        // as if all the columns are visible, needs to be modified to be in sync with a dataset.\n        this.hot.columnIndexMapper.hidingMapsCollection.getMergedValues().forEach(function (isColumnHidden, physicalColumnIndex) {\n          var actionName = isColumnHidden === true ? 'hide-column' : 'show-column';\n          _classPrivateFieldGet(_this3, _stateManager).triggerColumnModification(actionName, physicalColumnIndex);\n        });\n      }\n      if (!_classPrivateFieldGet(this, _hidingIndexMapObserver) && this.enabled) {\n        _classPrivateFieldSet(this, _hidingIndexMapObserver, this.hot.columnIndexMapper.createChangesObserver('hiding').subscribe(function (changes) {\n          changes.forEach(function (_ref) {\n            var op = _ref.op,\n              columnIndex = _ref.index,\n              newValue = _ref.newValue;\n            if (op === 'replace') {\n              var actionName = newValue === true ? 'hide-column' : 'show-column';\n              _classPrivateFieldGet(_this3, _stateManager).triggerColumnModification(actionName, columnIndex);\n            }\n          });\n          _this3.ghostTable.buildWidthsMap();\n        }));\n      }\n      this.ghostTable.setLayersCount(this.getLayersCount()).buildWidthsMap();\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearColspans();\n      _classPrivateFieldGet(this, _stateManager).clear();\n      _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n      _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n      this.ghostTable.clear();\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Returns an instance of the internal state manager of the plugin.\n     *\n     * @private\n     * @returns {StateManager}\n     */\n  }, {\n    key: \"getStateManager\",\n    value: function getStateManager() {\n      return _classPrivateFieldGet(this, _stateManager);\n    }\n\n    /**\n     * Gets a total number of headers levels.\n     *\n     * @private\n     * @returns {number}\n     */\n  }, {\n    key: \"getLayersCount\",\n    value: function getLayersCount() {\n      return _classPrivateFieldGet(this, _stateManager).getLayersCount();\n    }\n\n    /**\n     * Gets column settings for a specified header. The returned object contains\n     * information about the header label, its colspan length, or if it is hidden\n     * in the header renderers.\n     *\n     * @private\n     * @param {number} headerLevel Header level (0 = most distant to the table).\n     * @param {number} columnIndex A visual column index.\n     * @returns {object}\n     */\n  }, {\n    key: \"getHeaderSettings\",\n    value: function getHeaderSettings(headerLevel, columnIndex) {\n      return _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, columnIndex);\n    }\n\n    /**\n     * Clear the colspans remaining after plugin usage.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearColspans\",\n    value: function clearColspans() {\n      if (!this.hot.view) {\n        return;\n      }\n      var wt = this.hot.view._wt;\n      var headerLevels = wt.getSetting('columnHeaders').length;\n      var mainHeaders = wt.wtTable.THEAD;\n      var topHeaders = wt.wtOverlays.topOverlay.clone.wtTable.THEAD;\n      var topLeftCornerHeaders = wt.wtOverlays.topInlineStartCornerOverlay ? wt.wtOverlays.topInlineStartCornerOverlay.clone.wtTable.THEAD : null;\n      for (var i = 0; i < headerLevels; i++) {\n        var masterLevel = mainHeaders.childNodes[i];\n        if (!masterLevel) {\n          break;\n        }\n        var topLevel = topHeaders.childNodes[i];\n        var topLeftCornerLevel = topLeftCornerHeaders ? topLeftCornerHeaders.childNodes[i] : null;\n        for (var j = 0, masterNodes = masterLevel.childNodes.length; j < masterNodes; j++) {\n          masterLevel.childNodes[j].removeAttribute('colspan');\n          removeClass(masterLevel.childNodes[j], 'hiddenHeader');\n          if (topLevel && topLevel.childNodes[j]) {\n            topLevel.childNodes[j].removeAttribute('colspan');\n            removeClass(topLevel.childNodes[j], 'hiddenHeader');\n          }\n          if (topLeftCornerHeaders && topLeftCornerLevel && topLeftCornerLevel.childNodes[j]) {\n            topLeftCornerLevel.childNodes[j].removeAttribute('colspan');\n            removeClass(topLeftCornerLevel.childNodes[j], 'hiddenHeader');\n          }\n        }\n      }\n    }\n\n    /**\n     * Generates the appropriate header renderer for a header row.\n     *\n     * @private\n     * @param {number} headerLevel The index of header level counting from the top (positive\n     *                             values counting from 0 to N).\n     * @returns {Function}\n     * @fires Hooks#afterGetColHeader\n     */\n  }, {\n    key: \"headerRendererFactory\",\n    value: function headerRendererFactory(headerLevel) {\n      var _this4 = this;\n      var fixedColumnsStart = this.hot.view._wt.getSetting('fixedColumnsStart');\n      return function (renderedColumnIndex, TH) {\n        var _classPrivateFieldGet2;\n        var _this4$hot = _this4.hot,\n          columnIndexMapper = _this4$hot.columnIndexMapper,\n          view = _this4$hot.view;\n        var visualColumnIndex = columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n        if (visualColumnIndex === null) {\n          visualColumnIndex = renderedColumnIndex;\n        }\n        TH.removeAttribute('colspan');\n        removeClass(TH, 'hiddenHeader');\n        var _ref2 = (_classPrivateFieldGet2 = _classPrivateFieldGet(_this4, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : {\n            label: ''\n          },\n          colspan = _ref2.colspan,\n          isHidden = _ref2.isHidden,\n          isPlaceholder = _ref2.isPlaceholder;\n        if (isPlaceholder || isHidden) {\n          addClass(TH, 'hiddenHeader');\n        } else if (colspan > 1) {\n          var _wtOverlays$topInline, _wtOverlays$inlineSta;\n          var wtOverlays = view._wt.wtOverlays;\n          var isTopInlineStartOverlay = (_wtOverlays$topInline = wtOverlays.topInlineStartCornerOverlay) === null || _wtOverlays$topInline === void 0 ? void 0 : _wtOverlays$topInline.clone.wtTable.THEAD.contains(TH);\n          var isInlineStartOverlay = (_wtOverlays$inlineSta = wtOverlays.inlineStartOverlay) === null || _wtOverlays$inlineSta === void 0 ? void 0 : _wtOverlays$inlineSta.clone.wtTable.THEAD.contains(TH);\n\n          // Check if there is a fixed column enabled, if so then reduce colspan to fixed column width.\n          var correctedColspan = isTopInlineStartOverlay || isInlineStartOverlay ? Math.min(colspan, fixedColumnsStart - renderedColumnIndex) : colspan;\n          if (correctedColspan > 1) {\n            TH.setAttribute('colspan', correctedColspan);\n          }\n        }\n        _this4.hot.view.appendColHeader(visualColumnIndex, TH, function () {\n          return _this4.getColumnHeaderValue.apply(_this4, arguments);\n        }, headerLevel);\n      };\n    }\n\n    /**\n     * Returns the column header value for specified column and header level index.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n     *                             and negative (-1 to -N) values. For positive values, 0 points to the\n     *                             top most header, and for negative direction, -1 points to the most bottom\n     *                             header (the header closest to the cells).\n     * @returns {string} Returns the column header value to update.\n     */\n  }, {\n    key: \"getColumnHeaderValue\",\n    value: function getColumnHeaderValue(visualColumnIndex, headerLevel) {\n      var _classPrivateFieldGet3;\n      var _ref3 = (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet3 !== void 0 ? _classPrivateFieldGet3 : {},\n        isHidden = _ref3.isHidden,\n        isPlaceholder = _ref3.isPlaceholder;\n      if (isPlaceholder || isHidden) {\n        return '';\n      }\n      return this.hot.getColHeader(visualColumnIndex, headerLevel);\n    }\n\n    /**\n     * Allows to control which header DOM element will be used to highlight.\n     *\n     * @private\n     * @param {number} visualColumn A visual column index of the highlighted row header.\n     * @param {number} headerLevel A row header level that is currently highlighted.\n     * @param {object} highlightMeta An object with meta data that describes the highlight state.\n     * @returns {number}\n     */\n  }, {\n    key: \"onBeforeHighlightingColumnHeader\",\n    value: function onBeforeHighlightingColumnHeader(visualColumn, headerLevel, highlightMeta) {\n      var headerNodeData = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumn);\n      if (!headerNodeData) {\n        return visualColumn;\n      }\n      var classNames = highlightMeta.classNames,\n        columnCursor = highlightMeta.columnCursor,\n        selectionType = highlightMeta.selectionType,\n        selectionWidth = highlightMeta.selectionWidth;\n      var _classPrivateFieldGet4 = _classPrivateFieldGet(this, _stateManager).getHeaderSettings(headerLevel, visualColumn),\n        isRoot = _classPrivateFieldGet4.isRoot,\n        colspan = _classPrivateFieldGet4.colspan;\n      if (selectionType === HEADER_TYPE) {\n        if (!isRoot) {\n          return headerNodeData.columnIndex;\n        }\n      } else if (selectionType === ACTIVE_HEADER_TYPE) {\n        if (colspan > selectionWidth - columnCursor || !isRoot) {\n          // Reset the class names array so the generated TH element won't be modified.\n          classNames.length = 0;\n        }\n      }\n      return visualColumn;\n    }\n\n    /**\n     * Listens the `beforeCopy` hook that allows processing the copied column headers so that the\n     * merged column headers do not propagate the value for each column but only once at the beginning\n     * of the column.\n     *\n     * @private\n     * @param {Array[]} data An array of arrays which contains data to copied.\n     * @param {object[]} copyableRanges An array of objects with ranges of the visual indexes (`startRow`, `startCol`, `endRow`, `endCol`)\n     *                                  which will copied.\n     * @param {{ columnHeadersCount: number }} copiedHeadersCount An object with keys that holds information with\n     *                                                            the number of copied headers.\n     */\n  }, {\n    key: \"onBeforeCopy\",\n    value: function onBeforeCopy(data, copyableRanges, _ref4) {\n      var columnHeadersCount = _ref4.columnHeadersCount;\n      if (columnHeadersCount === 0) {\n        return;\n      }\n      for (var rangeIndex = 0; rangeIndex < copyableRanges.length; rangeIndex++) {\n        var _copyableRanges$range = copyableRanges[rangeIndex],\n          startRow = _copyableRanges$range.startRow,\n          startCol = _copyableRanges$range.startCol,\n          endRow = _copyableRanges$range.endRow,\n          endCol = _copyableRanges$range.endCol;\n        var rowsCount = endRow - startRow + 1;\n        var columnsCount = startCol - endCol + 1;\n\n        // do not process dataset ranges and column headers where only one column is copied\n        if (startRow >= 0 || columnsCount === 1) {\n          break;\n        }\n        for (var column = startCol; column <= endCol; column++) {\n          for (var row = startRow; row <= endRow; row++) {\n            var _classPrivateFieldGet5;\n            var zeroBasedColumnHeaderLevel = rowsCount + row;\n            var zeroBasedColumnIndex = column - startCol;\n            if (zeroBasedColumnIndex === 0) {\n              continue; // eslint-disable-line no-continue\n            }\n\n            var isRoot = (_classPrivateFieldGet5 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(row, column)) === null || _classPrivateFieldGet5 === void 0 ? void 0 : _classPrivateFieldGet5.isRoot;\n            if (isRoot === false) {\n              data[zeroBasedColumnHeaderLevel][zeroBasedColumnIndex] = '';\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Allows blocking the column selection that is controlled by the core Selection module.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {CellCoords} TD The table cell or header element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (headerNodeData) {\n        // Block the Selection module in controlling how the columns are selected. Pass the\n        // responsibility of the column selection to this plugin (see \"onAfterOnCellMouseDown\" hook).\n        controller.column = true;\n      }\n    }\n\n    /**\n     * Allows to control how the column selection based on the coordinates and the nested headers is made.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     */\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (!headerNodeData) {\n        return;\n      }\n      var selection = this.hot.selection;\n      var currentSelection = selection.isSelected() ? selection.getSelectedRange().current() : null;\n      var columnsToSelect = [];\n      var columnIndex = headerNodeData.columnIndex,\n        origColspan = headerNodeData.origColspan;\n\n      // The Selection module doesn't allow it to extend its behavior easily. That's why here we need\n      // to re-implement the \"click\" and \"shift\" behavior. As a workaround, the logic for the nested\n      // headers must implement a similar logic as in the original Selection handler\n      // (see src/selection/mouseEventHandler.js).\n      var allowRightClickSelection = !selection.inInSelection(coords);\n      if (event.shiftKey && currentSelection) {\n        if (coords.col < currentSelection.from.col) {\n          columnsToSelect.push(currentSelection.getTopEndCorner().col, columnIndex, coords.row);\n        } else if (coords.col > currentSelection.from.col) {\n          columnsToSelect.push(currentSelection.getTopStartCorner().col, columnIndex + origColspan - 1, coords.row);\n        } else {\n          columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n        }\n      } else if (isLeftClick(event) || isRightClick(event) && allowRightClickSelection) {\n        columnsToSelect.push(columnIndex, columnIndex + origColspan - 1, coords.row);\n      }\n\n      // The plugin takes control of how the columns are selected.\n      selection.selectColumns.apply(selection, columnsToSelect);\n    }\n\n    /**\n     * Makes the header-selection properly select the nested headers.\n     *\n     * @private\n     * @param {MouseEvent} event Mouse event.\n     * @param {CellCoords} coords Cell coords object containing the visual coordinates of the clicked cell.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, controller) {\n      var _this$hot;\n      if (!this.hot.view.isMouseDown()) {\n        return;\n      }\n      var headerNodeData = this._getHeaderTreeNodeDataByCoords(coords);\n      if (!headerNodeData) {\n        return;\n      }\n      var columnIndex = headerNodeData.columnIndex,\n        origColspan = headerNodeData.origColspan;\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var topStartCoords = selectedRange.getTopStartCorner();\n      var bottomEndCoords = selectedRange.getBottomEndCorner();\n      var from = selectedRange.from;\n\n      // Block the Selection module in controlling how the columns and cells are selected.\n      // From now on, the plugin is responsible for the selection.\n      controller.column = true;\n      controller.cell = true;\n      var columnsToSelect = [];\n      if (coords.col < from.col) {\n        columnsToSelect.push(bottomEndCoords.col, columnIndex);\n      } else if (coords.col > from.col) {\n        columnsToSelect.push(topStartCoords.col, columnIndex + origColspan - 1);\n      } else {\n        columnsToSelect.push(columnIndex, columnIndex + origColspan - 1);\n      }\n      (_this$hot = this.hot).selectColumns.apply(_this$hot, columnsToSelect);\n    }\n\n    /**\n     * `afterGetColumnHeader` hook callback - prepares the header structure.\n     *\n     * @private\n     * @param {Array} renderersArray Array of renderers.\n     */\n  }, {\n    key: \"onAfterGetColumnHeaderRenderers\",\n    value: function onAfterGetColumnHeaderRenderers(renderersArray) {\n      renderersArray.length = 0;\n      for (var headerLayer = 0; headerLayer < _classPrivateFieldGet(this, _stateManager).getLayersCount(); headerLayer++) {\n        renderersArray.push(this.headerRendererFactory(headerLayer));\n      }\n    }\n\n    /**\n     * Make the renderer render the first nested column in its entirety.\n     *\n     * @private\n     * @param {object} calc Viewport column calculator.\n     */\n  }, {\n    key: \"onAfterViewportColumnCalculatorOverride\",\n    value: function onAfterViewportColumnCalculatorOverride(calc) {\n      var headerLayersCount = _classPrivateFieldGet(this, _stateManager).getLayersCount();\n      var newStartColumn = calc.startColumn;\n      var nonRenderable = !!headerLayersCount;\n      for (var headerLayer = 0; headerLayer < headerLayersCount; headerLayer++) {\n        var startColumn = _classPrivateFieldGet(this, _stateManager).findLeftMostColumnIndex(headerLayer, calc.startColumn);\n        var renderedStartColumn = this.hot.columnIndexMapper.getRenderableFromVisualIndex(startColumn);\n\n        // If any of the headers for that column index is rendered, all of them should be rendered properly, see\n        // comment below.\n        if (startColumn >= 0) {\n          nonRenderable = false;\n        }\n\n        // `renderedStartColumn` can be `null` if the leftmost columns are hidden. In that case -> ignore that header\n        // level, as it should be handled by the \"parent\" header\n        if (isNumeric(renderedStartColumn) && renderedStartColumn < calc.startColumn) {\n          newStartColumn = renderedStartColumn;\n          break;\n        }\n      }\n\n      // If no headers for the provided column index are renderable, start rendering from the beginning of the upmost\n      // header for that position.\n      calc.startColumn = nonRenderable ? _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(0, newStartColumn).columnIndex : newStartColumn;\n    }\n\n    /**\n     * `modifyColWidth` hook callback - returns width from cache, when is greater than incoming from hook.\n     *\n     * @private\n     * @param {number} width Width from hook.\n     * @param {number} column Visual index of an column.\n     * @returns {number}\n     */\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, column) {\n      var cachedWidth = this.ghostTable.getWidth(column);\n      return width > cachedWidth ? width : cachedWidth;\n    }\n\n    /**\n     * Listens the `modifyColumnHeaderValue` hook that overwrites the column headers values based on\n     * the internal state and settings of the plugin.\n     *\n     * @private\n     * @param {string} value The column header value.\n     * @param {number} visualColumnIndex The visual column index.\n     * @param {number} headerLevel The index of header level. The header level accepts positive (0 to N)\n     *                             and negative (-1 to -N) values. For positive values, 0 points to the\n     *                             top most header, and for negative direction, -1 points to the most bottom\n     *                             header (the header closest to the cells).\n     * @returns {string} Returns the column header value to update.\n     */\n  }, {\n    key: \"onModifyColumnHeaderValue\",\n    value: function onModifyColumnHeaderValue(value, visualColumnIndex, headerLevel) {\n      var _classPrivateFieldGet6;\n      var _ref5 = (_classPrivateFieldGet6 = _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(headerLevel, visualColumnIndex)) !== null && _classPrivateFieldGet6 !== void 0 ? _classPrivateFieldGet6 : {\n          label: ''\n        },\n        label = _ref5.label;\n      return label;\n    }\n\n    /**\n     * Updates the plugin state after HoT initialization.\n     *\n     * @private\n     */\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      // @TODO: Workaround for broken plugin initialization abstraction.\n      this.updatePlugin();\n    }\n\n    /**\n     * Updates the plugin state after new dataset load.\n     *\n     * @private\n     * @param {Array[]} sourceData Array of arrays or array of objects containing data.\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded\n     *                              during the initialization.\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData(sourceData, initialLoad) {\n      if (!initialLoad) {\n        this.updatePlugin();\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _stateManager, null);\n      if (_classPrivateFieldGet(this, _hidingIndexMapObserver) !== null) {\n        _classPrivateFieldGet(this, _hidingIndexMapObserver).unsubscribe();\n        _classPrivateFieldSet(this, _hidingIndexMapObserver, null);\n      }\n      _get(_getPrototypeOf(NestedHeaders.prototype), \"destroy\", this).call(this);\n    }\n\n    /**\n     * Gets the tree data that belongs to the column headers pointed by the passed coordinates.\n     *\n     * @private\n     * @param {CellCoords} coords The CellCoords instance.\n     * @returns {object|undefined}\n     */\n  }, {\n    key: \"_getHeaderTreeNodeDataByCoords\",\n    value: function _getHeaderTreeNodeDataByCoords(coords) {\n      if (coords.row >= 0 || coords.col < 0) {\n        return;\n      }\n      return _classPrivateFieldGet(this, _stateManager).getHeaderTreeNodeData(coords.row, coords.col);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * The state manager for the nested headers.\n     *\n     * @private\n     * @type {StateManager}\n     */\n  }]);\n  return NestedHeaders;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}