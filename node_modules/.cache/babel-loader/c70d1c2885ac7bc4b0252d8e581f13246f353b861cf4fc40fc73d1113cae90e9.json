{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * The SelectionRange class is a simple CellRanges collection designed for easy manipulation of the multiple\n * consecutive and non-consecutive selections.\n *\n * @class SelectionRange\n * @util\n */\nvar SelectionRange = /*#__PURE__*/function (_Symbol$iterator) {\n  function SelectionRange(createCellRange) {\n    _classCallCheck(this, SelectionRange);\n    /**\n     * List of all CellRanges added to the class instance.\n     *\n     * @type {CellRange[]}\n     */\n    this.ranges = [];\n    this.createCellRange = createCellRange;\n  }\n\n  /**\n   * Check if selected range is empty.\n   *\n   * @returns {boolean}\n   */\n  _createClass(SelectionRange, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.size() === 0;\n    }\n\n    /**\n     * Set coordinates to the class instance. It clears all previously added coordinates and push `coords`\n     * to the collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"set\",\n    value: function set(coords) {\n      this.clear();\n      this.ranges.push(this.createCellRange(coords));\n      return this;\n    }\n\n    /**\n     * Add coordinates to the class instance. The new coordinates are added to the end of the range collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      this.ranges.push(this.createCellRange(coords));\n      return this;\n    }\n\n    /**\n     * Removes from the stack the last added coordinates.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.ranges.pop();\n      return this;\n    }\n\n    /**\n     * Get last added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"current\",\n    value: function current() {\n      return this.peekByIndex(0);\n    }\n\n    /**\n     * Get previously added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      return this.peekByIndex(-1);\n    }\n\n    /**\n     * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\n     * the coords object is within selection range.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"includes\",\n    value: function includes(coords) {\n      return this.ranges.some(function (cellRange) {\n        return cellRange.includes(coords);\n      });\n    }\n\n    /**\n     * Clear collection.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ranges.length = 0;\n      return this;\n    }\n\n    /**\n     * Get count of added all coordinates added to the selection.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.ranges.length;\n    }\n\n    /**\n     * Peek the coordinates based on the offset where that coordinate resides in the collection.\n     *\n     * @param {number} [offset=0] An offset where the coordinate will be retrieved from.\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"peekByIndex\",\n    value: function peekByIndex() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var rangeIndex = this.size() + offset - 1;\n      var cellRange;\n      if (rangeIndex >= 0) {\n        cellRange = this.ranges[rangeIndex];\n      }\n      return cellRange;\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this.ranges[Symbol.iterator]();\n    }\n  }]);\n  return SelectionRange;\n}(Symbol.iterator);\nexport default SelectionRange;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","SelectionRange","_Symbol$iterator","createCellRange","ranges","value","isEmpty","size","set","coords","clear","push","add","pop","current","peekByIndex","previous","includes","some","cellRange","offset","arguments","rangeIndex"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/selection/range.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * The SelectionRange class is a simple CellRanges collection designed for easy manipulation of the multiple\n * consecutive and non-consecutive selections.\n *\n * @class SelectionRange\n * @util\n */\nvar SelectionRange = /*#__PURE__*/function (_Symbol$iterator) {\n  function SelectionRange(createCellRange) {\n    _classCallCheck(this, SelectionRange);\n    /**\n     * List of all CellRanges added to the class instance.\n     *\n     * @type {CellRange[]}\n     */\n    this.ranges = [];\n    this.createCellRange = createCellRange;\n  }\n\n  /**\n   * Check if selected range is empty.\n   *\n   * @returns {boolean}\n   */\n  _createClass(SelectionRange, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.size() === 0;\n    }\n\n    /**\n     * Set coordinates to the class instance. It clears all previously added coordinates and push `coords`\n     * to the collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"set\",\n    value: function set(coords) {\n      this.clear();\n      this.ranges.push(this.createCellRange(coords));\n      return this;\n    }\n\n    /**\n     * Add coordinates to the class instance. The new coordinates are added to the end of the range collection.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"add\",\n    value: function add(coords) {\n      this.ranges.push(this.createCellRange(coords));\n      return this;\n    }\n\n    /**\n     * Removes from the stack the last added coordinates.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.ranges.pop();\n      return this;\n    }\n\n    /**\n     * Get last added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"current\",\n    value: function current() {\n      return this.peekByIndex(0);\n    }\n\n    /**\n     * Get previously added coordinates from ranges, it returns a CellRange instance.\n     *\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      return this.peekByIndex(-1);\n    }\n\n    /**\n     * Returns `true` if coords is within selection coords. This method iterates through all selection layers to check if\n     * the coords object is within selection range.\n     *\n     * @param {CellCoords} coords The CellCoords instance with defined visual coordinates.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"includes\",\n    value: function includes(coords) {\n      return this.ranges.some(function (cellRange) {\n        return cellRange.includes(coords);\n      });\n    }\n\n    /**\n     * Clear collection.\n     *\n     * @returns {SelectionRange}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ranges.length = 0;\n      return this;\n    }\n\n    /**\n     * Get count of added all coordinates added to the selection.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.ranges.length;\n    }\n\n    /**\n     * Peek the coordinates based on the offset where that coordinate resides in the collection.\n     *\n     * @param {number} [offset=0] An offset where the coordinate will be retrieved from.\n     * @returns {CellRange|undefined}\n     */\n  }, {\n    key: \"peekByIndex\",\n    value: function peekByIndex() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var rangeIndex = this.size() + offset - 1;\n      var cellRange;\n      if (rangeIndex >= 0) {\n        cellRange = this.ranges[rangeIndex];\n      }\n      return cellRange;\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this.ranges[Symbol.iterator]();\n    }\n  }]);\n  return SelectionRange;\n}(Symbol.iterator);\nexport default SelectionRange;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}