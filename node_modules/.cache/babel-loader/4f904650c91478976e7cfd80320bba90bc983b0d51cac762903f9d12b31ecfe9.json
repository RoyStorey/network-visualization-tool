{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n\n/**\n * @class TableView\n * @private\n */\nvar _columnHeadersCount = /*#__PURE__*/new WeakMap();\nvar _rowHeadersCount = /*#__PURE__*/new WeakMap();\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * Instance of {@link Handsontable}.\n   *\n   * @private\n   * @type {Handsontable}\n   */\n\n  /**\n   * Instance of {@link EventManager}.\n   *\n   * @private\n   * @type {EventManager}\n   */\n\n  /**\n   * Current Handsontable's GridSettings object.\n   *\n   * @private\n   * @type {GridSettings}\n   */\n\n  /**\n   * Main <THEAD> element.\n   *\n   * @private\n   * @type {HTMLTableSectionElement}\n   */\n\n  /**\n   * Main <TBODY> element.\n   *\n   * @private\n   * @type {HTMLTableSectionElement}\n   */\n\n  /**\n   * Main Walkontable instance.\n   *\n   * @private\n   * @type {Walkontable}\n   */\n\n  /**\n   * Main Walkontable instance.\n   *\n   * @private\n   * @type {Walkontable}\n   */\n\n  /**\n   * The total number of the column header renderers applied to the table through the\n   * `afterGetColumnHeaderRenderers` hook.\n   *\n   * @type {number}\n   */\n\n  /**\n   * The total number of the row header renderers applied to the table through the\n   * `afterGetRowHeaderRenderers` hook.\n   *\n   * @type {number}\n   */\n\n  /**\n   * The flag determines if the `adjustElementsSize` method call was made during\n   * the render suspending. If true, the method has to be triggered once after render\n   * resuming.\n   *\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n    _defineProperty(this, \"instance\", void 0);\n    _defineProperty(this, \"eventManager\", void 0);\n    _defineProperty(this, \"settings\", void 0);\n    _defineProperty(this, \"THEAD\", void 0);\n    _defineProperty(this, \"TBODY\", void 0);\n    _defineProperty(this, \"_wt\", void 0);\n    _defineProperty(this, \"activeWt\", void 0);\n    _classPrivateFieldInitSpec(this, _columnHeadersCount, {\n      writable: true,\n      value: 0\n    });\n    _classPrivateFieldInitSpec(this, _rowHeadersCount, {\n      writable: true,\n      value: 0\n    });\n    _defineProperty(this, \"postponedAdjustElementsSize\", false);\n    this.instance = instance;\n    this.eventManager = new EventManager(this.instance);\n    this.settings = this.instance.getSettings();\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n\n  /**\n   * Renders WalkontableUI.\n   */\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender);\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n        this._wt.draw(!this.instance.forceFullRender);\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this._wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this._wt.getCell(coords, topmost);\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n      return td;\n    }\n\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this._wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this._wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this._wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n        rootElement = _this$instance.rootElement,\n        rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n        rootElement = _this$instance2.rootElement,\n        rootDocument = _this$instance2.rootDocument,\n        selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breaks the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        // TODO: is it the best place and way to finish cell selection?\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n        priv.mouseDown = false;\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        }\n\n        // immediate click on \"holder\" means click on the right side of vertical scrollbar\n        var holder = _this.instance.view._wt.wtTable.holder;\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              }\n\n              // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n              return;\n            }\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n            next = next.parentNode;\n          }\n        }\n\n        // function did not return until here, we have an outside click!\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        }\n        // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n        event.preventDefault();\n      });\n    }\n\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var _this$instance3;\n      var row = _ref.row,\n        col = _ref.col;\n      // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n      return (_this$instance3 = this.instance)._createCellCoords.apply(_this$instance3, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n      return [visualRow, visualColumn];\n    }\n\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements);\n      // Don't take hidden indexes into account. We are looking just for renderable indexes.\n      var firstNotHiddenIndex = indexMapper.getNearestNotHiddenIndex(consideredElements - 1, -1);\n\n      // There are no renderable indexes.\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n      var firstVisibleIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n      var notHiddenIndexes = 0;\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n      return notHiddenIndexes;\n    }\n\n    /**\n     * The function returns the number of not hidden column indexes that fit between the first and\n     * last fixed column in the left (or right in RTL mode) overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedColumnsStart\",\n    value: function countNotHiddenFixedColumnsStart() {\n      var countCols = this.instance.countCols();\n      var visualFixedColumnsStart = Math.min(parseInt(this.settings.fixedColumnsStart, 10), countCols) - 1;\n      return this.countNotHiddenColumnIndexes(visualFixedColumnsStart, -1);\n    }\n\n    /**\n     * The function returns the number of not hidden row indexes that fit between the first and\n     * last fixed row in the top overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedRowsTop\",\n    value: function countNotHiddenFixedRowsTop() {\n      var countRows = this.instance.countRows();\n      var visualFixedRowsTop = Math.min(parseInt(this.settings.fixedRowsTop, 10), countRows) - 1;\n      return this.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n    }\n\n    /**\n     * The function returns the number of not hidden row indexes that fit between the first and\n     * last fixed row in the bottom overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedRowsBottom\",\n    value: function countNotHiddenFixedRowsBottom() {\n      var countRows = this.instance.countRows();\n      var visualFixedRowsBottom = Math.max(countRows - parseInt(this.settings.fixedRowsBottom, 10), 0);\n      return this.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n    }\n\n    /**\n     * Checks if at least one cell than belongs to the main table is not covered by the top, left or\n     * bottom overlay.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMainTableNotFullyCoveredByOverlays\",\n    value: function isMainTableNotFullyCoveredByOverlays() {\n      var fixedAllRows = this.countNotHiddenFixedRowsTop() + this.countNotHiddenFixedRowsBottom();\n      var fixedAllColumns = this.countNotHiddenFixedColumnsStart();\n      return this.instance.countRenderedRows() > fixedAllRows && this.instance.countRenderedCols() > fixedAllColumns;\n    }\n\n    /**\n     * Defines default configuration and initializes WalkOnTable instance.\n     *\n     * @private\n     */\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        rtlMode: this.instance.isRtl(),\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsStart: function fixedColumnsStart() {\n          return _this2.countNotHiddenFixedColumnsStart();\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          return _this2.countNotHiddenFixedRowsTop();\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          return _this2.countNotHiddenFixedRowsBottom();\n        },\n        // Enable the inline start overlay when conditions are met.\n        shouldRenderInlineStartOverlay: function shouldRenderInlineStartOverlay() {\n          return _this2.settings.fixedColumnsStart > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n          _classPrivateFieldSet(_this2, _rowHeadersCount, headerRenderers.length);\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n          _classPrivateFieldSet(_this2, _columnHeadersCount, headerRenderers.length);\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n          // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for indexes that are not displayed (indexes that are beyond the grid's boundaries), i.e. when `fixedColumnsStart` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n            _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n            visualRowIndex = _this2$translateFromR2[0],\n            visualColumnIndex = _this2$translateFromR2[1];\n\n          // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (_this2.instance && !_this2.instance.isDestroyed) {\n            _this2.instance.refreshDimensions();\n          }\n        },\n        onContainerElementResize: function onContainerElementResize() {\n          if (_this2.instance && !_this2.instance.isDestroyed) {\n            _this2.instance.refreshDimensions();\n          }\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.instance.listen();\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: controller,\n            cellCoordsFactory: function cellCoordsFactory(row, column) {\n              return _this2.instance._createCellCoords(row, column);\n            }\n          });\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: controller,\n              cellCoordsFactory: function cellCoordsFactory(row, column) {\n                return _this2.instance._createCellCoords(row, column);\n              }\n            });\n          }\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD);\n\n          // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.afterRender(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n            _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n            visualRowIndex = _this2$translateFromR4[0],\n            visualColumnIndex = _this2$translateFromR4[1];\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n          var selectionRangeSize = selectedRange.size();\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n            startRenderableRow = _corners[0],\n            startRenderableColumn = _corners[1],\n            endRenderableRow = _corners[2],\n            endRenderableColumn = _corners[3];\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper;\n\n          // Callback handle also headers. We shouldn't translate them.\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n              visualRowFrom = _visualIndexes[0],\n              visualColumnFrom = _visualIndexes[1],\n              visualRowTo = _visualIndexes[2],\n              visualColumnTo = _visualIndexes[3];\n\n            // Result of the hook is handled by the Walkontable (renderable indexes).\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsStart) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this._wt = new Walkontable(walkontableConfig);\n      this.activeWt = this._wt;\n      var spreader = this._wt.wtTable.spreader;\n      // We have to cache width and height after Walkontable initialization.\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n        width = _this$instance$rootEl.width,\n        height = _this$instance$rootEl.height;\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2._wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n            _this2.render();\n          }\n        }\n      });\n    }\n\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n      var isChildOfTableBody = isChildOf(el, this.instance.view._wt.wtTable.spreader);\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering\n     *                            cycle will be skipped.\n     */\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeViewRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n\n    /**\n     * `afterRender` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n  }, {\n    key: \"afterRender\",\n    value: function afterRender(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterViewRender', this.instance.forceFullRender);\n      }\n    }\n\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance4 = this.instance,\n          rootDocument = _this$instance4.rootDocument,\n          getRowHeader = _this$instance4.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableCellElement} TH The table header element.\n     * @param {Function} [label] The function that returns the header label.\n     * @param {number} [headerLevel=0] The index of header level counting from the top (positive\n     *                                 values counting from 0 to N).\n     */\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.instance.getColHeader;\n      var headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, label, headerLevel);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH, label, headerLevel);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, label, headerLevel);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH, headerLevel);\n    }\n\n    /**\n     * Updates header cell content.\n     *\n     * @private\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     * @param {number} [headerLevel=0] The index of header level counting from the top (positive\n     *                                 values counting from 0 to N).\n     */\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var renderedIndex = index;\n      var parentOverlay = this._wt.wtOverlays.getParentOverlay(element) || this._wt;\n\n      // prevent wrong calculations from SampleGenerator\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index, headerLevel));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n\n    /**\n     * Given a element's left (or right in RTL mode) position relative to the viewport, returns maximum\n     * element width until the right (or left) edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} inlineOffset The left (or right in RTL mode) offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(inlineOffset) {\n      var workspaceWidth = this._wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - inlineOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this._wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n\n    /**\n     * Returns the first fully visible row in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getFirstFullyVisibleRow\",\n    value: function getFirstFullyVisibleRow() {\n      return this.instance.rowIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getFirstVisibleRow());\n    }\n\n    /**\n     * Returns the last fully visible row in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLastFullyVisibleRow\",\n    value: function getLastFullyVisibleRow() {\n      return this.instance.rowIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getLastVisibleRow());\n    }\n\n    /**\n     * Returns the first fully visible column in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getFirstFullyVisibleColumn\",\n    value: function getFirstFullyVisibleColumn() {\n      return this.instance.columnIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getFirstVisibleColumn());\n    }\n\n    /**\n     * Returns the last fully visible column in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLastFullyVisibleColumn\",\n    value: function getLastFullyVisibleColumn() {\n      return this.instance.columnIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getLastVisibleColumn());\n    }\n\n    /**\n     * Returns the total count of the rendered column headers.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getColumnHeadersCount\",\n    value: function getColumnHeadersCount() {\n      return _classPrivateFieldGet(this, _columnHeadersCount);\n    }\n\n    /**\n     * Returns the total count of the rendered row headers.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getRowHeadersCount\",\n    value: function getRowHeadersCount() {\n      return _classPrivateFieldGet(this, _rowHeadersCount);\n    }\n\n    /**\n     * Destroys internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n  return TableView;\n}();\nexport default TableView;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","iter","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_classPrivateFieldGet","receiver","_classExtractFieldDescriptor","_classApplyDescriptorGet","get","_classPrivateFieldSet","_classApplyDescriptorSet","action","addClass","clearTextSelection","empty","fastInnerHTML","fastInnerText","getScrollbarWidth","hasClass","isChildOf","isInput","isOutsideInput","EventManager","isImmediatePropagationStopped","isRightClick","isLeftClick","Walkontable","handleMouseEvent","isRootInstance","privatePool","WeakMap","_columnHeadersCount","_rowHeadersCount","TableView","eventManager","settings","getSettings","selectionMouseDown","mouseDown","table","lastWidth","lastHeight","createElements","registerEvents","initializeWalkontable","render","isRenderSuspended","runHooks","forceFullRender","postponedAdjustElementsSize","adjustElementsSize","_wt","draw","renderCall","force","arguments","wtOverlays","getCellAtCoords","coords","topmost","td","getCell","scrollViewport","snapToTop","snapToRight","snapToBottom","snapToLeft","scrollViewportHorizontally","column","scrollViewportVertically","row","priv","_this$instance","rootElement","rootDocument","originalStyle","getAttribute","setAttribute","createElement","tableClassName","THEAD","appendChild","TBODY","container","insertBefore","firstChild","_this","_this$instance2","selection","documentElement","addEventListener","event","isTextSelectionAllowed","rootWindow","preventDefault","focus","fragmentSelection","isInProgress","shiftKey","finish","activeElement","isSelected","isSelectedByAnyHeader","contains","unlisten","originalTarget","eventX","x","clientX","eventY","y","clientY","view","holder","wtTable","scrollbarWidth","elementFromPoint","isTargetWebComponent","parentNode","outsideClickDeselects","deselectCell","destroyEditor","translateFromRenderableToVisualCoords","_ref","_this$instance3","col","_createCellCoords","apply","translateFromRenderableToVisualIndex","renderableRow","renderableColumn","visualRow","rowIndexMapper","getVisualFromRenderableIndex","visualColumn","columnIndexMapper","countRenderableIndexes","indexMapper","maxElements","consideredElements","Math","min","getNotTrimmedIndexesLength","firstNotHiddenIndex","getNearestNotHiddenIndex","getRenderableFromVisualIndex","countRenderableColumns","maxCols","countRenderableRows","maxRows","countNotHiddenRowIndexes","visualIndex","incrementBy","countNotHiddenIndexes","countNotHiddenColumnIndexes","renderableIndexesCount","isNaN","firstVisibleIndex","renderableIndex","isInteger","notHiddenIndexes","countNotHiddenFixedColumnsStart","countCols","visualFixedColumnsStart","parseInt","fixedColumnsStart","countNotHiddenFixedRowsTop","countRows","visualFixedRowsTop","fixedRowsTop","countNotHiddenFixedRowsBottom","visualFixedRowsBottom","max","fixedRowsBottom","isMainTableNotFullyCoveredByOverlays","fixedAllRows","fixedAllColumns","countRenderedRows","countRenderedCols","_this2","walkontableConfig","rtlMode","isRtl","externalRowCalculator","getPlugin","isEnabled","isDataViewInstance","preventOverflow","preventWheel","stretchH","data","_this2$instance","getDataAtCell","totalRows","totalColumns","shouldRenderInlineStartOverlay","rowHeaders","shouldRenderTopOverlay","columnHeaders","shouldRenderBottomOverlay","minSpareRows","renderAllRows","headerRenderers","hasRowHeaders","renderableRowIndex","TH","visualRowIndex","appendRowHeader","hasColHeaders","renderedColumnIndex","visualColumnsIndex","appendColHeader","columnWidth","getColWidth","rowHeight","renderedRowIndex","getRowHeight","cellRenderer","TD","_this2$translateFromR","_this2$translateFromR2","visualColumnIndex","modifiedCellCoords","visualRowToCheck","visualColumnToCheck","_modifiedCellCoords","cellProperties","getCellMeta","prop","colToProp","getDataAtRowProp","hasHook","getCellRenderer","selections","highlight","hideBorderOnMouseDownOver","onWindowResize","isDestroyed","refreshDimensions","onContainerElementResize","onCellMouseDown","wt","visualCoords","controller","cell","listen","activeWt","cellCoordsFactory","onCellContextMenu","onCellMouseOut","onCellMouseOver","onCellMouseUp","onCellCornerMouseDown","onCellCornerDblClick","beforeDraw","skipRender","beforeRender","onDraw","afterRender","onScrollVertically","onScrollHorizontally","onBeforeRemoveCellClassNames","onBeforeHighlightingRowHeader","headerLevel","highlightMeta","rowMapper","newVisualRow","onBeforeHighlightingColumnHeader","columnMapper","newVisualColumn","onAfterDrawSelection","currentRow","currentColumn","layerLevel","cornersOfSelection","_this2$translateFromR3","_this2$translateFromR4","selectedRange","getSelectedRange","selectionRangeSize","size","selectionOffset","selectionForLayer","peekByIndex","to","onBeforeDrawBorders","corners","borderClassName","_corners","startRenderableRow","startRenderableColumn","endRenderableRow","endRenderableColumn","visualCorners","onBeforeTouchScroll","onAfterMomentumScroll","onBeforeStretchingColumnWidth","stretchedWidth","onModifyRowHeaderWidth","rowHeaderWidth","onModifyGetCellCoords","renderableColumnIndex","visualIndexes","_visualIndexes","visualRowFrom","visualColumnFrom","visualRowTo","visualColumnTo","viewportRowCalculatorOverride","calc","viewportOffset","viewportRowRenderingOffset","renderableRows","firstRenderedRow","startRow","lastRenderedRow","endRow","offset","ceil","viewportColumnCalculatorOverride","viewportColumnRenderingOffset","renderableColumns","firstRenderedColumn","startColumn","lastRenderedColumn","endColumn","columnHeaderHeight","spreader","_this$instance$rootEl","getBoundingClientRect","width","height","setLastSize","which","stopPropagation","observeDOMVisibility","drawInterrupted","el","isChildOfTableBody","isSelectedOnlyCell","isCellEdited","isMouseDown","_this$instance$getSel","_this$instance$getSel2","getSelectedRangeLast","isSingle","activeEditor","getActiveEditor","isOpened","updateCellHeader","querySelector","getRowHeader","_this$instance4","div","span","className","label","getColHeader","element","index","content","renderedIndex","parentOverlay","getParentOverlay","columnFilter","sourceToRendered","rowFilter","fromCharCode","maximumVisibleElementWidth","inlineOffset","workspaceWidth","wtViewport","getWorkspaceWidth","maxWidth","maximumVisibleElementHeight","topOffset","workspaceHeight","getWorkspaceHeight","maxHeight","_ref2","getLastSize","getFirstFullyVisibleRow","wtScroll","getFirstVisibleRow","getLastFullyVisibleRow","getLastVisibleRow","getFirstFullyVisibleColumn","getFirstVisibleColumn","getLastFullyVisibleColumn","getLastVisibleColumn","getColumnHeadersCount","getRowHeadersCount","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/tableView.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from \"./helpers/dom/element.mjs\";\nimport EventManager from \"./eventManager.mjs\";\nimport { isImmediatePropagationStopped, isRightClick, isLeftClick } from \"./helpers/dom/event.mjs\";\nimport Walkontable from \"./3rdparty/walkontable/src/index.mjs\";\nimport { handleMouseEvent } from \"./selection/mouseEventHandler.mjs\";\nimport { isRootInstance } from \"./utils/rootInstance.mjs\";\nvar privatePool = new WeakMap();\n\n/**\n * @class TableView\n * @private\n */\nvar _columnHeadersCount = /*#__PURE__*/new WeakMap();\nvar _rowHeadersCount = /*#__PURE__*/new WeakMap();\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * Instance of {@link Handsontable}.\n   *\n   * @private\n   * @type {Handsontable}\n   */\n\n  /**\n   * Instance of {@link EventManager}.\n   *\n   * @private\n   * @type {EventManager}\n   */\n\n  /**\n   * Current Handsontable's GridSettings object.\n   *\n   * @private\n   * @type {GridSettings}\n   */\n\n  /**\n   * Main <THEAD> element.\n   *\n   * @private\n   * @type {HTMLTableSectionElement}\n   */\n\n  /**\n   * Main <TBODY> element.\n   *\n   * @private\n   * @type {HTMLTableSectionElement}\n   */\n\n  /**\n   * Main Walkontable instance.\n   *\n   * @private\n   * @type {Walkontable}\n   */\n\n  /**\n   * Main Walkontable instance.\n   *\n   * @private\n   * @type {Walkontable}\n   */\n\n  /**\n   * The total number of the column header renderers applied to the table through the\n   * `afterGetColumnHeaderRenderers` hook.\n   *\n   * @type {number}\n   */\n\n  /**\n   * The total number of the row header renderers applied to the table through the\n   * `afterGetRowHeaderRenderers` hook.\n   *\n   * @type {number}\n   */\n\n  /**\n   * The flag determines if the `adjustElementsSize` method call was made during\n   * the render suspending. If true, the method has to be triggered once after render\n   * resuming.\n   *\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}.\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n    _defineProperty(this, \"instance\", void 0);\n    _defineProperty(this, \"eventManager\", void 0);\n    _defineProperty(this, \"settings\", void 0);\n    _defineProperty(this, \"THEAD\", void 0);\n    _defineProperty(this, \"TBODY\", void 0);\n    _defineProperty(this, \"_wt\", void 0);\n    _defineProperty(this, \"activeWt\", void 0);\n    _classPrivateFieldInitSpec(this, _columnHeadersCount, {\n      writable: true,\n      value: 0\n    });\n    _classPrivateFieldInitSpec(this, _rowHeadersCount, {\n      writable: true,\n      value: 0\n    });\n    _defineProperty(this, \"postponedAdjustElementsSize\", false);\n    this.instance = instance;\n    this.eventManager = new EventManager(this.instance);\n    this.settings = this.instance.getSettings();\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {boolean}\n       */\n      selectionMouseDown: false,\n      /**\n       * @private\n       * @type {boolean}\n       */\n      mouseDown: void 0,\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {number}\n       */\n      lastWidth: 0,\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n\n  /**\n   * Renders WalkontableUI.\n   */\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.instance.isRenderSuspended()) {\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender);\n        if (this.postponedAdjustElementsSize) {\n          this.postponedAdjustElementsSize = false;\n          this.adjustElementsSize(true);\n        }\n        this._wt.draw(!this.instance.forceFullRender);\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n        this.instance.forceFullRender = false;\n        this.instance.renderCall = false;\n      }\n    }\n\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.instance.isRenderSuspended()) {\n        this.postponedAdjustElementsSize = true;\n      } else {\n        this._wt.wtOverlays.adjustElementsSize(force);\n      }\n    }\n\n    /**\n     * Returns td object given coordinates.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} topmost Indicates whether the cell should be calculated from the topmost.\n     * @returns {HTMLTableCellElement|null}\n     */\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this._wt.getCell(coords, topmost);\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n      return td;\n    }\n\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords Renderable cell coordinates.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this._wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {number} column Renderable column index.\n     * @param {boolean} [snapToRight] If `true`, viewport is scrolled to show the cell on the right side of the table.\n     * @param {boolean} [snapToLeft] If `true`, viewport is scrolled to show the cell on the left side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this._wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {number} row Renderable row index.\n     * @param {boolean} [snapToTop] If `true`, viewport is scrolled to show the cell on the top of the table.\n     * @param {boolean} [snapToBottom] If `true`, viewport is scrolled to show the cell on the bottom side of the table.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this._wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n        rootElement = _this$instance.rootElement,\n        rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n        rootElement = _this$instance2.rootElement,\n        rootDocument = _this$instance2.rootDocument,\n        selection = _this$instance2.selection;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breaks the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        // TODO: is it the best place and way to finish cell selection?\n        if (selection.isInProgress() && !event.shiftKey) {\n          selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          selection.finish();\n        }\n        priv.mouseDown = false;\n        if (isOutsideInput(rootDocument.activeElement) || !selection.isSelected() && !selection.isSelectedByAnyHeader() && !rootElement.contains(event.target) && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (selection.isInProgress() && isRightClick(event)) {\n          selection.finish();\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (selection.isInProgress()) {\n          selection.finish();\n        }\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        }\n\n        // immediate click on \"holder\" means click on the right side of vertical scrollbar\n        var holder = _this.instance.view._wt.wtTable.holder;\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              }\n\n              // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n              return;\n            }\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n            next = next.parentNode;\n          }\n        }\n\n        // function did not return until here, we have an outside click!\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        }\n        // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n        event.preventDefault();\n      });\n    }\n\n    /**\n     * Translate renderable cell coordinates to visual coordinates.\n     *\n     * @param {CellCoords} coords The cell coordinates.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualCoords\",\n    value: function translateFromRenderableToVisualCoords(_ref) {\n      var _this$instance3;\n      var row = _ref.row,\n        col = _ref.col;\n      // TODO: To consider an idea to reusing the CellCoords instance instead creating new one.\n      return (_this$instance3 = this.instance)._createCellCoords.apply(_this$instance3, _toConsumableArray(this.translateFromRenderableToVisualIndex(row, col)));\n    }\n\n    /**\n     * Translate renderable row and column indexes to visual row and column indexes.\n     *\n     * @param {number} renderableRow Renderable row index.\n     * @param {number} renderableColumn Renderable columnIndex.\n     * @returns {number[]}\n     */\n  }, {\n    key: \"translateFromRenderableToVisualIndex\",\n    value: function translateFromRenderableToVisualIndex(renderableRow, renderableColumn) {\n      // TODO: Some helper may be needed.\n      // We perform translation for indexes (without headers).\n      var visualRow = renderableRow >= 0 ? this.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRow) : renderableRow;\n      var visualColumn = renderableColumn >= 0 ? this.instance.columnIndexMapper.getVisualFromRenderableIndex(renderableColumn) : renderableColumn;\n      if (visualRow === null) {\n        visualRow = renderableRow;\n      }\n      if (visualColumn === null) {\n        visualColumn = renderableColumn;\n      }\n      return [visualRow, visualColumn];\n    }\n\n    /**\n     * Returns the number of renderable indexes.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} maxElements Maximum number of elements (rows or columns).\n     *\n     * @returns {number|*}\n     */\n  }, {\n    key: \"countRenderableIndexes\",\n    value: function countRenderableIndexes(indexMapper, maxElements) {\n      var consideredElements = Math.min(indexMapper.getNotTrimmedIndexesLength(), maxElements);\n      // Don't take hidden indexes into account. We are looking just for renderable indexes.\n      var firstNotHiddenIndex = indexMapper.getNearestNotHiddenIndex(consideredElements - 1, -1);\n\n      // There are no renderable indexes.\n      if (firstNotHiddenIndex === null) {\n        return 0;\n      }\n      return indexMapper.getRenderableFromVisualIndex(firstNotHiddenIndex) + 1;\n    }\n\n    /**\n     * Returns the number of renderable columns.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableColumns\",\n    value: function countRenderableColumns() {\n      return this.countRenderableIndexes(this.instance.columnIndexMapper, this.settings.maxCols);\n    }\n\n    /**\n     * Returns the number of renderable rows.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countRenderableRows\",\n    value: function countRenderableRows() {\n      return this.countRenderableIndexes(this.instance.rowIndexMapper, this.settings.maxRows);\n    }\n\n    /**\n     * Returns number of not hidden row indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenRowIndexes\",\n    value: function countNotHiddenRowIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.rowIndexMapper, this.countRenderableRows());\n    }\n\n    /**\n     * Returns number of not hidden column indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenColumnIndexes\",\n    value: function countNotHiddenColumnIndexes(visualIndex, incrementBy) {\n      return this.countNotHiddenIndexes(visualIndex, incrementBy, this.instance.columnIndexMapper, this.countRenderableColumns());\n    }\n\n    /**\n     * Returns number of not hidden indexes counting from the passed starting index.\n     * The counting direction can be controlled by `incrementBy` argument.\n     *\n     * @param {number} visualIndex The visual index from which the counting begins.\n     * @param {number} incrementBy If `-1` then counting is backwards or forward when `1`.\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} renderableIndexesCount Total count of renderable indexes for specific axis.\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenIndexes\",\n    value: function countNotHiddenIndexes(visualIndex, incrementBy, indexMapper, renderableIndexesCount) {\n      if (isNaN(visualIndex) || visualIndex < 0) {\n        return 0;\n      }\n      var firstVisibleIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, incrementBy);\n      var renderableIndex = indexMapper.getRenderableFromVisualIndex(firstVisibleIndex);\n      if (!Number.isInteger(renderableIndex)) {\n        return 0;\n      }\n      var notHiddenIndexes = 0;\n      if (incrementBy < 0) {\n        // Zero-based numbering for renderable indexes corresponds to a number of not hidden indexes.\n        notHiddenIndexes = renderableIndex + 1;\n      } else if (incrementBy > 0) {\n        notHiddenIndexes = renderableIndexesCount - renderableIndex;\n      }\n      return notHiddenIndexes;\n    }\n\n    /**\n     * The function returns the number of not hidden column indexes that fit between the first and\n     * last fixed column in the left (or right in RTL mode) overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedColumnsStart\",\n    value: function countNotHiddenFixedColumnsStart() {\n      var countCols = this.instance.countCols();\n      var visualFixedColumnsStart = Math.min(parseInt(this.settings.fixedColumnsStart, 10), countCols) - 1;\n      return this.countNotHiddenColumnIndexes(visualFixedColumnsStart, -1);\n    }\n\n    /**\n     * The function returns the number of not hidden row indexes that fit between the first and\n     * last fixed row in the top overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedRowsTop\",\n    value: function countNotHiddenFixedRowsTop() {\n      var countRows = this.instance.countRows();\n      var visualFixedRowsTop = Math.min(parseInt(this.settings.fixedRowsTop, 10), countRows) - 1;\n      return this.countNotHiddenRowIndexes(visualFixedRowsTop, -1);\n    }\n\n    /**\n     * The function returns the number of not hidden row indexes that fit between the first and\n     * last fixed row in the bottom overlay.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"countNotHiddenFixedRowsBottom\",\n    value: function countNotHiddenFixedRowsBottom() {\n      var countRows = this.instance.countRows();\n      var visualFixedRowsBottom = Math.max(countRows - parseInt(this.settings.fixedRowsBottom, 10), 0);\n      return this.countNotHiddenRowIndexes(visualFixedRowsBottom, 1);\n    }\n\n    /**\n     * Checks if at least one cell than belongs to the main table is not covered by the top, left or\n     * bottom overlay.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMainTableNotFullyCoveredByOverlays\",\n    value: function isMainTableNotFullyCoveredByOverlays() {\n      var fixedAllRows = this.countNotHiddenFixedRowsTop() + this.countNotHiddenFixedRowsBottom();\n      var fixedAllColumns = this.countNotHiddenFixedColumnsStart();\n      return this.instance.countRenderedRows() > fixedAllRows && this.instance.countRenderedCols() > fixedAllColumns;\n    }\n\n    /**\n     * Defines default configuration and initializes WalkOnTable instance.\n     *\n     * @private\n     */\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        rtlMode: this.instance.isRtl(),\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        isDataViewInstance: function isDataViewInstance() {\n          return isRootInstance(_this2.instance);\n        },\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: function data(renderableRow, renderableColumn) {\n          var _this2$instance;\n          return (_this2$instance = _this2.instance).getDataAtCell.apply(_this2$instance, _toConsumableArray(_this2.translateFromRenderableToVisualIndex(renderableRow, renderableColumn)));\n        },\n        totalRows: function totalRows() {\n          return _this2.countRenderableRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.countRenderableColumns();\n        },\n        // Number of renderable columns for the left overlay.\n        fixedColumnsStart: function fixedColumnsStart() {\n          return _this2.countNotHiddenFixedColumnsStart();\n        },\n        // Number of renderable rows for the top overlay.\n        fixedRowsTop: function fixedRowsTop() {\n          return _this2.countNotHiddenFixedRowsTop();\n        },\n        // Number of renderable rows for the bottom overlay.\n        fixedRowsBottom: function fixedRowsBottom() {\n          return _this2.countNotHiddenFixedRowsBottom();\n        },\n        // Enable the inline start overlay when conditions are met.\n        shouldRenderInlineStartOverlay: function shouldRenderInlineStartOverlay() {\n          return _this2.settings.fixedColumnsStart > 0 || walkontableConfig.rowHeaders().length > 0;\n        },\n        // Enable the top overlay when conditions are met.\n        shouldRenderTopOverlay: function shouldRenderTopOverlay() {\n          return _this2.settings.fixedRowsTop > 0 || walkontableConfig.columnHeaders().length > 0;\n        },\n        // Enable the bottom overlay when conditions are met.\n        shouldRenderBottomOverlay: function shouldRenderBottomOverlay() {\n          return _this2.settings.fixedRowsBottom > 0;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (renderableRowIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for row indexes (without row headers).\n              var visualRowIndex = renderableRowIndex >= 0 ? _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n              _this2.appendRowHeader(visualRowIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n          _classPrivateFieldSet(_this2, _rowHeadersCount, headerRenderers.length);\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (renderedColumnIndex, TH) {\n              // TODO: Some helper may be needed.\n              // We perform translation for columns indexes (without column headers).\n              var visualColumnsIndex = renderedColumnIndex >= 0 ? _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex) : renderedColumnIndex;\n              _this2.appendColHeader(visualColumnsIndex, TH);\n            });\n          }\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n          _classPrivateFieldSet(_this2, _columnHeadersCount, headerRenderers.length);\n          return headerRenderers;\n        },\n        columnWidth: function columnWidth(renderedColumnIndex) {\n          var visualIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n\n          // It's not a bug that we can't find visual index for some handled by method indexes. The function is called also\n          // for indexes that are not displayed (indexes that are beyond the grid's boundaries), i.e. when `fixedColumnsStart` > `startCols` (wrong config?) or\n          // scrolling and dataset is empty (scroll should handle that?).\n          return _this2.instance.getColWidth(visualIndex === null ? renderedColumnIndex : visualIndex);\n        },\n        rowHeight: function rowHeight(renderedRowIndex) {\n          var visualIndex = _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(renderedRowIndex);\n          return _this2.instance.getRowHeight(visualIndex === null ? renderedRowIndex : visualIndex);\n        },\n        cellRenderer: function cellRenderer(renderedRowIndex, renderedColumnIndex, TD) {\n          var _this2$translateFromR = _this2.translateFromRenderableToVisualIndex(renderedRowIndex, renderedColumnIndex),\n            _this2$translateFromR2 = _slicedToArray(_this2$translateFromR, 2),\n            visualRowIndex = _this2$translateFromR2[0],\n            visualColumnIndex = _this2$translateFromR2[1];\n\n          // Coords may be modified. For example, by the `MergeCells` plugin. It should affect cell value and cell meta.\n          var modifiedCellCoords = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex);\n          var visualRowToCheck = visualRowIndex;\n          var visualColumnToCheck = visualColumnIndex;\n          if (Array.isArray(modifiedCellCoords)) {\n            var _modifiedCellCoords = _slicedToArray(modifiedCellCoords, 2);\n            visualRowToCheck = _modifiedCellCoords[0];\n            visualColumnToCheck = _modifiedCellCoords[1];\n          }\n          var cellProperties = _this2.instance.getCellMeta(visualRowToCheck, visualColumnToCheck);\n          var prop = _this2.instance.colToProp(visualColumnToCheck);\n          var value = _this2.instance.getDataAtRowProp(visualRowToCheck, prop);\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n          _this2.instance.runHooks('beforeRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n          _this2.instance.runHooks('afterRenderer', TD, visualRowIndex, visualColumnIndex, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (_this2.instance && !_this2.instance.isDestroyed) {\n            _this2.instance.refreshDimensions();\n          }\n        },\n        onContainerElementResize: function onContainerElementResize() {\n          if (_this2.instance && !_this2.instance.isDestroyed) {\n            _this2.instance.refreshDimensions();\n          }\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.instance.listen();\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          handleMouseEvent(event, {\n            coords: visualCoords,\n            selection: _this2.instance.selection,\n            controller: controller,\n            cellCoordsFactory: function cellCoordsFactory(row, column) {\n              return _this2.instance._createCellCoords(row, column);\n            }\n          });\n          _this2.instance.runHooks('afterOnCellMouseDown', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellContextMenu', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, visualCoords, TD);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseOut', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          var controller = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, visualCoords, TD, controller);\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: visualCoords,\n              selection: _this2.instance.selection,\n              controller: controller,\n              cellCoordsFactory: function cellCoordsFactory(row, column) {\n                return _this2.instance._createCellCoords(row, column);\n              }\n            });\n          }\n          _this2.instance.runHooks('afterOnCellMouseOver', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          var visualCoords = _this2.translateFromRenderableToVisualCoords(coords);\n          _this2.activeWt = wt;\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, visualCoords, TD);\n\n          // TODO: The second condition check is a workaround. Callback corresponding the method `updateSettings`\n          // disable plugin and enable it again. Disabling plugin closes the menu. Thus, calling the\n          // `updateSettings` in a body of any callback executed right after some context-menu action\n          // breaks the table (#7231).\n          if (isImmediatePropagationStopped(event) || _this2.instance.isDestroyed) {\n            return;\n          }\n          _this2.instance.runHooks('afterOnCellMouseUp', event, visualCoords, TD);\n          _this2.activeWt = _this2._wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.afterRender(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onBeforeHighlightingRowHeader: function onBeforeHighlightingRowHeader(renderableRow, headerLevel, highlightMeta) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var visualRow = rowMapper.getVisualFromRenderableIndex(renderableRow);\n          var newVisualRow = _this2.instance.runHooks('beforeHighlightingRowHeader', visualRow, headerLevel, highlightMeta);\n          return rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(newVisualRow, 1));\n        },\n        onBeforeHighlightingColumnHeader: function onBeforeHighlightingColumnHeader(renderableColumn, headerLevel, highlightMeta) {\n          var columnMapper = _this2.instance.columnIndexMapper;\n          var visualColumn = columnMapper.getVisualFromRenderableIndex(renderableColumn);\n          var newVisualColumn = _this2.instance.runHooks('beforeHighlightingColumnHeader', visualColumn, headerLevel, highlightMeta);\n          return columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(newVisualColumn, 1));\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, layerLevel) {\n          var cornersOfSelection;\n          var _this2$translateFromR3 = _this2.translateFromRenderableToVisualIndex(currentRow, currentColumn),\n            _this2$translateFromR4 = _slicedToArray(_this2$translateFromR3, 2),\n            visualRowIndex = _this2$translateFromR4[0],\n            visualColumnIndex = _this2$translateFromR4[1];\n          var selectedRange = _this2.instance.selection.getSelectedRange();\n          var selectionRangeSize = selectedRange.size();\n          if (selectionRangeSize > 0) {\n            // Selection layers are stored from the \"oldest\" to the \"newest\". We should calculate the offset.\n            // Please look at the `SelectedRange` class and it's method for getting selection's layer for more information.\n            var selectionOffset = (layerLevel !== null && layerLevel !== void 0 ? layerLevel : 0) + 1 - selectionRangeSize;\n            var selectionForLayer = selectedRange.peekByIndex(selectionOffset);\n            cornersOfSelection = [selectionForLayer.from.row, selectionForLayer.from.col, selectionForLayer.to.row, selectionForLayer.to.col];\n          }\n          return _this2.instance.runHooks('afterDrawSelection', visualRowIndex, visualColumnIndex, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          var _corners = _slicedToArray(corners, 4),\n            startRenderableRow = _corners[0],\n            startRenderableColumn = _corners[1],\n            endRenderableRow = _corners[2],\n            endRenderableColumn = _corners[3];\n          var visualCorners = [_this2.instance.rowIndexMapper.getVisualFromRenderableIndex(startRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(startRenderableColumn), _this2.instance.rowIndexMapper.getVisualFromRenderableIndex(endRenderableRow), _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(endRenderableColumn)];\n          return _this2.instance.runHooks('beforeDrawBorders', visualCorners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, renderedColumnIndex) {\n          var visualColumnIndex = _this2.instance.columnIndexMapper.getVisualFromRenderableIndex(renderedColumnIndex);\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, visualColumnIndex);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(renderableRowIndex, renderableColumnIndex, topmost) {\n          var rowMapper = _this2.instance.rowIndexMapper;\n          var columnMapper = _this2.instance.columnIndexMapper;\n\n          // Callback handle also headers. We shouldn't translate them.\n          var visualColumnIndex = renderableColumnIndex >= 0 ? columnMapper.getVisualFromRenderableIndex(renderableColumnIndex) : renderableColumnIndex;\n          var visualRowIndex = renderableRowIndex >= 0 ? rowMapper.getVisualFromRenderableIndex(renderableRowIndex) : renderableRowIndex;\n          var visualIndexes = _this2.instance.runHooks('modifyGetCellCoords', visualRowIndex, visualColumnIndex, topmost);\n          if (Array.isArray(visualIndexes)) {\n            var _visualIndexes = _slicedToArray(visualIndexes, 4),\n              visualRowFrom = _visualIndexes[0],\n              visualColumnFrom = _visualIndexes[1],\n              visualRowTo = _visualIndexes[2],\n              visualColumnTo = _visualIndexes[3];\n\n            // Result of the hook is handled by the Walkontable (renderable indexes).\n            return [visualRowFrom >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowFrom, 1)) : visualRowFrom, visualColumnFrom >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnFrom, 1)) : visualColumnFrom, visualRowTo >= 0 ? rowMapper.getRenderableFromVisualIndex(rowMapper.getNearestNotHiddenIndex(visualRowTo, -1)) : visualRowTo, visualColumnTo >= 0 ? columnMapper.getRenderableFromVisualIndex(columnMapper.getNearestNotHiddenIndex(visualColumnTo, -1)) : visualColumnTo];\n          }\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableRows = _this2.countRenderableRows();\n            var firstRenderedRow = calc.startRow;\n            var lastRenderedRow = calc.endRow;\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(firstRenderedRow - viewportOffset, 0);\n              calc.endRow = Math.min(lastRenderedRow + viewportOffset, renderableRows - 1);\n            } else if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedRow / renderableRows * 12);\n              calc.startRow = Math.max(firstRenderedRow - offset, 0);\n              calc.endRow = Math.min(lastRenderedRow + offset, renderableRows - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsStart) {\n            viewportOffset = 10;\n          }\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var renderableColumns = _this2.countRenderableColumns();\n            var firstRenderedColumn = calc.startColumn;\n            var lastRenderedColumn = calc.endColumn;\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(firstRenderedColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + viewportOffset, renderableColumns - 1);\n            }\n            if (viewportOffset === 'auto') {\n              var offset = Math.ceil(lastRenderedColumn / renderableColumns * 6);\n              calc.startColumn = Math.max(firstRenderedColumn - offset, 0);\n              calc.endColumn = Math.min(lastRenderedColumn + offset, renderableColumns - 1);\n            }\n          }\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this._wt = new Walkontable(walkontableConfig);\n      this.activeWt = this._wt;\n      var spreader = this._wt.wtTable.spreader;\n      // We have to cache width and height after Walkontable initialization.\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n        width = _this$instance$rootEl.width,\n        height = _this$instance$rootEl.height;\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          event.stopPropagation();\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2._wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n            _this2.render();\n          }\n        }\n      });\n    }\n\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el The element to check.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n      var isChildOfTableBody = isChildOf(el, this.instance.view._wt.wtTable.spreader);\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _this$instance$getSel, _this$instance$getSel2;\n      return (_this$instance$getSel = (_this$instance$getSel2 = this.instance.getSelectedRangeLast()) === null || _this$instance$getSel2 === void 0 ? void 0 : _this$instance$getSel2.isSingle()) !== null && _this$instance$getSel !== void 0 ? _this$instance$getSel : false;\n    }\n\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     * @param {object} skipRender Object with `skipRender` property, if it is set to `true ` the next rendering\n     *                            cycle will be skipped.\n     */\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeViewRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n\n    /**\n     * `afterRender` callback.\n     *\n     * @private\n     * @param {boolean} force If `true` rendering was triggered by a change of settings or data or `false` if\n     *                        rendering was triggered by scrolling or moving selection.\n     */\n  }, {\n    key: \"afterRender\",\n    value: function afterRender(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterViewRender', this.instance.forceFullRender);\n      }\n    }\n\n    /**\n     * Append row header to a TH element.\n     *\n     * @private\n     * @param {number} visualRowIndex The visual row index.\n     * @param {HTMLTableHeaderCellElement} TH The table header element.\n     */\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(visualRowIndex, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(visualRowIndex, TH);\n          return;\n        }\n        this.updateCellHeader(container.querySelector('.rowHeader'), visualRowIndex, this.instance.getRowHeader);\n      } else {\n        var _this$instance4 = this.instance,\n          rootDocument = _this$instance4.rootDocument,\n          getRowHeader = _this$instance4.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, visualRowIndex, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetRowHeader', visualRowIndex, TH);\n    }\n\n    /**\n     * Append column header to a TH element.\n     *\n     * @private\n     * @param {number} visualColumnIndex Visual column index.\n     * @param {HTMLTableCellElement} TH The table header element.\n     * @param {Function} [label] The function that returns the header label.\n     * @param {number} [headerLevel=0] The index of header level counting from the top (positive\n     *                                 values counting from 0 to N).\n     */\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(visualColumnIndex, TH) {\n      var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.instance.getColHeader;\n      var headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), visualColumnIndex, label, headerLevel);\n        } else {\n          empty(TH);\n          this.appendColHeader(visualColumnIndex, TH, label, headerLevel);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, visualColumnIndex, label, headerLevel);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n      this.instance.runHooks('afterGetColHeader', visualColumnIndex, TH, headerLevel);\n    }\n\n    /**\n     * Updates header cell content.\n     *\n     * @private\n     * @param {HTMLElement} element Element to update.\n     * @param {number} index Row index or column index.\n     * @param {Function} content Function which should be returns content for this cell.\n     * @param {number} [headerLevel=0] The index of header level counting from the top (positive\n     *                                 values counting from 0 to N).\n     */\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var headerLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var renderedIndex = index;\n      var parentOverlay = this._wt.wtOverlays.getParentOverlay(element) || this._wt;\n\n      // prevent wrong calculations from SampleGenerator\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index, headerLevel));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n\n    /**\n     * Given a element's left (or right in RTL mode) position relative to the viewport, returns maximum\n     * element width until the right (or left) edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} inlineOffset The left (or right in RTL mode) offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(inlineOffset) {\n      var workspaceWidth = this._wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - inlineOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar).\n     *\n     * @private\n     * @param {number} topOffset The top offset.\n     * @returns {number}\n     */\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this._wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n\n    /**\n     * Sets new dimensions of the container.\n     *\n     * @param {number} width The table width.\n     * @param {number} height The table height.\n     */\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref2 = [width, height];\n      priv.lastWidth = _ref2[0];\n      priv.lastHeight = _ref2[1];\n    }\n\n    /**\n     * Returns cached dimensions.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n\n    /**\n     * Returns the first fully visible row in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getFirstFullyVisibleRow\",\n    value: function getFirstFullyVisibleRow() {\n      return this.instance.rowIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getFirstVisibleRow());\n    }\n\n    /**\n     * Returns the last fully visible row in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLastFullyVisibleRow\",\n    value: function getLastFullyVisibleRow() {\n      return this.instance.rowIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getLastVisibleRow());\n    }\n\n    /**\n     * Returns the first fully visible column in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getFirstFullyVisibleColumn\",\n    value: function getFirstFullyVisibleColumn() {\n      return this.instance.columnIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getFirstVisibleColumn());\n    }\n\n    /**\n     * Returns the last fully visible column in the table viewport.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getLastFullyVisibleColumn\",\n    value: function getLastFullyVisibleColumn() {\n      return this.instance.columnIndexMapper.getVisualFromRenderableIndex(this.instance.view._wt.wtScroll.getLastVisibleColumn());\n    }\n\n    /**\n     * Returns the total count of the rendered column headers.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getColumnHeadersCount\",\n    value: function getColumnHeadersCount() {\n      return _classPrivateFieldGet(this, _columnHeadersCount);\n    }\n\n    /**\n     * Returns the total count of the rendered row headers.\n     *\n     * @returns {number}\n     */\n  }, {\n    key: \"getRowHeadersCount\",\n    value: function getRowHeadersCount() {\n      return _classPrivateFieldGet(this, _rowHeadersCount);\n    }\n\n    /**\n     * Destroys internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n  return TableView;\n}();\nexport default TableView;"],"mappings":"AAAA,SAASA,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAC/U,SAASK,cAAcA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAAE,OAAOC,eAAe,CAACF,GAAG,CAAC,IAAIG,qBAAqB,CAACH,GAAG,EAAEC,CAAC,CAAC,IAAIG,2BAA2B,CAACJ,GAAG,EAAEC,CAAC,CAAC,IAAII,gBAAgB,EAAE;AAAE;AAC7J,SAASA,gBAAgBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,2IAA2I,CAAC;AAAE;AAChM,SAASH,qBAAqBA,CAACH,GAAG,EAAEC,CAAC,EAAE;EAAE,IAAIM,EAAE,GAAG,IAAI,IAAIP,GAAG,GAAG,IAAI,GAAG,WAAW,IAAI,OAAOL,MAAM,IAAIK,GAAG,CAACL,MAAM,CAACC,QAAQ,CAAC,IAAII,GAAG,CAAC,YAAY,CAAC;EAAE,IAAI,IAAI,IAAIO,EAAE,EAAE;IAAE,IAAIC,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,IAAI,GAAG,EAAE;MAAEC,EAAE,GAAG,CAAC,CAAC;MAAEC,EAAE,GAAG,CAAC,CAAC;IAAE,IAAI;MAAE,IAAIJ,EAAE,GAAG,CAACH,EAAE,GAAGA,EAAE,CAACQ,IAAI,CAACf,GAAG,CAAC,EAAEgB,IAAI,EAAE,CAAC,KAAKf,CAAC,EAAE;QAAE,IAAIgB,MAAM,CAACV,EAAE,CAAC,KAAKA,EAAE,EAAE;QAAQM,EAAE,GAAG,CAAC,CAAC;MAAE,CAAC,MAAM,OAAO,EAAEA,EAAE,GAAG,CAACL,EAAE,GAAGE,EAAE,CAACK,IAAI,CAACR,EAAE,CAAC,EAAEW,IAAI,CAAC,KAAKN,IAAI,CAACO,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC,EAAER,IAAI,CAACS,MAAM,KAAKpB,CAAC,CAAC,EAAEY,EAAE,GAAG,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,OAAOS,GAAG,EAAE;MAAER,EAAE,GAAG,CAAC,CAAC,EAAEL,EAAE,GAAGa,GAAG;IAAE,CAAC,SAAS;MAAE,IAAI;QAAE,IAAI,CAACT,EAAE,IAAI,IAAI,IAAIN,EAAE,CAACgB,MAAM,KAAKZ,EAAE,GAAGJ,EAAE,CAACgB,MAAM,EAAE,EAAEN,MAAM,CAACN,EAAE,CAAC,KAAKA,EAAE,CAAC,EAAE;MAAQ,CAAC,SAAS;QAAE,IAAIG,EAAE,EAAE,MAAML,EAAE;MAAE;IAAE;IAAE,OAAOG,IAAI;EAAE;AAAE;AAC3kB,SAASV,eAAeA,CAACF,GAAG,EAAE;EAAE,IAAIwB,KAAK,CAACC,OAAO,CAACzB,GAAG,CAAC,EAAE,OAAOA,GAAG;AAAE;AACpE,SAAS0B,kBAAkBA,CAAC1B,GAAG,EAAE;EAAE,OAAO2B,kBAAkB,CAAC3B,GAAG,CAAC,IAAI4B,gBAAgB,CAAC5B,GAAG,CAAC,IAAII,2BAA2B,CAACJ,GAAG,CAAC,IAAI6B,kBAAkB,EAAE;AAAE;AACxJ,SAASA,kBAAkBA,CAAA,EAAG;EAAE,MAAM,IAAIvB,SAAS,CAAC,sIAAsI,CAAC;AAAE;AAC7L,SAASF,2BAA2BA,CAAC0B,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGhB,MAAM,CAACnB,SAAS,CAACoC,QAAQ,CAACnB,IAAI,CAACe,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIF,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACjC,WAAW,EAAEoC,CAAC,GAAGH,CAAC,CAACjC,WAAW,CAACuC,IAAI;EAAE,IAAIH,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOT,KAAK,CAACa,IAAI,CAACP,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACK,IAAI,CAACL,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAC/Z,SAASH,gBAAgBA,CAACW,IAAI,EAAE;EAAE,IAAI,OAAO5C,MAAM,KAAK,WAAW,IAAI4C,IAAI,CAAC5C,MAAM,CAACC,QAAQ,CAAC,IAAI,IAAI,IAAI2C,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,OAAOf,KAAK,CAACa,IAAI,CAACE,IAAI,CAAC;AAAE;AAC7J,SAASZ,kBAAkBA,CAAC3B,GAAG,EAAE;EAAE,IAAIwB,KAAK,CAACC,OAAO,CAACzB,GAAG,CAAC,EAAE,OAAOgC,iBAAiB,CAAChC,GAAG,CAAC;AAAE;AAC1F,SAASgC,iBAAiBA,CAAChC,GAAG,EAAEwC,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGxC,GAAG,CAACqB,MAAM,EAAEmB,GAAG,GAAGxC,GAAG,CAACqB,MAAM;EAAE,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEwC,IAAI,GAAG,IAAIjB,KAAK,CAACgB,GAAG,CAAC,EAAEvC,CAAC,GAAGuC,GAAG,EAAEvC,CAAC,EAAE,EAAEwC,IAAI,CAACxC,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,CAAC;EAAE,OAAOwC,IAAI;AAAE;AAClL,SAASC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAItC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AACxJ,SAASuC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,KAAK,CAAC1B,MAAM,EAAEpB,CAAC,EAAE,EAAE;IAAE,IAAI+C,UAAU,GAAGD,KAAK,CAAC9C,CAAC,CAAC;IAAE+C,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAElC,MAAM,CAACmC,cAAc,CAACN,MAAM,EAAEO,cAAc,CAACL,UAAU,CAACM,GAAG,CAAC,EAAEN,UAAU,CAAC;EAAE;AAAE;AAC5U,SAASO,YAAYA,CAACX,WAAW,EAAEY,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEX,iBAAiB,CAACD,WAAW,CAAC9C,SAAS,EAAE0D,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEZ,iBAAiB,CAACD,WAAW,EAAEa,WAAW,CAAC;EAAExC,MAAM,CAACmC,cAAc,CAACR,WAAW,EAAE,WAAW,EAAE;IAAEO,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOP,WAAW;AAAE;AAC5R,SAASc,0BAA0BA,CAAChE,GAAG,EAAEiE,UAAU,EAAEvC,KAAK,EAAE;EAAEwC,0BAA0B,CAAClE,GAAG,EAAEiE,UAAU,CAAC;EAAEA,UAAU,CAACE,GAAG,CAACnE,GAAG,EAAE0B,KAAK,CAAC;AAAE;AACvI,SAASwC,0BAA0BA,CAAClE,GAAG,EAAEoE,iBAAiB,EAAE;EAAE,IAAIA,iBAAiB,CAACC,GAAG,CAACrE,GAAG,CAAC,EAAE;IAAE,MAAM,IAAIY,SAAS,CAAC,gEAAgE,CAAC;EAAE;AAAE;AACzL,SAAS0D,eAAeA,CAACtE,GAAG,EAAE4D,GAAG,EAAElC,KAAK,EAAE;EAAEkC,GAAG,GAAGD,cAAc,CAACC,GAAG,CAAC;EAAE,IAAIA,GAAG,IAAI5D,GAAG,EAAE;IAAEuB,MAAM,CAACmC,cAAc,CAAC1D,GAAG,EAAE4D,GAAG,EAAE;MAAElC,KAAK,EAAEA,KAAK;MAAE6B,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEzD,GAAG,CAAC4D,GAAG,CAAC,GAAGlC,KAAK;EAAE;EAAE,OAAO1B,GAAG;AAAE;AAC3O,SAAS2D,cAAcA,CAACY,GAAG,EAAE;EAAE,IAAIX,GAAG,GAAGY,YAAY,CAACD,GAAG,EAAE,QAAQ,CAAC;EAAE,OAAOxE,OAAO,CAAC6D,GAAG,CAAC,KAAK,QAAQ,GAAGA,GAAG,GAAGa,MAAM,CAACb,GAAG,CAAC;AAAE;AAC5H,SAASY,YAAYA,CAACE,KAAK,EAAEC,IAAI,EAAE;EAAE,IAAI5E,OAAO,CAAC2E,KAAK,CAAC,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOA,KAAK;EAAE,IAAIE,IAAI,GAAGF,KAAK,CAACzE,MAAM,CAAC4E,WAAW,CAAC;EAAE,IAAID,IAAI,KAAKE,SAAS,EAAE;IAAE,IAAIC,GAAG,GAAGH,IAAI,CAACvD,IAAI,CAACqD,KAAK,EAAEC,IAAI,IAAI,SAAS,CAAC;IAAE,IAAI5E,OAAO,CAACgF,GAAG,CAAC,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAAE,MAAM,IAAInE,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAAC+D,IAAI,KAAK,QAAQ,GAAGF,MAAM,GAAGO,MAAM,EAAEN,KAAK,CAAC;AAAE;AAC5X,SAASO,qBAAqBA,CAACC,QAAQ,EAAEjB,UAAU,EAAE;EAAE,IAAIX,UAAU,GAAG6B,4BAA4B,CAACD,QAAQ,EAAEjB,UAAU,EAAE,KAAK,CAAC;EAAE,OAAOmB,wBAAwB,CAACF,QAAQ,EAAE5B,UAAU,CAAC;AAAE;AAC1L,SAAS8B,wBAAwBA,CAACF,QAAQ,EAAE5B,UAAU,EAAE;EAAE,IAAIA,UAAU,CAAC+B,GAAG,EAAE;IAAE,OAAO/B,UAAU,CAAC+B,GAAG,CAAChE,IAAI,CAAC6D,QAAQ,CAAC;EAAE;EAAE,OAAO5B,UAAU,CAAC5B,KAAK;AAAE;AACjJ,SAAS4D,qBAAqBA,CAACJ,QAAQ,EAAEjB,UAAU,EAAEvC,KAAK,EAAE;EAAE,IAAI4B,UAAU,GAAG6B,4BAA4B,CAACD,QAAQ,EAAEjB,UAAU,EAAE,KAAK,CAAC;EAAEsB,wBAAwB,CAACL,QAAQ,EAAE5B,UAAU,EAAE5B,KAAK,CAAC;EAAE,OAAOA,KAAK;AAAE;AAC/M,SAASyD,4BAA4BA,CAACD,QAAQ,EAAEjB,UAAU,EAAEuB,MAAM,EAAE;EAAE,IAAI,CAACvB,UAAU,CAACI,GAAG,CAACa,QAAQ,CAAC,EAAE;IAAE,MAAM,IAAItE,SAAS,CAAC,eAAe,GAAG4E,MAAM,GAAG,gCAAgC,CAAC;EAAE;EAAE,OAAOvB,UAAU,CAACoB,GAAG,CAACH,QAAQ,CAAC;AAAE;AAC5N,SAASK,wBAAwBA,CAACL,QAAQ,EAAE5B,UAAU,EAAE5B,KAAK,EAAE;EAAE,IAAI4B,UAAU,CAACa,GAAG,EAAE;IAAEb,UAAU,CAACa,GAAG,CAAC9C,IAAI,CAAC6D,QAAQ,EAAExD,KAAK,CAAC;EAAE,CAAC,MAAM;IAAE,IAAI,CAAC4B,UAAU,CAACG,QAAQ,EAAE;MAAE,MAAM,IAAI7C,SAAS,CAAC,0CAA0C,CAAC;IAAE;IAAE0C,UAAU,CAAC5B,KAAK,GAAGA,KAAK;EAAE;AAAE;AAiBjQ,SAAS+D,QAAQ,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAQ,2BAA2B;AAC9K,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,SAASC,6BAA6B,EAAEC,YAAY,EAAEC,WAAW,QAAQ,yBAAyB;AAClG,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,cAAc,QAAQ,0BAA0B;AACzD,IAAIC,WAAW,GAAG,IAAIC,OAAO,EAAE;;AAE/B;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,aAAa,IAAID,OAAO,EAAE;AACpD,IAAIE,gBAAgB,GAAG,aAAa,IAAIF,OAAO,EAAE;AACjD,IAAIG,SAAS,GAAG,aAAa,YAAY;EACvC;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;EACE,SAASA,SAASA,CAAC7D,QAAQ,EAAE;IAC3BD,eAAe,CAAC,IAAI,EAAE8D,SAAS,CAAC;IAChCxC,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACzCA,eAAe,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;IAC7CA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACzCA,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACtCA,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACtCA,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACpCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACzCN,0BAA0B,CAAC,IAAI,EAAE4C,mBAAmB,EAAE;MACpDnD,QAAQ,EAAE,IAAI;MACd/B,KAAK,EAAE;IACT,CAAC,CAAC;IACFsC,0BAA0B,CAAC,IAAI,EAAE6C,gBAAgB,EAAE;MACjDpD,QAAQ,EAAE,IAAI;MACd/B,KAAK,EAAE;IACT,CAAC,CAAC;IACF4C,eAAe,CAAC,IAAI,EAAE,6BAA6B,EAAE,KAAK,CAAC;IAC3D,IAAI,CAACrB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC8D,YAAY,GAAG,IAAIZ,YAAY,CAAC,IAAI,CAAClD,QAAQ,CAAC;IACnD,IAAI,CAAC+D,QAAQ,GAAG,IAAI,CAAC/D,QAAQ,CAACgE,WAAW,EAAE;IAC3CP,WAAW,CAACvC,GAAG,CAAC,IAAI,EAAE;MACpB;AACN;AACA;AACA;AACA;AACA;MACM+C,kBAAkB,EAAE,KAAK;MACzB;AACN;AACA;AACA;MACMC,SAAS,EAAE,KAAK,CAAC;MACjB;AACN;AACA;AACA;AACA;AACA;MACMC,KAAK,EAAE,KAAK,CAAC;MACb;AACN;AACA;AACA;AACA;MACMC,SAAS,EAAE,CAAC;MACZ;AACN;AACA;AACA;AACA;MACMC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,qBAAqB,EAAE;EAC9B;;EAEA;AACF;AACA;EACE5D,YAAY,CAACiD,SAAS,EAAE,CAAC;IACvBlD,GAAG,EAAE,QAAQ;IACblC,KAAK,EAAE,SAASgG,MAAMA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAACzE,QAAQ,CAAC0E,iBAAiB,EAAE,EAAE;QACtC,IAAI,CAAC1E,QAAQ,CAAC2E,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC3E,QAAQ,CAAC4E,eAAe,CAAC;QACrE,IAAI,IAAI,CAACC,2BAA2B,EAAE;UACpC,IAAI,CAACA,2BAA2B,GAAG,KAAK;UACxC,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAAC;QAC/B;QACA,IAAI,CAACC,GAAG,CAACC,IAAI,CAAC,CAAC,IAAI,CAAChF,QAAQ,CAAC4E,eAAe,CAAC;QAC7C,IAAI,CAAC5E,QAAQ,CAAC2E,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC3E,QAAQ,CAAC4E,eAAe,CAAC;QACpE,IAAI,CAAC5E,QAAQ,CAAC4E,eAAe,GAAG,KAAK;QACrC,IAAI,CAAC5E,QAAQ,CAACiF,UAAU,GAAG,KAAK;MAClC;IACF;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDtE,GAAG,EAAE,oBAAoB;IACzBlC,KAAK,EAAE,SAASqG,kBAAkBA,CAAA,EAAG;MACnC,IAAII,KAAK,GAAGC,SAAS,CAACzG,MAAM,GAAG,CAAC,IAAIyG,SAAS,CAAC,CAAC,CAAC,KAAKtD,SAAS,GAAGsD,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MACrF,IAAI,IAAI,CAACnF,QAAQ,CAAC0E,iBAAiB,EAAE,EAAE;QACrC,IAAI,CAACG,2BAA2B,GAAG,IAAI;MACzC,CAAC,MAAM;QACL,IAAI,CAACE,GAAG,CAACK,UAAU,CAACN,kBAAkB,CAACI,KAAK,CAAC;MAC/C;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDvE,GAAG,EAAE,iBAAiB;IACtBlC,KAAK,EAAE,SAAS4G,eAAeA,CAACC,MAAM,EAAEC,OAAO,EAAE;MAC/C,IAAIC,EAAE,GAAG,IAAI,CAACT,GAAG,CAACU,OAAO,CAACH,MAAM,EAAEC,OAAO,CAAC;MAC1C,IAAIC,EAAE,GAAG,CAAC,EAAE;QACV;QACA,OAAO,IAAI;MACb;MACA,OAAOA,EAAE;IACX;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD7E,GAAG,EAAE,gBAAgB;IACrBlC,KAAK,EAAE,SAASiH,cAAcA,CAACJ,MAAM,EAAEK,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAE;MACvF,OAAO,IAAI,CAACf,GAAG,CAACW,cAAc,CAACJ,MAAM,EAAEK,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,CAAC;IAC1F;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDnF,GAAG,EAAE,4BAA4B;IACjClC,KAAK,EAAE,SAASsH,0BAA0BA,CAACC,MAAM,EAAEJ,WAAW,EAAEE,UAAU,EAAE;MAC1E,OAAO,IAAI,CAACf,GAAG,CAACgB,0BAA0B,CAACC,MAAM,EAAEJ,WAAW,EAAEE,UAAU,CAAC;IAC7E;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDnF,GAAG,EAAE,0BAA0B;IAC/BlC,KAAK,EAAE,SAASwH,wBAAwBA,CAACC,GAAG,EAAEP,SAAS,EAAEE,YAAY,EAAE;MACrE,OAAO,IAAI,CAACd,GAAG,CAACkB,wBAAwB,CAACC,GAAG,EAAEP,SAAS,EAAEE,YAAY,CAAC;IACxE;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlF,GAAG,EAAE,gBAAgB;IACrBlC,KAAK,EAAE,SAAS6F,cAAcA,CAAA,EAAG;MAC/B,IAAI6B,IAAI,GAAG1C,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC;MAChC,IAAIgE,cAAc,GAAG,IAAI,CAACpG,QAAQ;QAChCqG,WAAW,GAAGD,cAAc,CAACC,WAAW;QACxCC,YAAY,GAAGF,cAAc,CAACE,YAAY;MAC5C,IAAIC,aAAa,GAAGF,WAAW,CAACG,YAAY,CAAC,OAAO,CAAC;MACrD,IAAID,aAAa,EAAE;QACjBF,WAAW,CAACI,YAAY,CAAC,oBAAoB,EAAEF,aAAa,CAAC,CAAC,CAAC;MACjE;;MAEA/D,QAAQ,CAAC6D,WAAW,EAAE,cAAc,CAAC;MACrCF,IAAI,CAAChC,KAAK,GAAGmC,YAAY,CAACI,aAAa,CAAC,OAAO,CAAC;MAChDlE,QAAQ,CAAC2D,IAAI,CAAChC,KAAK,EAAE,QAAQ,CAAC;MAC9B,IAAI,IAAI,CAACnE,QAAQ,CAACgE,WAAW,EAAE,CAAC2C,cAAc,EAAE;QAC9CnE,QAAQ,CAAC2D,IAAI,CAAChC,KAAK,EAAE,IAAI,CAACnE,QAAQ,CAACgE,WAAW,EAAE,CAAC2C,cAAc,CAAC;MAClE;MACA,IAAI,CAACC,KAAK,GAAGN,YAAY,CAACI,aAAa,CAAC,OAAO,CAAC;MAChDP,IAAI,CAAChC,KAAK,CAAC0C,WAAW,CAAC,IAAI,CAACD,KAAK,CAAC;MAClC,IAAI,CAACE,KAAK,GAAGR,YAAY,CAACI,aAAa,CAAC,OAAO,CAAC;MAChDP,IAAI,CAAChC,KAAK,CAAC0C,WAAW,CAAC,IAAI,CAACC,KAAK,CAAC;MAClC,IAAI,CAAC9G,QAAQ,CAACmE,KAAK,GAAGgC,IAAI,CAAChC,KAAK;MAChC,IAAI,CAACnE,QAAQ,CAAC+G,SAAS,CAACC,YAAY,CAACb,IAAI,CAAChC,KAAK,EAAE,IAAI,CAACnE,QAAQ,CAAC+G,SAAS,CAACE,UAAU,CAAC;IACtF;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDtG,GAAG,EAAE,gBAAgB;IACrBlC,KAAK,EAAE,SAAS8F,cAAcA,CAAA,EAAG;MAC/B,IAAI2C,KAAK,GAAG,IAAI;MAChB,IAAIf,IAAI,GAAG1C,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC;MAChC,IAAI+E,eAAe,GAAG,IAAI,CAACnH,QAAQ;QACjCqG,WAAW,GAAGc,eAAe,CAACd,WAAW;QACzCC,YAAY,GAAGa,eAAe,CAACb,YAAY;QAC3Cc,SAAS,GAAGD,eAAe,CAACC,SAAS;MACvC,IAAIC,eAAe,GAAGf,YAAY,CAACe,eAAe;MAClD,IAAI,CAACvD,YAAY,CAACwD,gBAAgB,CAACjB,WAAW,EAAE,WAAW,EAAE,UAAUkB,KAAK,EAAE;QAC5EpB,IAAI,CAAClC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACiD,KAAK,CAACM,sBAAsB,CAACD,KAAK,CAACpH,MAAM,CAAC,EAAE;UAC/C,IAAIsH,UAAU,GAAGP,KAAK,CAAClH,QAAQ,CAACyH,UAAU;UAC1ChF,kBAAkB,CAACgF,UAAU,CAAC;UAC9BF,KAAK,CAACG,cAAc,EAAE;UACtBD,UAAU,CAACE,KAAK,EAAE,CAAC,CAAC;QACtB;MACF,CAAC,CAAC;;MAEF,IAAI,CAAC7D,YAAY,CAACwD,gBAAgB,CAACjB,WAAW,EAAE,SAAS,EAAE,YAAY;QACrEF,IAAI,CAAClC,kBAAkB,GAAG,KAAK;MACjC,CAAC,CAAC;MACF,IAAI,CAACH,YAAY,CAACwD,gBAAgB,CAACjB,WAAW,EAAE,WAAW,EAAE,UAAUkB,KAAK,EAAE;QAC5E,IAAIpB,IAAI,CAAClC,kBAAkB,IAAI,CAACiD,KAAK,CAACM,sBAAsB,CAACD,KAAK,CAACpH,MAAM,CAAC,EAAE;UAC1E;UACA,IAAI+G,KAAK,CAACnD,QAAQ,CAAC6D,iBAAiB,EAAE;YACpCnF,kBAAkB,CAACyE,KAAK,CAAClH,QAAQ,CAACyH,UAAU,CAAC;UAC/C;UACAF,KAAK,CAACG,cAAc,EAAE;QACxB;MACF,CAAC,CAAC;MACF,IAAI,CAAC5D,YAAY,CAACwD,gBAAgB,CAACD,eAAe,EAAE,OAAO,EAAE,UAAUE,KAAK,EAAE;QAC5E;QACA,IAAIH,SAAS,CAACS,YAAY,EAAE,IAAI,CAACN,KAAK,CAACO,QAAQ,EAAE;UAC/CV,SAAS,CAACW,MAAM,EAAE;QACpB;MACF,CAAC,CAAC;MACF,IAAI,CAACjE,YAAY,CAACwD,gBAAgB,CAACD,eAAe,EAAE,SAAS,EAAE,UAAUE,KAAK,EAAE;QAC9E,IAAIH,SAAS,CAACS,YAAY,EAAE,IAAIxE,WAAW,CAACkE,KAAK,CAAC,EAAE;UAClD;UACAH,SAAS,CAACW,MAAM,EAAE;QACpB;QACA5B,IAAI,CAACjC,SAAS,GAAG,KAAK;QACtB,IAAIjB,cAAc,CAACqD,YAAY,CAAC0B,aAAa,CAAC,IAAI,CAACZ,SAAS,CAACa,UAAU,EAAE,IAAI,CAACb,SAAS,CAACc,qBAAqB,EAAE,IAAI,CAAC7B,WAAW,CAAC8B,QAAQ,CAACZ,KAAK,CAACpH,MAAM,CAAC,IAAI,CAACiD,YAAY,CAACmE,KAAK,CAAC,EAAE;UAC9KL,KAAK,CAAClH,QAAQ,CAACoI,QAAQ,EAAE;QAC3B;MACF,CAAC,CAAC;MACF,IAAI,CAACtE,YAAY,CAACwD,gBAAgB,CAACD,eAAe,EAAE,aAAa,EAAE,UAAUE,KAAK,EAAE;QAClF,IAAIH,SAAS,CAACS,YAAY,EAAE,IAAIzE,YAAY,CAACmE,KAAK,CAAC,EAAE;UACnDH,SAAS,CAACW,MAAM,EAAE;UAClB5B,IAAI,CAACjC,SAAS,GAAG,KAAK;QACxB;MACF,CAAC,CAAC;MACF,IAAI,CAACJ,YAAY,CAACwD,gBAAgB,CAACD,eAAe,EAAE,UAAU,EAAE,YAAY;QAC1E,IAAID,SAAS,CAACS,YAAY,EAAE,EAAE;UAC5BT,SAAS,CAACW,MAAM,EAAE;QACpB;QACA5B,IAAI,CAACjC,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC;MACF,IAAI,CAACJ,YAAY,CAACwD,gBAAgB,CAACD,eAAe,EAAE,WAAW,EAAE,UAAUE,KAAK,EAAE;QAChF,IAAIc,cAAc,GAAGd,KAAK,CAACpH,MAAM;QACjC,IAAImI,MAAM,GAAGf,KAAK,CAACgB,CAAC,IAAIhB,KAAK,CAACiB,OAAO;QACrC,IAAIC,MAAM,GAAGlB,KAAK,CAACmB,CAAC,IAAInB,KAAK,CAACoB,OAAO;QACrC,IAAItK,IAAI,GAAGkJ,KAAK,CAACpH,MAAM;QACvB,IAAIgG,IAAI,CAACjC,SAAS,IAAI,CAACmC,WAAW,IAAI,CAACa,KAAK,CAAClH,QAAQ,CAAC4I,IAAI,EAAE;UAC1D,OAAO,CAAC;QACV;;QAEA;QACA,IAAIC,MAAM,GAAG3B,KAAK,CAAClH,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC+D,OAAO,CAACD,MAAM;QACnD,IAAIxK,IAAI,KAAKwK,MAAM,EAAE;UACnB,IAAIE,cAAc,GAAGlG,iBAAiB,CAACyD,YAAY,CAAC;UACpD,IAAIA,YAAY,CAAC0C,gBAAgB,CAACV,MAAM,GAAGS,cAAc,EAAEN,MAAM,CAAC,KAAKI,MAAM,IAAIvC,YAAY,CAAC0C,gBAAgB,CAACV,MAAM,EAAEG,MAAM,GAAGM,cAAc,CAAC,KAAKF,MAAM,EAAE;YAC1J;UACF;QACF,CAAC,MAAM;UACL,OAAOxK,IAAI,KAAKgJ,eAAe,EAAE;YAC/B,IAAIhJ,IAAI,KAAK,IAAI,EAAE;cACjB,IAAIkJ,KAAK,CAAC0B,oBAAoB,EAAE;gBAC9B;cACF;;cAEA;cACA;YACF;YACA,IAAI5K,IAAI,KAAKgI,WAAW,EAAE;cACxB;cACA;YACF;YACAhI,IAAI,GAAGA,IAAI,CAAC6K,UAAU;UACxB;QACF;;QAEA;QACA,IAAIC,qBAAqB,GAAG,OAAOjC,KAAK,CAACnD,QAAQ,CAACoF,qBAAqB,KAAK,UAAU,GAAGjC,KAAK,CAACnD,QAAQ,CAACoF,qBAAqB,CAACd,cAAc,CAAC,GAAGnB,KAAK,CAACnD,QAAQ,CAACoF,qBAAqB;QACpL,IAAIA,qBAAqB,EAAE;UACzBjC,KAAK,CAAClH,QAAQ,CAACoJ,YAAY,EAAE;QAC/B,CAAC,MAAM;UACLlC,KAAK,CAAClH,QAAQ,CAACqJ,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC;QAC5C;MACF,CAAC,CAAC;MACF,IAAI,CAACvF,YAAY,CAACwD,gBAAgB,CAACnB,IAAI,CAAChC,KAAK,EAAE,aAAa,EAAE,UAAUoD,KAAK,EAAE;QAC7E,IAAIL,KAAK,CAACnD,QAAQ,CAAC6D,iBAAiB,IAAI5E,OAAO,CAACuE,KAAK,CAACpH,MAAM,CAAC,EAAE;UAC7D;QACF;QACA;QACA;QACAoH,KAAK,CAACG,cAAc,EAAE;MACxB,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD/G,GAAG,EAAE,uCAAuC;IAC5ClC,KAAK,EAAE,SAAS6K,qCAAqCA,CAACC,IAAI,EAAE;MAC1D,IAAIC,eAAe;MACnB,IAAItD,GAAG,GAAGqD,IAAI,CAACrD,GAAG;QAChBuD,GAAG,GAAGF,IAAI,CAACE,GAAG;MAChB;MACA,OAAO,CAACD,eAAe,GAAG,IAAI,CAACxJ,QAAQ,EAAE0J,iBAAiB,CAACC,KAAK,CAACH,eAAe,EAAEzK,kBAAkB,CAAC,IAAI,CAAC6K,oCAAoC,CAAC1D,GAAG,EAAEuD,GAAG,CAAC,CAAC,CAAC;IAC5J;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD9I,GAAG,EAAE,sCAAsC;IAC3ClC,KAAK,EAAE,SAASmL,oCAAoCA,CAACC,aAAa,EAAEC,gBAAgB,EAAE;MACpF;MACA;MACA,IAAIC,SAAS,GAAGF,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC7J,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAACJ,aAAa,CAAC,GAAGA,aAAa;MAC7H,IAAIK,YAAY,GAAGJ,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC9J,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAACH,gBAAgB,CAAC,GAAGA,gBAAgB;MAC5I,IAAIC,SAAS,KAAK,IAAI,EAAE;QACtBA,SAAS,GAAGF,aAAa;MAC3B;MACA,IAAIK,YAAY,KAAK,IAAI,EAAE;QACzBA,YAAY,GAAGJ,gBAAgB;MACjC;MACA,OAAO,CAACC,SAAS,EAAEG,YAAY,CAAC;IAClC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDvJ,GAAG,EAAE,wBAAwB;IAC7BlC,KAAK,EAAE,SAAS2L,sBAAsBA,CAACC,WAAW,EAAEC,WAAW,EAAE;MAC/D,IAAIC,kBAAkB,GAAGC,IAAI,CAACC,GAAG,CAACJ,WAAW,CAACK,0BAA0B,EAAE,EAAEJ,WAAW,CAAC;MACxF;MACA,IAAIK,mBAAmB,GAAGN,WAAW,CAACO,wBAAwB,CAACL,kBAAkB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;MAE1F;MACA,IAAII,mBAAmB,KAAK,IAAI,EAAE;QAChC,OAAO,CAAC;MACV;MACA,OAAON,WAAW,CAACQ,4BAA4B,CAACF,mBAAmB,CAAC,GAAG,CAAC;IAC1E;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDhK,GAAG,EAAE,wBAAwB;IAC7BlC,KAAK,EAAE,SAASqM,sBAAsBA,CAAA,EAAG;MACvC,OAAO,IAAI,CAACV,sBAAsB,CAAC,IAAI,CAACpK,QAAQ,CAACmK,iBAAiB,EAAE,IAAI,CAACpG,QAAQ,CAACgH,OAAO,CAAC;IAC5F;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpK,GAAG,EAAE,qBAAqB;IAC1BlC,KAAK,EAAE,SAASuM,mBAAmBA,CAAA,EAAG;MACpC,OAAO,IAAI,CAACZ,sBAAsB,CAAC,IAAI,CAACpK,QAAQ,CAACgK,cAAc,EAAE,IAAI,CAACjG,QAAQ,CAACkH,OAAO,CAAC;IACzF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDtK,GAAG,EAAE,0BAA0B;IAC/BlC,KAAK,EAAE,SAASyM,wBAAwBA,CAACC,WAAW,EAAEC,WAAW,EAAE;MACjE,OAAO,IAAI,CAACC,qBAAqB,CAACF,WAAW,EAAEC,WAAW,EAAE,IAAI,CAACpL,QAAQ,CAACgK,cAAc,EAAE,IAAI,CAACgB,mBAAmB,EAAE,CAAC;IACvH;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDrK,GAAG,EAAE,6BAA6B;IAClClC,KAAK,EAAE,SAAS6M,2BAA2BA,CAACH,WAAW,EAAEC,WAAW,EAAE;MACpE,OAAO,IAAI,CAACC,qBAAqB,CAACF,WAAW,EAAEC,WAAW,EAAE,IAAI,CAACpL,QAAQ,CAACmK,iBAAiB,EAAE,IAAI,CAACW,sBAAsB,EAAE,CAAC;IAC7H;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDnK,GAAG,EAAE,uBAAuB;IAC5BlC,KAAK,EAAE,SAAS4M,qBAAqBA,CAACF,WAAW,EAAEC,WAAW,EAAEf,WAAW,EAAEkB,sBAAsB,EAAE;MACnG,IAAIC,KAAK,CAACL,WAAW,CAAC,IAAIA,WAAW,GAAG,CAAC,EAAE;QACzC,OAAO,CAAC;MACV;MACA,IAAIM,iBAAiB,GAAGpB,WAAW,CAACO,wBAAwB,CAACO,WAAW,EAAEC,WAAW,CAAC;MACtF,IAAIM,eAAe,GAAGrB,WAAW,CAACQ,4BAA4B,CAACY,iBAAiB,CAAC;MACjF,IAAI,CAAC1J,MAAM,CAAC4J,SAAS,CAACD,eAAe,CAAC,EAAE;QACtC,OAAO,CAAC;MACV;MACA,IAAIE,gBAAgB,GAAG,CAAC;MACxB,IAAIR,WAAW,GAAG,CAAC,EAAE;QACnB;QACAQ,gBAAgB,GAAGF,eAAe,GAAG,CAAC;MACxC,CAAC,MAAM,IAAIN,WAAW,GAAG,CAAC,EAAE;QAC1BQ,gBAAgB,GAAGL,sBAAsB,GAAGG,eAAe;MAC7D;MACA,OAAOE,gBAAgB;IACzB;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDjL,GAAG,EAAE,iCAAiC;IACtClC,KAAK,EAAE,SAASoN,+BAA+BA,CAAA,EAAG;MAChD,IAAIC,SAAS,GAAG,IAAI,CAAC9L,QAAQ,CAAC8L,SAAS,EAAE;MACzC,IAAIC,uBAAuB,GAAGvB,IAAI,CAACC,GAAG,CAACuB,QAAQ,CAAC,IAAI,CAACjI,QAAQ,CAACkI,iBAAiB,EAAE,EAAE,CAAC,EAAEH,SAAS,CAAC,GAAG,CAAC;MACpG,OAAO,IAAI,CAACR,2BAA2B,CAACS,uBAAuB,EAAE,CAAC,CAAC,CAAC;IACtE;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpL,GAAG,EAAE,4BAA4B;IACjClC,KAAK,EAAE,SAASyN,0BAA0BA,CAAA,EAAG;MAC3C,IAAIC,SAAS,GAAG,IAAI,CAACnM,QAAQ,CAACmM,SAAS,EAAE;MACzC,IAAIC,kBAAkB,GAAG5B,IAAI,CAACC,GAAG,CAACuB,QAAQ,CAAC,IAAI,CAACjI,QAAQ,CAACsI,YAAY,EAAE,EAAE,CAAC,EAAEF,SAAS,CAAC,GAAG,CAAC;MAC1F,OAAO,IAAI,CAACjB,wBAAwB,CAACkB,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAC9D;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzL,GAAG,EAAE,+BAA+B;IACpClC,KAAK,EAAE,SAAS6N,6BAA6BA,CAAA,EAAG;MAC9C,IAAIH,SAAS,GAAG,IAAI,CAACnM,QAAQ,CAACmM,SAAS,EAAE;MACzC,IAAII,qBAAqB,GAAG/B,IAAI,CAACgC,GAAG,CAACL,SAAS,GAAGH,QAAQ,CAAC,IAAI,CAACjI,QAAQ,CAAC0I,eAAe,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MAChG,OAAO,IAAI,CAACvB,wBAAwB,CAACqB,qBAAqB,EAAE,CAAC,CAAC;IAChE;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD5L,GAAG,EAAE,sCAAsC;IAC3ClC,KAAK,EAAE,SAASiO,oCAAoCA,CAAA,EAAG;MACrD,IAAIC,YAAY,GAAG,IAAI,CAACT,0BAA0B,EAAE,GAAG,IAAI,CAACI,6BAA6B,EAAE;MAC3F,IAAIM,eAAe,GAAG,IAAI,CAACf,+BAA+B,EAAE;MAC5D,OAAO,IAAI,CAAC7L,QAAQ,CAAC6M,iBAAiB,EAAE,GAAGF,YAAY,IAAI,IAAI,CAAC3M,QAAQ,CAAC8M,iBAAiB,EAAE,GAAGF,eAAe;IAChH;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDjM,GAAG,EAAE,uBAAuB;IAC5BlC,KAAK,EAAE,SAAS+F,qBAAqBA,CAAA,EAAG;MACtC,IAAIuI,MAAM,GAAG,IAAI;MACjB,IAAI5G,IAAI,GAAG1C,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC;MAChC,IAAI4K,iBAAiB,GAAG;QACtBC,OAAO,EAAE,IAAI,CAACjN,QAAQ,CAACkN,KAAK,EAAE;QAC9BC,qBAAqB,EAAE,IAAI,CAACnN,QAAQ,CAACoN,SAAS,CAAC,aAAa,CAAC,IAAI,IAAI,CAACpN,QAAQ,CAACoN,SAAS,CAAC,aAAa,CAAC,CAACC,SAAS,EAAE;QACnHlJ,KAAK,EAAEgC,IAAI,CAAChC,KAAK;QACjBmJ,kBAAkB,EAAE,SAASA,kBAAkBA,CAAA,EAAG;UAChD,OAAO9J,cAAc,CAACuJ,MAAM,CAAC/M,QAAQ,CAAC;QACxC,CAAC;QACDuN,eAAe,EAAE,SAASA,eAAeA,CAAA,EAAG;UAC1C,OAAOR,MAAM,CAAChJ,QAAQ,CAACwJ,eAAe;QACxC,CAAC;QACDC,YAAY,EAAE,SAASA,YAAYA,CAAA,EAAG;UACpC,OAAOT,MAAM,CAAChJ,QAAQ,CAACyJ,YAAY;QACrC,CAAC;QACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;UAC5B,OAAOV,MAAM,CAAChJ,QAAQ,CAAC0J,QAAQ;QACjC,CAAC;QACDC,IAAI,EAAE,SAASA,IAAIA,CAAC7D,aAAa,EAAEC,gBAAgB,EAAE;UACnD,IAAI6D,eAAe;UACnB,OAAO,CAACA,eAAe,GAAGZ,MAAM,CAAC/M,QAAQ,EAAE4N,aAAa,CAACjE,KAAK,CAACgE,eAAe,EAAE5O,kBAAkB,CAACgO,MAAM,CAACnD,oCAAoC,CAACC,aAAa,EAAEC,gBAAgB,CAAC,CAAC,CAAC;QACnL,CAAC;QACD+D,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;UAC9B,OAAOd,MAAM,CAAC/B,mBAAmB,EAAE;QACrC,CAAC;QACD8C,YAAY,EAAE,SAASA,YAAYA,CAAA,EAAG;UACpC,OAAOf,MAAM,CAACjC,sBAAsB,EAAE;QACxC,CAAC;QACD;QACAmB,iBAAiB,EAAE,SAASA,iBAAiBA,CAAA,EAAG;UAC9C,OAAOc,MAAM,CAAClB,+BAA+B,EAAE;QACjD,CAAC;QACD;QACAQ,YAAY,EAAE,SAASA,YAAYA,CAAA,EAAG;UACpC,OAAOU,MAAM,CAACb,0BAA0B,EAAE;QAC5C,CAAC;QACD;QACAO,eAAe,EAAE,SAASA,eAAeA,CAAA,EAAG;UAC1C,OAAOM,MAAM,CAACT,6BAA6B,EAAE;QAC/C,CAAC;QACD;QACAyB,8BAA8B,EAAE,SAASA,8BAA8BA,CAAA,EAAG;UACxE,OAAOhB,MAAM,CAAChJ,QAAQ,CAACkI,iBAAiB,GAAG,CAAC,IAAIe,iBAAiB,CAACgB,UAAU,EAAE,CAACtP,MAAM,GAAG,CAAC;QAC3F,CAAC;QACD;QACAuP,sBAAsB,EAAE,SAASA,sBAAsBA,CAAA,EAAG;UACxD,OAAOlB,MAAM,CAAChJ,QAAQ,CAACsI,YAAY,GAAG,CAAC,IAAIW,iBAAiB,CAACkB,aAAa,EAAE,CAACxP,MAAM,GAAG,CAAC;QACzF,CAAC;QACD;QACAyP,yBAAyB,EAAE,SAASA,yBAAyBA,CAAA,EAAG;UAC9D,OAAOpB,MAAM,CAAChJ,QAAQ,CAAC0I,eAAe,GAAG,CAAC;QAC5C,CAAC;QACD2B,YAAY,EAAE,SAASA,YAAYA,CAAA,EAAG;UACpC,OAAOrB,MAAM,CAAChJ,QAAQ,CAACqK,YAAY;QACrC,CAAC;QACDC,aAAa,EAAE,IAAI,CAACtK,QAAQ,CAACsK,aAAa;QAC1CL,UAAU,EAAE,SAASA,UAAUA,CAAA,EAAG;UAChC,IAAIM,eAAe,GAAG,EAAE;UACxB,IAAIvB,MAAM,CAAC/M,QAAQ,CAACuO,aAAa,EAAE,EAAE;YACnCD,eAAe,CAAC9P,IAAI,CAAC,UAAUgQ,kBAAkB,EAAEC,EAAE,EAAE;cACrD;cACA;cACA,IAAIC,cAAc,GAAGF,kBAAkB,IAAI,CAAC,GAAGzB,MAAM,CAAC/M,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAACuE,kBAAkB,CAAC,GAAGA,kBAAkB;cACnJzB,MAAM,CAAC4B,eAAe,CAACD,cAAc,EAAED,EAAE,CAAC;YAC5C,CAAC,CAAC;UACJ;UACA1B,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,4BAA4B,EAAE2J,eAAe,CAAC;UACvEjM,qBAAqB,CAAC0K,MAAM,EAAEnJ,gBAAgB,EAAE0K,eAAe,CAAC5P,MAAM,CAAC;UACvE,OAAO4P,eAAe;QACxB,CAAC;QACDJ,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;UACtC,IAAII,eAAe,GAAG,EAAE;UACxB,IAAIvB,MAAM,CAAC/M,QAAQ,CAAC4O,aAAa,EAAE,EAAE;YACnCN,eAAe,CAAC9P,IAAI,CAAC,UAAUqQ,mBAAmB,EAAEJ,EAAE,EAAE;cACtD;cACA;cACA,IAAIK,kBAAkB,GAAGD,mBAAmB,IAAI,CAAC,GAAG9B,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC4E,mBAAmB,CAAC,GAAGA,mBAAmB;cAC7J9B,MAAM,CAACgC,eAAe,CAACD,kBAAkB,EAAEL,EAAE,CAAC;YAChD,CAAC,CAAC;UACJ;UACA1B,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,+BAA+B,EAAE2J,eAAe,CAAC;UAC1EjM,qBAAqB,CAAC0K,MAAM,EAAEpJ,mBAAmB,EAAE2K,eAAe,CAAC5P,MAAM,CAAC;UAC1E,OAAO4P,eAAe;QACxB,CAAC;QACDU,WAAW,EAAE,SAASA,WAAWA,CAACH,mBAAmB,EAAE;UACrD,IAAI1D,WAAW,GAAG4B,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC4E,mBAAmB,CAAC;;UAErG;UACA;UACA;UACA,OAAO9B,MAAM,CAAC/M,QAAQ,CAACiP,WAAW,CAAC9D,WAAW,KAAK,IAAI,GAAG0D,mBAAmB,GAAG1D,WAAW,CAAC;QAC9F,CAAC;QACD+D,SAAS,EAAE,SAASA,SAASA,CAACC,gBAAgB,EAAE;UAC9C,IAAIhE,WAAW,GAAG4B,MAAM,CAAC/M,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAACkF,gBAAgB,CAAC;UAC/F,OAAOpC,MAAM,CAAC/M,QAAQ,CAACoP,YAAY,CAACjE,WAAW,KAAK,IAAI,GAAGgE,gBAAgB,GAAGhE,WAAW,CAAC;QAC5F,CAAC;QACDkE,YAAY,EAAE,SAASA,YAAYA,CAACF,gBAAgB,EAAEN,mBAAmB,EAAES,EAAE,EAAE;UAC7E,IAAIC,qBAAqB,GAAGxC,MAAM,CAACnD,oCAAoC,CAACuF,gBAAgB,EAAEN,mBAAmB,CAAC;YAC5GW,sBAAsB,GAAGpS,cAAc,CAACmS,qBAAqB,EAAE,CAAC,CAAC;YACjEb,cAAc,GAAGc,sBAAsB,CAAC,CAAC,CAAC;YAC1CC,iBAAiB,GAAGD,sBAAsB,CAAC,CAAC,CAAC;;UAE/C;UACA,IAAIE,kBAAkB,GAAG3C,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,qBAAqB,EAAE+J,cAAc,EAAEe,iBAAiB,CAAC;UAC3G,IAAIE,gBAAgB,GAAGjB,cAAc;UACrC,IAAIkB,mBAAmB,GAAGH,iBAAiB;UAC3C,IAAI5Q,KAAK,CAACC,OAAO,CAAC4Q,kBAAkB,CAAC,EAAE;YACrC,IAAIG,mBAAmB,GAAGzS,cAAc,CAACsS,kBAAkB,EAAE,CAAC,CAAC;YAC/DC,gBAAgB,GAAGE,mBAAmB,CAAC,CAAC,CAAC;YACzCD,mBAAmB,GAAGC,mBAAmB,CAAC,CAAC,CAAC;UAC9C;UACA,IAAIC,cAAc,GAAG/C,MAAM,CAAC/M,QAAQ,CAAC+P,WAAW,CAACJ,gBAAgB,EAAEC,mBAAmB,CAAC;UACvF,IAAII,IAAI,GAAGjD,MAAM,CAAC/M,QAAQ,CAACiQ,SAAS,CAACL,mBAAmB,CAAC;UACzD,IAAInR,KAAK,GAAGsO,MAAM,CAAC/M,QAAQ,CAACkQ,gBAAgB,CAACP,gBAAgB,EAAEK,IAAI,CAAC;UACpE,IAAIjD,MAAM,CAAC/M,QAAQ,CAACmQ,OAAO,CAAC,mBAAmB,CAAC,EAAE;YAChD1R,KAAK,GAAGsO,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,mBAAmB,EAAElG,KAAK,EAAEqR,cAAc,CAAC;UAC9E;UACA/C,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,gBAAgB,EAAE2K,EAAE,EAAEZ,cAAc,EAAEe,iBAAiB,EAAEO,IAAI,EAAEvR,KAAK,EAAEqR,cAAc,CAAC;UAC9G/C,MAAM,CAAC/M,QAAQ,CAACoQ,eAAe,CAACN,cAAc,CAAC,CAAC/C,MAAM,CAAC/M,QAAQ,EAAEsP,EAAE,EAAEZ,cAAc,EAAEe,iBAAiB,EAAEO,IAAI,EAAEvR,KAAK,EAAEqR,cAAc,CAAC;UACpI/C,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,eAAe,EAAE2K,EAAE,EAAEZ,cAAc,EAAEe,iBAAiB,EAAEO,IAAI,EAAEvR,KAAK,EAAEqR,cAAc,CAAC;QAC/G,CAAC;QACDO,UAAU,EAAE,IAAI,CAACrQ,QAAQ,CAACoH,SAAS,CAACkJ,SAAS;QAC7CC,yBAAyB,EAAE,SAASA,yBAAyBA,CAAA,EAAG;UAC9D,OAAOxD,MAAM,CAAChJ,QAAQ,CAAC6D,iBAAiB;QAC1C,CAAC;QACD4I,cAAc,EAAE,SAASA,cAAcA,CAAA,EAAG;UACxC,IAAIzD,MAAM,CAAC/M,QAAQ,IAAI,CAAC+M,MAAM,CAAC/M,QAAQ,CAACyQ,WAAW,EAAE;YACnD1D,MAAM,CAAC/M,QAAQ,CAAC0Q,iBAAiB,EAAE;UACrC;QACF,CAAC;QACDC,wBAAwB,EAAE,SAASA,wBAAwBA,CAAA,EAAG;UAC5D,IAAI5D,MAAM,CAAC/M,QAAQ,IAAI,CAAC+M,MAAM,CAAC/M,QAAQ,CAACyQ,WAAW,EAAE;YACnD1D,MAAM,CAAC/M,QAAQ,CAAC0Q,iBAAiB,EAAE;UACrC;QACF,CAAC;QACDE,eAAe,EAAE,SAASA,eAAeA,CAACrJ,KAAK,EAAEjC,MAAM,EAAEgK,EAAE,EAAEuB,EAAE,EAAE;UAC/D,IAAIC,YAAY,GAAG/D,MAAM,CAACzD,qCAAqC,CAAChE,MAAM,CAAC;UACvE,IAAIyL,UAAU,GAAG;YACf7K,GAAG,EAAE,KAAK;YACVF,MAAM,EAAE,KAAK;YACbgL,IAAI,EAAE;UACR,CAAC;UACDjE,MAAM,CAAC/M,QAAQ,CAACiR,MAAM,EAAE;UACxBlE,MAAM,CAACmE,QAAQ,GAAGL,EAAE;UACpB1K,IAAI,CAACjC,SAAS,GAAG,IAAI;UACrB6I,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,uBAAuB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,EAAEyB,UAAU,CAAC;UACtF,IAAI5N,6BAA6B,CAACoE,KAAK,CAAC,EAAE;YACxC;UACF;UACAhE,gBAAgB,CAACgE,KAAK,EAAE;YACtBjC,MAAM,EAAEwL,YAAY;YACpB1J,SAAS,EAAE2F,MAAM,CAAC/M,QAAQ,CAACoH,SAAS;YACpC2J,UAAU,EAAEA,UAAU;YACtBI,iBAAiB,EAAE,SAASA,iBAAiBA,CAACjL,GAAG,EAAEF,MAAM,EAAE;cACzD,OAAO+G,MAAM,CAAC/M,QAAQ,CAAC0J,iBAAiB,CAACxD,GAAG,EAAEF,MAAM,CAAC;YACvD;UACF,CAAC,CAAC;UACF+G,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,sBAAsB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UACzEvC,MAAM,CAACmE,QAAQ,GAAGnE,MAAM,CAAChI,GAAG;QAC9B,CAAC;QACDqM,iBAAiB,EAAE,SAASA,iBAAiBA,CAAC7J,KAAK,EAAEjC,MAAM,EAAEgK,EAAE,EAAEuB,EAAE,EAAE;UACnE,IAAIC,YAAY,GAAG/D,MAAM,CAACzD,qCAAqC,CAAChE,MAAM,CAAC;UACvEyH,MAAM,CAACmE,QAAQ,GAAGL,EAAE;UACpB1K,IAAI,CAACjC,SAAS,GAAG,KAAK;UACtB,IAAI6I,MAAM,CAAC/M,QAAQ,CAACoH,SAAS,CAACS,YAAY,EAAE,EAAE;YAC5CkF,MAAM,CAAC/M,QAAQ,CAACoH,SAAS,CAACW,MAAM,EAAE;UACpC;UACAgF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,yBAAyB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UAC5E,IAAInM,6BAA6B,CAACoE,KAAK,CAAC,EAAE;YACxC;UACF;UACAwF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,wBAAwB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UAC3EvC,MAAM,CAACmE,QAAQ,GAAGnE,MAAM,CAAChI,GAAG;QAC9B,CAAC;QACDsM,cAAc,EAAE,SAASA,cAAcA,CAAC9J,KAAK,EAAEjC,MAAM,EAAEgK,EAAE,EAAEuB,EAAE,EAAE;UAC7D,IAAIC,YAAY,GAAG/D,MAAM,CAACzD,qCAAqC,CAAChE,MAAM,CAAC;UACvEyH,MAAM,CAACmE,QAAQ,GAAGL,EAAE;UACpB9D,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,sBAAsB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UACzE,IAAInM,6BAA6B,CAACoE,KAAK,CAAC,EAAE;YACxC;UACF;UACAwF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,qBAAqB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UACxEvC,MAAM,CAACmE,QAAQ,GAAGnE,MAAM,CAAChI,GAAG;QAC9B,CAAC;QACDuM,eAAe,EAAE,SAASA,eAAeA,CAAC/J,KAAK,EAAEjC,MAAM,EAAEgK,EAAE,EAAEuB,EAAE,EAAE;UAC/D,IAAIC,YAAY,GAAG/D,MAAM,CAACzD,qCAAqC,CAAChE,MAAM,CAAC;UACvE,IAAIyL,UAAU,GAAG;YACf7K,GAAG,EAAE,KAAK;YACVF,MAAM,EAAE,KAAK;YACbgL,IAAI,EAAE;UACR,CAAC;UACDjE,MAAM,CAACmE,QAAQ,GAAGL,EAAE;UACpB9D,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,uBAAuB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,EAAEyB,UAAU,CAAC;UACtF,IAAI5N,6BAA6B,CAACoE,KAAK,CAAC,EAAE;YACxC;UACF;UACA,IAAIpB,IAAI,CAACjC,SAAS,EAAE;YAClBX,gBAAgB,CAACgE,KAAK,EAAE;cACtBjC,MAAM,EAAEwL,YAAY;cACpB1J,SAAS,EAAE2F,MAAM,CAAC/M,QAAQ,CAACoH,SAAS;cACpC2J,UAAU,EAAEA,UAAU;cACtBI,iBAAiB,EAAE,SAASA,iBAAiBA,CAACjL,GAAG,EAAEF,MAAM,EAAE;gBACzD,OAAO+G,MAAM,CAAC/M,QAAQ,CAAC0J,iBAAiB,CAACxD,GAAG,EAAEF,MAAM,CAAC;cACvD;YACF,CAAC,CAAC;UACJ;UACA+G,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,sBAAsB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UACzEvC,MAAM,CAACmE,QAAQ,GAAGnE,MAAM,CAAChI,GAAG;QAC9B,CAAC;QACDwM,aAAa,EAAE,SAASA,aAAaA,CAAChK,KAAK,EAAEjC,MAAM,EAAEgK,EAAE,EAAEuB,EAAE,EAAE;UAC3D,IAAIC,YAAY,GAAG/D,MAAM,CAACzD,qCAAqC,CAAChE,MAAM,CAAC;UACvEyH,MAAM,CAACmE,QAAQ,GAAGL,EAAE;UACpB9D,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,qBAAqB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;;UAExE;UACA;UACA;UACA;UACA,IAAInM,6BAA6B,CAACoE,KAAK,CAAC,IAAIwF,MAAM,CAAC/M,QAAQ,CAACyQ,WAAW,EAAE;YACvE;UACF;UACA1D,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,oBAAoB,EAAE4C,KAAK,EAAEuJ,YAAY,EAAExB,EAAE,CAAC;UACvEvC,MAAM,CAACmE,QAAQ,GAAGnE,MAAM,CAAChI,GAAG;QAC9B,CAAC;QACDyM,qBAAqB,EAAE,SAASA,qBAAqBA,CAACjK,KAAK,EAAE;UAC3DA,KAAK,CAACG,cAAc,EAAE;UACtBqF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,4BAA4B,EAAE4C,KAAK,CAAC;QAC/D,CAAC;QACDkK,oBAAoB,EAAE,SAASA,oBAAoBA,CAAClK,KAAK,EAAE;UACzDA,KAAK,CAACG,cAAc,EAAE;UACtBqF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,2BAA2B,EAAE4C,KAAK,CAAC;QAC9D,CAAC;QACDmK,UAAU,EAAE,SAASA,UAAUA,CAACxM,KAAK,EAAEyM,UAAU,EAAE;UACjD,OAAO5E,MAAM,CAAC6E,YAAY,CAAC1M,KAAK,EAAEyM,UAAU,CAAC;QAC/C,CAAC;QACDE,MAAM,EAAE,SAASA,MAAMA,CAAC3M,KAAK,EAAE;UAC7B,OAAO6H,MAAM,CAAC+E,WAAW,CAAC5M,KAAK,CAAC;QAClC,CAAC;QACD6M,kBAAkB,EAAE,SAASA,kBAAkBA,CAAA,EAAG;UAChD,OAAOhF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,uBAAuB,CAAC;QAC1D,CAAC;QACDqN,oBAAoB,EAAE,SAASA,oBAAoBA,CAAA,EAAG;UACpD,OAAOjF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,yBAAyB,CAAC;QAC5D,CAAC;QACDsN,4BAA4B,EAAE,SAASA,4BAA4BA,CAAA,EAAG;UACpE,OAAOlF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,4BAA4B,CAAC;QAC/D,CAAC;QACDuN,6BAA6B,EAAE,SAASA,6BAA6BA,CAACrI,aAAa,EAAEsI,WAAW,EAAEC,aAAa,EAAE;UAC/G,IAAIC,SAAS,GAAGtF,MAAM,CAAC/M,QAAQ,CAACgK,cAAc;UAC9C,IAAID,SAAS,GAAGsI,SAAS,CAACpI,4BAA4B,CAACJ,aAAa,CAAC;UACrE,IAAIyI,YAAY,GAAGvF,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,6BAA6B,EAAEoF,SAAS,EAAEoI,WAAW,EAAEC,aAAa,CAAC;UACjH,OAAOC,SAAS,CAACxH,4BAA4B,CAACwH,SAAS,CAACzH,wBAAwB,CAAC0H,YAAY,EAAE,CAAC,CAAC,CAAC;QACpG,CAAC;QACDC,gCAAgC,EAAE,SAASA,gCAAgCA,CAACzI,gBAAgB,EAAEqI,WAAW,EAAEC,aAAa,EAAE;UACxH,IAAII,YAAY,GAAGzF,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB;UACpD,IAAID,YAAY,GAAGsI,YAAY,CAACvI,4BAA4B,CAACH,gBAAgB,CAAC;UAC9E,IAAI2I,eAAe,GAAG1F,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,gCAAgC,EAAEuF,YAAY,EAAEiI,WAAW,EAAEC,aAAa,CAAC;UAC1H,OAAOI,YAAY,CAAC3H,4BAA4B,CAAC2H,YAAY,CAAC5H,wBAAwB,CAAC6H,eAAe,EAAE,CAAC,CAAC,CAAC;QAC7G,CAAC;QACDC,oBAAoB,EAAE,SAASA,oBAAoBA,CAACC,UAAU,EAAEC,aAAa,EAAEC,UAAU,EAAE;UACzF,IAAIC,kBAAkB;UACtB,IAAIC,sBAAsB,GAAGhG,MAAM,CAACnD,oCAAoC,CAAC+I,UAAU,EAAEC,aAAa,CAAC;YACjGI,sBAAsB,GAAG5V,cAAc,CAAC2V,sBAAsB,EAAE,CAAC,CAAC;YAClErE,cAAc,GAAGsE,sBAAsB,CAAC,CAAC,CAAC;YAC1CvD,iBAAiB,GAAGuD,sBAAsB,CAAC,CAAC,CAAC;UAC/C,IAAIC,aAAa,GAAGlG,MAAM,CAAC/M,QAAQ,CAACoH,SAAS,CAAC8L,gBAAgB,EAAE;UAChE,IAAIC,kBAAkB,GAAGF,aAAa,CAACG,IAAI,EAAE;UAC7C,IAAID,kBAAkB,GAAG,CAAC,EAAE;YAC1B;YACA;YACA,IAAIE,eAAe,GAAG,CAACR,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAG,CAAC,IAAI,CAAC,GAAGM,kBAAkB;YAC9G,IAAIG,iBAAiB,GAAGL,aAAa,CAACM,WAAW,CAACF,eAAe,CAAC;YAClEP,kBAAkB,GAAG,CAACQ,iBAAiB,CAAC5T,IAAI,CAACwG,GAAG,EAAEoN,iBAAiB,CAAC5T,IAAI,CAAC+J,GAAG,EAAE6J,iBAAiB,CAACE,EAAE,CAACtN,GAAG,EAAEoN,iBAAiB,CAACE,EAAE,CAAC/J,GAAG,CAAC;UACnI;UACA,OAAOsD,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,oBAAoB,EAAE+J,cAAc,EAAEe,iBAAiB,EAAEqD,kBAAkB,EAAED,UAAU,CAAC;QAC1H,CAAC;QACDY,mBAAmB,EAAE,SAASA,mBAAmBA,CAACC,OAAO,EAAEC,eAAe,EAAE;UAC1E,IAAIC,QAAQ,GAAGxW,cAAc,CAACsW,OAAO,EAAE,CAAC,CAAC;YACvCG,kBAAkB,GAAGD,QAAQ,CAAC,CAAC,CAAC;YAChCE,qBAAqB,GAAGF,QAAQ,CAAC,CAAC,CAAC;YACnCG,gBAAgB,GAAGH,QAAQ,CAAC,CAAC,CAAC;YAC9BI,mBAAmB,GAAGJ,QAAQ,CAAC,CAAC,CAAC;UACnC,IAAIK,aAAa,GAAG,CAAClH,MAAM,CAAC/M,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAAC4J,kBAAkB,CAAC,EAAE9G,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC6J,qBAAqB,CAAC,EAAE/G,MAAM,CAAC/M,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAAC8J,gBAAgB,CAAC,EAAEhH,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC+J,mBAAmB,CAAC,CAAC;UAChW,OAAOjH,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,mBAAmB,EAAEsP,aAAa,EAAEN,eAAe,CAAC;QACtF,CAAC;QACDO,mBAAmB,EAAE,SAASA,mBAAmBA,CAAA,EAAG;UAClD,OAAOnH,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,mBAAmB,CAAC;QACtD,CAAC;QACDwP,qBAAqB,EAAE,SAASA,qBAAqBA,CAAA,EAAG;UACtD,OAAOpH,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,qBAAqB,CAAC;QACxD,CAAC;QACDyP,6BAA6B,EAAE,SAASA,6BAA6BA,CAACC,cAAc,EAAExF,mBAAmB,EAAE;UACzG,IAAIY,iBAAiB,GAAG1C,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC4E,mBAAmB,CAAC;UAC3G,OAAO9B,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,6BAA6B,EAAE0P,cAAc,EAAE5E,iBAAiB,CAAC;QACnG,CAAC;QACD6E,sBAAsB,EAAE,SAASA,sBAAsBA,CAACC,cAAc,EAAE;UACtE,OAAOxH,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,sBAAsB,EAAE4P,cAAc,CAAC;QACzE,CAAC;QACDC,qBAAqB,EAAE,SAASA,qBAAqBA,CAAChG,kBAAkB,EAAEiG,qBAAqB,EAAElP,OAAO,EAAE;UACxG,IAAI8M,SAAS,GAAGtF,MAAM,CAAC/M,QAAQ,CAACgK,cAAc;UAC9C,IAAIwI,YAAY,GAAGzF,MAAM,CAAC/M,QAAQ,CAACmK,iBAAiB;;UAEpD;UACA,IAAIsF,iBAAiB,GAAGgF,qBAAqB,IAAI,CAAC,GAAGjC,YAAY,CAACvI,4BAA4B,CAACwK,qBAAqB,CAAC,GAAGA,qBAAqB;UAC7I,IAAI/F,cAAc,GAAGF,kBAAkB,IAAI,CAAC,GAAG6D,SAAS,CAACpI,4BAA4B,CAACuE,kBAAkB,CAAC,GAAGA,kBAAkB;UAC9H,IAAIkG,aAAa,GAAG3H,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,qBAAqB,EAAE+J,cAAc,EAAEe,iBAAiB,EAAElK,OAAO,CAAC;UAC/G,IAAI1G,KAAK,CAACC,OAAO,CAAC4V,aAAa,CAAC,EAAE;YAChC,IAAIC,cAAc,GAAGvX,cAAc,CAACsX,aAAa,EAAE,CAAC,CAAC;cACnDE,aAAa,GAAGD,cAAc,CAAC,CAAC,CAAC;cACjCE,gBAAgB,GAAGF,cAAc,CAAC,CAAC,CAAC;cACpCG,WAAW,GAAGH,cAAc,CAAC,CAAC,CAAC;cAC/BI,cAAc,GAAGJ,cAAc,CAAC,CAAC,CAAC;;YAEpC;YACA,OAAO,CAACC,aAAa,IAAI,CAAC,GAAGvC,SAAS,CAACxH,4BAA4B,CAACwH,SAAS,CAACzH,wBAAwB,CAACgK,aAAa,EAAE,CAAC,CAAC,CAAC,GAAGA,aAAa,EAAEC,gBAAgB,IAAI,CAAC,GAAGrC,YAAY,CAAC3H,4BAA4B,CAAC2H,YAAY,CAAC5H,wBAAwB,CAACiK,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAGA,gBAAgB,EAAEC,WAAW,IAAI,CAAC,GAAGzC,SAAS,CAACxH,4BAA4B,CAACwH,SAAS,CAACzH,wBAAwB,CAACkK,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGA,WAAW,EAAEC,cAAc,IAAI,CAAC,GAAGvC,YAAY,CAAC3H,4BAA4B,CAAC2H,YAAY,CAAC5H,wBAAwB,CAACmK,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC;UACziB;QACF,CAAC;QACDC,6BAA6B,EAAE,SAASA,6BAA6BA,CAACC,IAAI,EAAE;UAC1E,IAAIC,cAAc,GAAGnI,MAAM,CAAChJ,QAAQ,CAACoR,0BAA0B;UAC/D,IAAID,cAAc,KAAK,MAAM,IAAInI,MAAM,CAAChJ,QAAQ,CAACsI,YAAY,EAAE;YAC7D6I,cAAc,GAAG,EAAE;UACrB;UACA,IAAIA,cAAc,GAAG,CAAC,IAAIA,cAAc,KAAK,MAAM,EAAE;YACnD,IAAIE,cAAc,GAAGrI,MAAM,CAAC/B,mBAAmB,EAAE;YACjD,IAAIqK,gBAAgB,GAAGJ,IAAI,CAACK,QAAQ;YACpC,IAAIC,eAAe,GAAGN,IAAI,CAACO,MAAM;YACjC,IAAI,OAAON,cAAc,KAAK,QAAQ,EAAE;cACtCD,IAAI,CAACK,QAAQ,GAAG9K,IAAI,CAACgC,GAAG,CAAC6I,gBAAgB,GAAGH,cAAc,EAAE,CAAC,CAAC;cAC9DD,IAAI,CAACO,MAAM,GAAGhL,IAAI,CAACC,GAAG,CAAC8K,eAAe,GAAGL,cAAc,EAAEE,cAAc,GAAG,CAAC,CAAC;YAC9E,CAAC,MAAM,IAAIF,cAAc,KAAK,MAAM,EAAE;cACpC,IAAIO,MAAM,GAAGjL,IAAI,CAACkL,IAAI,CAACH,eAAe,GAAGH,cAAc,GAAG,EAAE,CAAC;cAC7DH,IAAI,CAACK,QAAQ,GAAG9K,IAAI,CAACgC,GAAG,CAAC6I,gBAAgB,GAAGI,MAAM,EAAE,CAAC,CAAC;cACtDR,IAAI,CAACO,MAAM,GAAGhL,IAAI,CAACC,GAAG,CAAC8K,eAAe,GAAGE,MAAM,EAAEL,cAAc,GAAG,CAAC,CAAC;YACtE;UACF;UACArI,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,oCAAoC,EAAEsQ,IAAI,CAAC;QACtE,CAAC;QACDU,gCAAgC,EAAE,SAASA,gCAAgCA,CAACV,IAAI,EAAE;UAChF,IAAIC,cAAc,GAAGnI,MAAM,CAAChJ,QAAQ,CAAC6R,6BAA6B;UAClE,IAAIV,cAAc,KAAK,MAAM,IAAInI,MAAM,CAAChJ,QAAQ,CAACkI,iBAAiB,EAAE;YAClEiJ,cAAc,GAAG,EAAE;UACrB;UACA,IAAIA,cAAc,GAAG,CAAC,IAAIA,cAAc,KAAK,MAAM,EAAE;YACnD,IAAIW,iBAAiB,GAAG9I,MAAM,CAACjC,sBAAsB,EAAE;YACvD,IAAIgL,mBAAmB,GAAGb,IAAI,CAACc,WAAW;YAC1C,IAAIC,kBAAkB,GAAGf,IAAI,CAACgB,SAAS;YACvC,IAAI,OAAOf,cAAc,KAAK,QAAQ,EAAE;cACtCD,IAAI,CAACc,WAAW,GAAGvL,IAAI,CAACgC,GAAG,CAACsJ,mBAAmB,GAAGZ,cAAc,EAAE,CAAC,CAAC;cACpED,IAAI,CAACgB,SAAS,GAAGzL,IAAI,CAACC,GAAG,CAACuL,kBAAkB,GAAGd,cAAc,EAAEW,iBAAiB,GAAG,CAAC,CAAC;YACvF;YACA,IAAIX,cAAc,KAAK,MAAM,EAAE;cAC7B,IAAIO,MAAM,GAAGjL,IAAI,CAACkL,IAAI,CAACM,kBAAkB,GAAGH,iBAAiB,GAAG,CAAC,CAAC;cAClEZ,IAAI,CAACc,WAAW,GAAGvL,IAAI,CAACgC,GAAG,CAACsJ,mBAAmB,GAAGL,MAAM,EAAE,CAAC,CAAC;cAC5DR,IAAI,CAACgB,SAAS,GAAGzL,IAAI,CAACC,GAAG,CAACuL,kBAAkB,GAAGP,MAAM,EAAEI,iBAAiB,GAAG,CAAC,CAAC;YAC/E;UACF;UACA9I,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,uCAAuC,EAAEsQ,IAAI,CAAC;QACzE,CAAC;QACDV,cAAc,EAAE,SAASA,cAAcA,CAAA,EAAG;UACxC,OAAOxH,MAAM,CAAChJ,QAAQ,CAACwQ,cAAc;QACvC,CAAC;QACD2B,kBAAkB,EAAE,SAASA,kBAAkBA,CAAA,EAAG;UAChD,IAAIA,kBAAkB,GAAGnJ,MAAM,CAAC/M,QAAQ,CAAC2E,QAAQ,CAAC,0BAA0B,CAAC;UAC7E,OAAOoI,MAAM,CAAChJ,QAAQ,CAACmS,kBAAkB,IAAIA,kBAAkB;QACjE;MACF,CAAC;MACD,IAAI,CAAClW,QAAQ,CAAC2E,QAAQ,CAAC,uBAAuB,EAAEqI,iBAAiB,CAAC;MAClE,IAAI,CAACjI,GAAG,GAAG,IAAIzB,WAAW,CAAC0J,iBAAiB,CAAC;MAC7C,IAAI,CAACkE,QAAQ,GAAG,IAAI,CAACnM,GAAG;MACxB,IAAIoR,QAAQ,GAAG,IAAI,CAACpR,GAAG,CAAC+D,OAAO,CAACqN,QAAQ;MACxC;MACA,IAAIC,qBAAqB,GAAG,IAAI,CAACpW,QAAQ,CAACqG,WAAW,CAACgQ,qBAAqB,EAAE;QAC3EC,KAAK,GAAGF,qBAAqB,CAACE,KAAK;QACnCC,MAAM,GAAGH,qBAAqB,CAACG,MAAM;MACvC,IAAI,CAACC,WAAW,CAACF,KAAK,EAAEC,MAAM,CAAC;MAC/B,IAAI,CAACzS,YAAY,CAACwD,gBAAgB,CAAC6O,QAAQ,EAAE,WAAW,EAAE,UAAU5O,KAAK,EAAE;QACzE;QACA,IAAIA,KAAK,CAACpH,MAAM,KAAKgW,QAAQ,IAAI5O,KAAK,CAACkP,KAAK,KAAK,CAAC,EAAE;UAClDlP,KAAK,CAACmP,eAAe,EAAE;QACzB;MACF,CAAC,CAAC;MACF,IAAI,CAAC5S,YAAY,CAACwD,gBAAgB,CAAC6O,QAAQ,EAAE,aAAa,EAAE,UAAU5O,KAAK,EAAE;QAC3E;QACA,IAAIA,KAAK,CAACpH,MAAM,KAAKgW,QAAQ,IAAI5O,KAAK,CAACkP,KAAK,KAAK,CAAC,EAAE;UAClDlP,KAAK,CAACmP,eAAe,EAAE;QACzB;MACF,CAAC,CAAC;MACF,IAAI,CAAC5S,YAAY,CAACwD,gBAAgB,CAAC,IAAI,CAACtH,QAAQ,CAACsG,YAAY,CAACe,eAAe,EAAE,OAAO,EAAE,YAAY;QAClG,IAAI0F,MAAM,CAAChJ,QAAQ,CAAC4S,oBAAoB,EAAE;UACxC,IAAI5J,MAAM,CAAChI,GAAG,CAAC6R,eAAe,EAAE;YAC9B7J,MAAM,CAAC/M,QAAQ,CAAC4E,eAAe,GAAG,IAAI;YACtCmI,MAAM,CAACtI,MAAM,EAAE;UACjB;QACF;MACF,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD9D,GAAG,EAAE,wBAAwB;IAC7BlC,KAAK,EAAE,SAAS+I,sBAAsBA,CAACqP,EAAE,EAAE;MACzC,IAAI7T,OAAO,CAAC6T,EAAE,CAAC,EAAE;QACf,OAAO,IAAI;MACb;MACA,IAAIC,kBAAkB,GAAG/T,SAAS,CAAC8T,EAAE,EAAE,IAAI,CAAC7W,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC+D,OAAO,CAACqN,QAAQ,CAAC;MAC/E,IAAI,IAAI,CAACpS,QAAQ,CAAC6D,iBAAiB,KAAK,IAAI,IAAIkP,kBAAkB,EAAE;QAClE,OAAO,IAAI;MACb;MACA,IAAI,IAAI,CAAC/S,QAAQ,CAAC6D,iBAAiB,KAAK,MAAM,IAAI,IAAI,CAACmP,kBAAkB,EAAE,IAAID,kBAAkB,EAAE;QACjG,OAAO,IAAI;MACb;MACA,IAAI,CAAC,IAAI,CAAC/S,QAAQ,CAAC6D,iBAAiB,IAAI,IAAI,CAACoP,YAAY,EAAE,IAAI,IAAI,CAACD,kBAAkB,EAAE,EAAE;QACxF,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpW,GAAG,EAAE,aAAa;IAClBlC,KAAK,EAAE,SAASwY,WAAWA,CAAA,EAAG;MAC5B,OAAOxT,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC,CAAC8B,SAAS;IACxC;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDvD,GAAG,EAAE,oBAAoB;IACzBlC,KAAK,EAAE,SAASsY,kBAAkBA,CAAA,EAAG;MACnC,IAAIG,qBAAqB,EAAEC,sBAAsB;MACjD,OAAO,CAACD,qBAAqB,GAAG,CAACC,sBAAsB,GAAG,IAAI,CAACnX,QAAQ,CAACoX,oBAAoB,EAAE,MAAM,IAAI,IAAID,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACE,QAAQ,EAAE,MAAM,IAAI,IAAIH,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAG,KAAK;IAC1Q;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDvW,GAAG,EAAE,cAAc;IACnBlC,KAAK,EAAE,SAASuY,YAAYA,CAAA,EAAG;MAC7B,IAAIM,YAAY,GAAG,IAAI,CAACtX,QAAQ,CAACuX,eAAe,EAAE;MAClD,OAAOD,YAAY,IAAIA,YAAY,CAACE,QAAQ,EAAE;IAChD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD7W,GAAG,EAAE,cAAc;IACnBlC,KAAK,EAAE,SAASmT,YAAYA,CAAC1M,KAAK,EAAEyM,UAAU,EAAE;MAC9C,IAAIzM,KAAK,EAAE;QACT;QACA,IAAI,CAAClF,QAAQ,CAAC2E,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC3E,QAAQ,CAAC4E,eAAe,EAAE+M,UAAU,CAAC;MACvF;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDhR,GAAG,EAAE,aAAa;IAClBlC,KAAK,EAAE,SAASqT,WAAWA,CAAC5M,KAAK,EAAE;MACjC,IAAIA,KAAK,EAAE;QACT;QACA,IAAI,CAAClF,QAAQ,CAAC2E,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC3E,QAAQ,CAAC4E,eAAe,CAAC;MAC1E;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDjE,GAAG,EAAE,iBAAiB;IACtBlC,KAAK,EAAE,SAASkQ,eAAeA,CAACD,cAAc,EAAED,EAAE,EAAE;MAClD,IAAIA,EAAE,CAACxH,UAAU,EAAE;QACjB,IAAIF,SAAS,GAAG0H,EAAE,CAACxH,UAAU;QAC7B,IAAI,CAACnE,QAAQ,CAACiE,SAAS,EAAE,UAAU,CAAC,EAAE;UACpCrE,KAAK,CAAC+L,EAAE,CAAC;UACT,IAAI,CAACE,eAAe,CAACD,cAAc,EAAED,EAAE,CAAC;UACxC;QACF;QACA,IAAI,CAACgJ,gBAAgB,CAAC1Q,SAAS,CAAC2Q,aAAa,CAAC,YAAY,CAAC,EAAEhJ,cAAc,EAAE,IAAI,CAAC1O,QAAQ,CAAC2X,YAAY,CAAC;MAC1G,CAAC,MAAM;QACL,IAAIC,eAAe,GAAG,IAAI,CAAC5X,QAAQ;UACjCsG,YAAY,GAAGsR,eAAe,CAACtR,YAAY;UAC3CqR,YAAY,GAAGC,eAAe,CAACD,YAAY;QAC7C,IAAIE,GAAG,GAAGvR,YAAY,CAACI,aAAa,CAAC,KAAK,CAAC;QAC3C,IAAIoR,IAAI,GAAGxR,YAAY,CAACI,aAAa,CAAC,MAAM,CAAC;QAC7CmR,GAAG,CAACE,SAAS,GAAG,UAAU;QAC1BD,IAAI,CAACC,SAAS,GAAG,WAAW;QAC5B,IAAI,CAACN,gBAAgB,CAACK,IAAI,EAAEpJ,cAAc,EAAEiJ,YAAY,CAAC;QACzDE,GAAG,CAAChR,WAAW,CAACiR,IAAI,CAAC;QACrBrJ,EAAE,CAAC5H,WAAW,CAACgR,GAAG,CAAC;MACrB;MACA,IAAI,CAAC7X,QAAQ,CAAC2E,QAAQ,CAAC,mBAAmB,EAAE+J,cAAc,EAAED,EAAE,CAAC;IACjE;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD9N,GAAG,EAAE,iBAAiB;IACtBlC,KAAK,EAAE,SAASsQ,eAAeA,CAACU,iBAAiB,EAAEhB,EAAE,EAAE;MACrD,IAAIuJ,KAAK,GAAG7S,SAAS,CAACzG,MAAM,GAAG,CAAC,IAAIyG,SAAS,CAAC,CAAC,CAAC,KAAKtD,SAAS,GAAGsD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACnF,QAAQ,CAACiY,YAAY;MAC1G,IAAI9F,WAAW,GAAGhN,SAAS,CAACzG,MAAM,GAAG,CAAC,IAAIyG,SAAS,CAAC,CAAC,CAAC,KAAKtD,SAAS,GAAGsD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MACvF,IAAIsJ,EAAE,CAACxH,UAAU,EAAE;QACjB,IAAIF,SAAS,GAAG0H,EAAE,CAACxH,UAAU;QAC7B,IAAInE,QAAQ,CAACiE,SAAS,EAAE,UAAU,CAAC,EAAE;UACnC,IAAI,CAAC0Q,gBAAgB,CAAC1Q,SAAS,CAAC2Q,aAAa,CAAC,YAAY,CAAC,EAAEjI,iBAAiB,EAAEuI,KAAK,EAAE7F,WAAW,CAAC;QACrG,CAAC,MAAM;UACLzP,KAAK,CAAC+L,EAAE,CAAC;UACT,IAAI,CAACM,eAAe,CAACU,iBAAiB,EAAEhB,EAAE,EAAEuJ,KAAK,EAAE7F,WAAW,CAAC;QACjE;MACF,CAAC,MAAM;QACL,IAAI7L,YAAY,GAAG,IAAI,CAACtG,QAAQ,CAACsG,YAAY;QAC7C,IAAIuR,GAAG,GAAGvR,YAAY,CAACI,aAAa,CAAC,KAAK,CAAC;QAC3C,IAAIoR,IAAI,GAAGxR,YAAY,CAACI,aAAa,CAAC,MAAM,CAAC;QAC7CmR,GAAG,CAACE,SAAS,GAAG,UAAU;QAC1BD,IAAI,CAACC,SAAS,GAAG,WAAW;QAC5B,IAAI,CAACN,gBAAgB,CAACK,IAAI,EAAErI,iBAAiB,EAAEuI,KAAK,EAAE7F,WAAW,CAAC;QAClE0F,GAAG,CAAChR,WAAW,CAACiR,IAAI,CAAC;QACrBrJ,EAAE,CAAC5H,WAAW,CAACgR,GAAG,CAAC;MACrB;MACA,IAAI,CAAC7X,QAAQ,CAAC2E,QAAQ,CAAC,mBAAmB,EAAE8K,iBAAiB,EAAEhB,EAAE,EAAE0D,WAAW,CAAC;IACjF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDxR,GAAG,EAAE,kBAAkB;IACvBlC,KAAK,EAAE,SAASgZ,gBAAgBA,CAACS,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAE;MACxD,IAAIjG,WAAW,GAAGhN,SAAS,CAACzG,MAAM,GAAG,CAAC,IAAIyG,SAAS,CAAC,CAAC,CAAC,KAAKtD,SAAS,GAAGsD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MACvF,IAAIkT,aAAa,GAAGF,KAAK;MACzB,IAAIG,aAAa,GAAG,IAAI,CAACvT,GAAG,CAACK,UAAU,CAACmT,gBAAgB,CAACL,OAAO,CAAC,IAAI,IAAI,CAACnT,GAAG;;MAE7E;MACA,IAAImT,OAAO,CAAChP,UAAU,EAAE;QACtB,IAAIpG,QAAQ,CAACoV,OAAO,EAAE,WAAW,CAAC,EAAE;UAClCG,aAAa,GAAGC,aAAa,CAACxP,OAAO,CAAC0P,YAAY,CAACC,gBAAgB,CAACN,KAAK,CAAC;QAC5E,CAAC,MAAM,IAAIrV,QAAQ,CAACoV,OAAO,EAAE,WAAW,CAAC,EAAE;UACzCG,aAAa,GAAGC,aAAa,CAACxP,OAAO,CAAC4P,SAAS,CAACD,gBAAgB,CAACN,KAAK,CAAC;QACzE;MACF;MACA,IAAIE,aAAa,GAAG,CAAC,CAAC,EAAE;QACtB1V,aAAa,CAACuV,OAAO,EAAEE,OAAO,CAACD,KAAK,EAAEhG,WAAW,CAAC,CAAC;MACrD,CAAC,MAAM;QACL;QACAvP,aAAa,CAACsV,OAAO,EAAE1W,MAAM,CAACmX,YAAY,CAAC,GAAG,CAAC,CAAC;QAChDnW,QAAQ,CAAC0V,OAAO,EAAE,cAAc,CAAC;MACnC;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDvX,GAAG,EAAE,4BAA4B;IACjClC,KAAK,EAAE,SAASma,0BAA0BA,CAACC,YAAY,EAAE;MACvD,IAAIC,cAAc,GAAG,IAAI,CAAC/T,GAAG,CAACgU,UAAU,CAACC,iBAAiB,EAAE;MAC5D,IAAIC,QAAQ,GAAGH,cAAc,GAAGD,YAAY;MAC5C,OAAOI,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;IACpC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDtY,GAAG,EAAE,6BAA6B;IAClClC,KAAK,EAAE,SAASya,2BAA2BA,CAACC,SAAS,EAAE;MACrD,IAAIC,eAAe,GAAG,IAAI,CAACrU,GAAG,CAACgU,UAAU,CAACM,kBAAkB,EAAE;MAC9D,IAAIC,SAAS,GAAGF,eAAe,GAAGD,SAAS;MAC3C,OAAOG,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC;IACtC;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD3Y,GAAG,EAAE,aAAa;IAClBlC,KAAK,EAAE,SAAS+X,WAAWA,CAACF,KAAK,EAAEC,MAAM,EAAE;MACzC,IAAIpQ,IAAI,GAAG1C,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC;MAChC,IAAImX,KAAK,GAAG,CAACjD,KAAK,EAAEC,MAAM,CAAC;MAC3BpQ,IAAI,CAAC/B,SAAS,GAAGmV,KAAK,CAAC,CAAC,CAAC;MACzBpT,IAAI,CAAC9B,UAAU,GAAGkV,KAAK,CAAC,CAAC,CAAC;IAC5B;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD5Y,GAAG,EAAE,aAAa;IAClBlC,KAAK,EAAE,SAAS+a,WAAWA,CAAA,EAAG;MAC5B,IAAIrT,IAAI,GAAG1C,WAAW,CAACrB,GAAG,CAAC,IAAI,CAAC;MAChC,OAAO;QACLkU,KAAK,EAAEnQ,IAAI,CAAC/B,SAAS;QACrBmS,MAAM,EAAEpQ,IAAI,CAAC9B;MACf,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD1D,GAAG,EAAE,yBAAyB;IAC9BlC,KAAK,EAAE,SAASgb,uBAAuBA,CAAA,EAAG;MACxC,OAAO,IAAI,CAACzZ,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAAC,IAAI,CAACjK,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC2U,QAAQ,CAACC,kBAAkB,EAAE,CAAC;IACxH;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDhZ,GAAG,EAAE,wBAAwB;IAC7BlC,KAAK,EAAE,SAASmb,sBAAsBA,CAAA,EAAG;MACvC,OAAO,IAAI,CAAC5Z,QAAQ,CAACgK,cAAc,CAACC,4BAA4B,CAAC,IAAI,CAACjK,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC2U,QAAQ,CAACG,iBAAiB,EAAE,CAAC;IACvH;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlZ,GAAG,EAAE,4BAA4B;IACjClC,KAAK,EAAE,SAASqb,0BAA0BA,CAAA,EAAG;MAC3C,OAAO,IAAI,CAAC9Z,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC,IAAI,CAACjK,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC2U,QAAQ,CAACK,qBAAqB,EAAE,CAAC;IAC9H;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpZ,GAAG,EAAE,2BAA2B;IAChClC,KAAK,EAAE,SAASub,yBAAyBA,CAAA,EAAG;MAC1C,OAAO,IAAI,CAACha,QAAQ,CAACmK,iBAAiB,CAACF,4BAA4B,CAAC,IAAI,CAACjK,QAAQ,CAAC4I,IAAI,CAAC7D,GAAG,CAAC2U,QAAQ,CAACO,oBAAoB,EAAE,CAAC;IAC7H;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDtZ,GAAG,EAAE,uBAAuB;IAC5BlC,KAAK,EAAE,SAASyb,qBAAqBA,CAAA,EAAG;MACtC,OAAOlY,qBAAqB,CAAC,IAAI,EAAE2B,mBAAmB,CAAC;IACzD;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDhD,GAAG,EAAE,oBAAoB;IACzBlC,KAAK,EAAE,SAAS0b,kBAAkBA,CAAA,EAAG;MACnC,OAAOnY,qBAAqB,CAAC,IAAI,EAAE4B,gBAAgB,CAAC;IACtD;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDjD,GAAG,EAAE,SAAS;IACdlC,KAAK,EAAE,SAAS2b,OAAOA,CAAA,EAAG;MACxB,IAAI,CAACrV,GAAG,CAACqV,OAAO,EAAE;MAClB,IAAI,CAACtW,YAAY,CAACsW,OAAO,EAAE;IAC7B;EACF,CAAC,CAAC,CAAC;EACH,OAAOvW,SAAS;AAClB,CAAC,EAAE;AACH,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}