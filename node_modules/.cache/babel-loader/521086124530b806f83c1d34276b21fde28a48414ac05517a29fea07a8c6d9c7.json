{"ast":null,"code":"import { createKeysObserver } from \"./keyObserver.mjs\";\nimport { normalizeEventKey } from \"./utils.mjs\";\nimport { isImmediatePropagationStopped } from \"../helpers/dom/event.mjs\";\nimport { getParentWindow } from \"../helpers/dom/element.mjs\";\nimport { isMacOS } from \"../helpers/browser.mjs\";\nvar MODIFIER_KEYS = ['meta', 'alt', 'shift', 'control'];\nvar modifierKeysObserver = createKeysObserver();\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * A key recorder, used for tracking key events.\n *\n * @param {EventTarget} ownerWindow A starting `window` element\n * @param {Function} handleEvent A condition on which event is handled.\n * @param {Function} beforeKeyDown A hook fired before the `keydown` event is handled.\n * @param {Function} afterKeyDown A hook fired after the `keydown` event is handled\n * @param {Function} callback `KeyEvent`'s listener's callback function\n * @returns {object}\n */\nexport function useRecorder(ownerWindow, handleEvent, beforeKeyDown, afterKeyDown, callback) {\n  /**\n   * Check if a pressed key is tracked or not.\n   *\n   * @param {string} pressedKey A pressed key\n   * @returns {boolean}\n   */\n  var isModifierKey = function isModifierKey(pressedKey) {\n    return MODIFIER_KEYS.includes(pressedKey);\n  };\n\n  /**\n   * Get every pressed modifier key from the performed `KeyboardEvent`.\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object.\n   * @param {boolean} [mergeMetaKeys=false] If `true,` the function will return the \"control\" and \"meta\"\n   *                                        modifiers keys as the \"control/meta\" name. This allows creating\n   *                                        keyboard shortcuts with modifier key that trigger the shortcut\n   *                                        actions depend on the OS keyboard layout (the Meta key for macOS\n   *                                        and Control for non macOS system).\n   * @returns {string[]}\n   */\n  var getPressedModifierKeys = function getPressedModifierKeys(event) {\n    var mergeMetaKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var pressedModifierKeys = [];\n    if (event.altKey) {\n      pressedModifierKeys.push('alt');\n    }\n    if (mergeMetaKeys && (event.ctrlKey || event.metaKey)) {\n      pressedModifierKeys.push('control/meta');\n    } else {\n      if (event.ctrlKey) {\n        pressedModifierKeys.push('control');\n      }\n      if (event.metaKey) {\n        pressedModifierKeys.push('meta');\n      }\n    }\n    if (event.shiftKey) {\n      pressedModifierKeys.push('shift');\n    }\n    return pressedModifierKeys;\n  };\n\n  /**\n   * `KeyboardEvent`'s callback function\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object\n   */\n  var onkeydown = function onkeydown(event) {\n    if (handleEvent(event) === false) {\n      return;\n    }\n    var result = beforeKeyDown(event);\n\n    // keyCode 229 aka 'uninitialized' doesn't take into account with editors. This key code is\n    // produced when unfinished character is entering using the IME editor. It is fired on macOS,\n    // Windows and linux (ubuntu) with installed ibus-pinyin package.\n    if (event.keyCode === 229 || result === false || isImmediatePropagationStopped(event)) {\n      return;\n    }\n    var pressedKey = normalizeEventKey(event.key);\n    var extraModifierKeys = [];\n    if (isModifierKey(pressedKey)) {\n      modifierKeysObserver.press(pressedKey);\n    } else {\n      extraModifierKeys = getPressedModifierKeys(event);\n    }\n    var pressedKeys = [pressedKey].concat(extraModifierKeys);\n    var isExecutionCancelled = callback(event, pressedKeys);\n    if (!isExecutionCancelled && (isMacOS() && extraModifierKeys.includes('meta') || !isMacOS() && extraModifierKeys.includes('control'))) {\n      // Trigger the callback for the virtual OS-dependent \"control/meta\" key\n      callback(event, [pressedKey].concat(getPressedModifierKeys(event, true)));\n    }\n    afterKeyDown(event);\n  };\n\n  /**\n   * `KeyboardEvent`'s callback function\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object\n   */\n  var onkeyup = function onkeyup(event) {\n    if (handleEvent(event) === false) {\n      return;\n    }\n    var pressedKey = normalizeEventKey(event.key);\n    if (isModifierKey(pressedKey) === false) {\n      return;\n    }\n    modifierKeysObserver.release(pressedKey);\n  };\n\n  /**\n   * `FocusEvent`'s callback function\n   *\n   * @private\n   */\n  var onblur = function onblur() {\n    modifierKeysObserver.releaseAll();\n  };\n\n  /**\n   * Add event listeners to the starting window and its parents' windows.\n   */\n  var mount = function mount() {\n    var eventTarget = ownerWindow;\n    while (eventTarget) {\n      eventTarget.document.documentElement.addEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.addEventListener('keyup', onkeyup);\n      eventTarget.document.documentElement.addEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n\n  /**\n   * Remove event listeners from the starting window and its parents' windows.\n   */\n  var unmount = function unmount() {\n    var eventTarget = ownerWindow;\n    while (eventTarget) {\n      eventTarget.document.documentElement.removeEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.removeEventListener('keyup', onkeyup);\n      eventTarget.document.documentElement.removeEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n  return {\n    mount: mount,\n    unmount: unmount,\n    isPressed: function isPressed(key) {\n      return modifierKeysObserver.isPressed(key);\n    },\n    releasePressedKeys: function releasePressedKeys() {\n      return modifierKeysObserver.releaseAll();\n    }\n  };\n}","map":{"version":3,"names":["createKeysObserver","normalizeEventKey","isImmediatePropagationStopped","getParentWindow","isMacOS","MODIFIER_KEYS","modifierKeysObserver","useRecorder","ownerWindow","handleEvent","beforeKeyDown","afterKeyDown","callback","isModifierKey","pressedKey","includes","getPressedModifierKeys","event","mergeMetaKeys","arguments","length","undefined","pressedModifierKeys","altKey","push","ctrlKey","metaKey","shiftKey","onkeydown","result","keyCode","key","extraModifierKeys","press","pressedKeys","concat","isExecutionCancelled","onkeyup","release","onblur","releaseAll","mount","eventTarget","document","documentElement","addEventListener","unmount","removeEventListener","isPressed","releasePressedKeys"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/shortcuts/recorder.mjs"],"sourcesContent":["import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createKeysObserver } from \"./keyObserver.mjs\";\nimport { normalizeEventKey } from \"./utils.mjs\";\nimport { isImmediatePropagationStopped } from \"../helpers/dom/event.mjs\";\nimport { getParentWindow } from \"../helpers/dom/element.mjs\";\nimport { isMacOS } from \"../helpers/browser.mjs\";\nvar MODIFIER_KEYS = ['meta', 'alt', 'shift', 'control'];\nvar modifierKeysObserver = createKeysObserver();\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * A key recorder, used for tracking key events.\n *\n * @param {EventTarget} ownerWindow A starting `window` element\n * @param {Function} handleEvent A condition on which event is handled.\n * @param {Function} beforeKeyDown A hook fired before the `keydown` event is handled.\n * @param {Function} afterKeyDown A hook fired after the `keydown` event is handled\n * @param {Function} callback `KeyEvent`'s listener's callback function\n * @returns {object}\n */\nexport function useRecorder(ownerWindow, handleEvent, beforeKeyDown, afterKeyDown, callback) {\n  /**\n   * Check if a pressed key is tracked or not.\n   *\n   * @param {string} pressedKey A pressed key\n   * @returns {boolean}\n   */\n  var isModifierKey = function isModifierKey(pressedKey) {\n    return MODIFIER_KEYS.includes(pressedKey);\n  };\n\n  /**\n   * Get every pressed modifier key from the performed `KeyboardEvent`.\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object.\n   * @param {boolean} [mergeMetaKeys=false] If `true,` the function will return the \"control\" and \"meta\"\n   *                                        modifiers keys as the \"control/meta\" name. This allows creating\n   *                                        keyboard shortcuts with modifier key that trigger the shortcut\n   *                                        actions depend on the OS keyboard layout (the Meta key for macOS\n   *                                        and Control for non macOS system).\n   * @returns {string[]}\n   */\n  var getPressedModifierKeys = function getPressedModifierKeys(event) {\n    var mergeMetaKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var pressedModifierKeys = [];\n    if (event.altKey) {\n      pressedModifierKeys.push('alt');\n    }\n    if (mergeMetaKeys && (event.ctrlKey || event.metaKey)) {\n      pressedModifierKeys.push('control/meta');\n    } else {\n      if (event.ctrlKey) {\n        pressedModifierKeys.push('control');\n      }\n      if (event.metaKey) {\n        pressedModifierKeys.push('meta');\n      }\n    }\n    if (event.shiftKey) {\n      pressedModifierKeys.push('shift');\n    }\n    return pressedModifierKeys;\n  };\n\n  /**\n   * `KeyboardEvent`'s callback function\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object\n   */\n  var onkeydown = function onkeydown(event) {\n    if (handleEvent(event) === false) {\n      return;\n    }\n    var result = beforeKeyDown(event);\n\n    // keyCode 229 aka 'uninitialized' doesn't take into account with editors. This key code is\n    // produced when unfinished character is entering using the IME editor. It is fired on macOS,\n    // Windows and linux (ubuntu) with installed ibus-pinyin package.\n    if (event.keyCode === 229 || result === false || isImmediatePropagationStopped(event)) {\n      return;\n    }\n    var pressedKey = normalizeEventKey(event.key);\n    var extraModifierKeys = [];\n    if (isModifierKey(pressedKey)) {\n      modifierKeysObserver.press(pressedKey);\n    } else {\n      extraModifierKeys = getPressedModifierKeys(event);\n    }\n    var pressedKeys = [pressedKey].concat(extraModifierKeys);\n    var isExecutionCancelled = callback(event, pressedKeys);\n    if (!isExecutionCancelled && (isMacOS() && extraModifierKeys.includes('meta') || !isMacOS() && extraModifierKeys.includes('control'))) {\n      // Trigger the callback for the virtual OS-dependent \"control/meta\" key\n      callback(event, [pressedKey].concat(getPressedModifierKeys(event, true)));\n    }\n    afterKeyDown(event);\n  };\n\n  /**\n   * `KeyboardEvent`'s callback function\n   *\n   * @private\n   * @param {KeyboardEvent} event The event object\n   */\n  var onkeyup = function onkeyup(event) {\n    if (handleEvent(event) === false) {\n      return;\n    }\n    var pressedKey = normalizeEventKey(event.key);\n    if (isModifierKey(pressedKey) === false) {\n      return;\n    }\n    modifierKeysObserver.release(pressedKey);\n  };\n\n  /**\n   * `FocusEvent`'s callback function\n   *\n   * @private\n   */\n  var onblur = function onblur() {\n    modifierKeysObserver.releaseAll();\n  };\n\n  /**\n   * Add event listeners to the starting window and its parents' windows.\n   */\n  var mount = function mount() {\n    var eventTarget = ownerWindow;\n    while (eventTarget) {\n      eventTarget.document.documentElement.addEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.addEventListener('keyup', onkeyup);\n      eventTarget.document.documentElement.addEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n\n  /**\n   * Remove event listeners from the starting window and its parents' windows.\n   */\n  var unmount = function unmount() {\n    var eventTarget = ownerWindow;\n    while (eventTarget) {\n      eventTarget.document.documentElement.removeEventListener('keydown', onkeydown);\n      eventTarget.document.documentElement.removeEventListener('keyup', onkeyup);\n      eventTarget.document.documentElement.removeEventListener('blur', onblur);\n      eventTarget = getParentWindow(eventTarget);\n    }\n  };\n  return {\n    mount: mount,\n    unmount: unmount,\n    isPressed: function isPressed(key) {\n      return modifierKeysObserver.isPressed(key);\n    },\n    releasePressedKeys: function releasePressedKeys() {\n      return modifierKeysObserver.releaseAll();\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}