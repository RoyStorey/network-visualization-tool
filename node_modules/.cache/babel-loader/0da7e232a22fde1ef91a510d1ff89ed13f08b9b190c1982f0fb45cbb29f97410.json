{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideColumnItem from \"./contextMenuItem/hideColumn.mjs\";\nimport showColumnItem from \"./contextMenuItem/showColumn.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\nexport var PLUGIN_KEY = 'hiddenColumns';\nexport var PLUGIN_PRIORITY = 310;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin HiddenColumns\n * @class HiddenColumns\n *\n * @description\n * The `HiddenColumns` plugin lets you [hide specified columns](@/guides/columns/column-hiding.md).\n *\n * \"Hiding a column\" means that the hidden column doesn't get rendered as a DOM element.\n *\n * The `HiddenColumns` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `columns` | No | Array | - | [Hides specified columns by default](@/guides/columns/column-hiding.md#step-1-specify-columns-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/columns/column-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/columns/column-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenColumns` plugin's instance\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   hiddenColumns={{\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }}\n * />\n *\n * // access the `HiddenColumns` plugin's instance\n * const hot = hotRef.current.hotInstance;\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n */\nvar _settings = /*#__PURE__*/new WeakMap();\nvar _hiddenColumnsMap = /*#__PURE__*/new WeakMap();\nexport var HiddenColumns = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n  var _super = _createSuper(HiddenColumns);\n  function HiddenColumns() {\n    var _this;\n    _classCallCheck(this, HiddenColumns);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _settings, {\n      writable: true,\n      value: {}\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hiddenColumnsMap, {\n      writable: true,\n      value: null\n    });\n    return _this;\n  }\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` then the {@link HiddenColumns#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n      _classPrivateFieldSet(this, _hiddenColumnsMap, new HidingMap());\n      _classPrivateFieldGet(this, _hiddenColumnsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n      this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenColumnsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('afterGetColHeader', function () {\n        return _this2.onAfterGetColHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`hiddenColumns`](@/api/options.md#hiddencolumns)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n      _classPrivateFieldSet(this, _settings, {});\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n      this.resetCellsMeta();\n    }\n\n    /**\n     * Shows the provided columns.\n     *\n     * @param {number[]} columns Array of visual column indexes.\n     */\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var _this3 = this;\n      var currentHideConfig = this.getHiddenColumns();\n      var isValidConfig = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenColumnsMap).getValues().slice();\n      var isAnyColumnShowed = columns.length > 0;\n      if (isValidConfig && isAnyColumnShowed) {\n        var physicalColumns = columns.map(function (visualColumn) {\n          return _this3.hot.toPhysicalColumn(visualColumn);\n        });\n\n        // Preparing new values for hiding map.\n        arrayEach(physicalColumns, function (physicalColumn) {\n          hidingMapValues[physicalColumn] = false;\n        });\n\n        // Preparing new hiding config.\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualColumn(physicalIndex));\n          }\n          return hiddenIndexes;\n        }, []);\n      }\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isValidConfig && isAnyColumnShowed) {\n        _classPrivateFieldGet(this, _hiddenColumnsMap).setValues(hidingMapValues);\n      }\n\n      // @TODO Should call once per render cycle, currently fired separately in different plugins\n      this.hot.view.adjustElementsSize();\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n\n    /**\n     * Shows a single column.\n     *\n     * @param {...number} column Visual column index.\n     */\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n      this.showColumns(column);\n    }\n\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {number[]} columns Array of visual column indexes.\n     */\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var _this4 = this;\n      var currentHideConfig = this.getHiddenColumns();\n      var isConfigValid = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, isConfigValid);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(columns, function (visualColumn) {\n            _classPrivateFieldGet(_this4, _hiddenColumnsMap).setValueAtIndex(_this4.hot.toPhysicalColumn(visualColumn), true);\n          });\n        }, true);\n      }\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n\n    /**\n     * Hides a single column.\n     *\n     * @param {...number} column Visual column index.\n     */\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len3 = arguments.length, column = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        column[_key3] = arguments[_key3];\n      }\n      this.hideColumns(column);\n    }\n\n    /**\n     * Returns an array of visual indexes of hidden columns.\n     *\n     * @returns {number[]}\n     */\n  }, {\n    key: \"getHiddenColumns\",\n    value: function getHiddenColumns() {\n      var _this5 = this;\n      return arrayMap(_classPrivateFieldGet(this, _hiddenColumnsMap).getHiddenIndexes(), function (physicalColumnIndex) {\n        return _this5.hot.toVisualColumn(physicalColumnIndex);\n      });\n    }\n\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {number} column Visual column index.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      return _classPrivateFieldGet(this, _hiddenColumnsMap).getValueAtIndex(this.hot.toPhysicalColumn(column)) || false;\n    }\n\n    /**\n     * Get if trim config is valid. Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenColumns List of hidden column indexes.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenColumns) {\n      var nrOfColumns = this.hot.countCols();\n      if (Array.isArray(hiddenColumns) && hiddenColumns.length > 0) {\n        return hiddenColumns.every(function (visualColumn) {\n          return Number.isInteger(visualColumn) && visualColumn >= 0 && visualColumn < nrOfColumns;\n        });\n      }\n      return false;\n    }\n\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n        }\n      });\n    }\n\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {number|undefined} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, column) {\n      // Hook is triggered internally only for the visible columns. Conditional will be handled for the API\n      // calls of the `getColWidth` function on not visible indexes.\n      if (this.isHidden(column)) {\n        return 0;\n      }\n      if (_classPrivateFieldGet(this, _settings).indicators && (this.isHidden(column + 1) || this.isHidden(column - 1))) {\n        // Add additional space for hidden column indicator.\n        if (typeof width === 'number' && this.hot.hasColHeaders()) {\n          return width + 15;\n        }\n      }\n    }\n\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(column)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipColumnOnPaste = true;\n      }\n      if (this.isHidden(column - 1)) {\n        cellProperties.className = cellProperties.className || '';\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n        if (classArr.length > 0) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n      var newRanges = [];\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (visualColumn) {\n          if (_this6.isHidden(visualColumn)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn - 1);\n            }\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualColumn;\n            }\n            if (visualColumn === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn);\n            }\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || column < 0) {\n        return;\n      }\n      var classList = [];\n      if (column >= 1 && this.isHidden(column - 1)) {\n        classList.push('afterHiddenColumn');\n      }\n      if (column < this.hot.countCols() - 1 && this.isHidden(column + 1)) {\n        classList.push('beforeHiddenColumn');\n      }\n      addClass(TH, classList);\n    }\n\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).columns)) {\n        this.hideColumns(_classPrivateFieldGet(this, _settings).columns);\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n      _classPrivateFieldSet(this, _hiddenColumnsMap, null);\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {object}\n     */\n  }]);\n\n  return HiddenColumns;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","_classPrivateFieldGet","_classExtractFieldDescriptor","_classApplyDescriptorGet","_classPrivateFieldSet","_classApplyDescriptorSet","action","BasePlugin","addClass","rangeEach","arrayEach","arrayMap","arrayReduce","isObject","isUndefined","SEPARATOR","Hooks","hideColumnItem","showColumnItem","HidingMap","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","_settings","WeakMap","_hiddenColumnsMap","HiddenColumns","_BasePlugin","_super","_this","_len","args","Array","_key","concat","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","pluginSettings","copyPasteEnabled","addLocalHook","onMapInit","columnIndexMapper","registerMap","pluginName","addHook","onAfterContextMenuDefaultOptions","row","col","cellProperties","onAfterGetCellMeta","width","onModifyColWidth","onAfterGetColHeader","ranges","onModifyCopyableRange","updatePlugin","disablePlugin","unregisterMap","resetCellsMeta","showColumns","columns","_this3","currentHideConfig","getHiddenColumns","isValidConfig","destinationHideConfig","hidingMapValues","getValues","slice","isAnyColumnShowed","physicalColumns","map","visualColumn","toPhysicalColumn","physicalColumn","hiddenIndexes","isHidden","physicalIndex","push","toVisualColumn","continueHiding","runHooks","setValues","view","adjustElementsSize","showColumn","_len2","column","_key2","hideColumns","_this4","isConfigValid","from","Set","batchExecution","setValueAtIndex","hideColumn","_len3","_key3","_this5","getHiddenIndexes","physicalColumnIndex","getValueAtIndex","hiddenColumns","nrOfColumns","countCols","isArray","every","isInteger","getCellsMeta","meta","skipColumnOnPaste","indicators","hasColHeaders","className","indexOf","classArr","split","containAfterHiddenColumn","splice","join","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","range","rangeStart","TH","classList","options","items","name","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/hiddenColumns/hiddenColumns.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { addClass } from \"../../helpers/dom/element.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayMap, arrayReduce } from \"../../helpers/array.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isUndefined } from \"../../helpers/mixed.mjs\";\nimport { SEPARATOR } from \"../contextMenu/predefinedItems.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport hideColumnItem from \"./contextMenuItem/hideColumn.mjs\";\nimport showColumnItem from \"./contextMenuItem/showColumn.mjs\";\nimport { HidingMap } from \"../../translations/index.mjs\";\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\nexport var PLUGIN_KEY = 'hiddenColumns';\nexport var PLUGIN_PRIORITY = 310;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin HiddenColumns\n * @class HiddenColumns\n *\n * @description\n * The `HiddenColumns` plugin lets you [hide specified columns](@/guides/columns/column-hiding.md).\n *\n * \"Hiding a column\" means that the hidden column doesn't get rendered as a DOM element.\n *\n * The `HiddenColumns` plugin doesn't modify the source data,\n * and doesn't participate in data transformation\n * (the shape of the data returned by the [`getData*()` methods](@/api/core.md#getdata) stays intact).\n *\n * You can set the following configuration options:\n *\n * | Option | Required | Type | Default | Description |\n * |---|---|---|---|---|\n * | `columns` | No | Array | - | [Hides specified columns by default](@/guides/columns/column-hiding.md#step-1-specify-columns-hidden-by-default) |\n * | `indicators` | No | Boolean | `false` | [Shows UI indicators](@/guides/columns/column-hiding.md#step-2-show-ui-indicators) |\n * | `copyPasteEnabled` | No | Boolean | `true` | [Sets up copy/paste behavior](@/guides/columns/column-hiding.md#step-4-set-up-copy-and-paste-behavior) |\n *\n * @example\n *\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access the `HiddenColumns` plugin's instance\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   hiddenColumns={{\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }}\n * />\n *\n * // access the `HiddenColumns` plugin's instance\n * const hot = hotRef.current.hotInstance;\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // hide a single column\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // hide multiple columns as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // unhide a single column\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // unhide multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // unhide multiple columns as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // to see your changes, re-render your Handsontable instance\n * hot.render();\n * ```\n * :::\n */\nvar _settings = /*#__PURE__*/new WeakMap();\nvar _hiddenColumnsMap = /*#__PURE__*/new WeakMap();\nexport var HiddenColumns = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n  var _super = _createSuper(HiddenColumns);\n  function HiddenColumns() {\n    var _this;\n    _classCallCheck(this, HiddenColumns);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _settings, {\n      writable: true,\n      value: {}\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _hiddenColumnsMap, {\n      writable: true,\n      value: null\n    });\n    return _this;\n  }\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` then the {@link HiddenColumns#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var pluginSettings = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(pluginSettings)) {\n        _classPrivateFieldSet(this, _settings, pluginSettings);\n        if (isUndefined(pluginSettings.copyPasteEnabled)) {\n          pluginSettings.copyPasteEnabled = true;\n        }\n      }\n      _classPrivateFieldSet(this, _hiddenColumnsMap, new HidingMap());\n      _classPrivateFieldGet(this, _hiddenColumnsMap).addLocalHook('init', function () {\n        return _this2.onMapInit();\n      });\n      this.hot.columnIndexMapper.registerMap(this.pluginName, _classPrivateFieldGet(this, _hiddenColumnsMap));\n      this.addHook('afterContextMenuDefaultOptions', function () {\n        return _this2.onAfterContextMenuDefaultOptions.apply(_this2, arguments);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('afterGetColHeader', function () {\n        return _this2.onAfterGetColHeader.apply(_this2, arguments);\n      });\n      this.addHook('modifyCopyableRange', function (ranges) {\n        return _this2.onModifyCopyableRange(ranges);\n      });\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`hiddenColumns`](@/api/options.md#hiddencolumns)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hot.columnIndexMapper.unregisterMap(this.pluginName);\n      _classPrivateFieldSet(this, _settings, {});\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n      this.resetCellsMeta();\n    }\n\n    /**\n     * Shows the provided columns.\n     *\n     * @param {number[]} columns Array of visual column indexes.\n     */\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var _this3 = this;\n      var currentHideConfig = this.getHiddenColumns();\n      var isValidConfig = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n      var hidingMapValues = _classPrivateFieldGet(this, _hiddenColumnsMap).getValues().slice();\n      var isAnyColumnShowed = columns.length > 0;\n      if (isValidConfig && isAnyColumnShowed) {\n        var physicalColumns = columns.map(function (visualColumn) {\n          return _this3.hot.toPhysicalColumn(visualColumn);\n        });\n\n        // Preparing new values for hiding map.\n        arrayEach(physicalColumns, function (physicalColumn) {\n          hidingMapValues[physicalColumn] = false;\n        });\n\n        // Preparing new hiding config.\n        destinationHideConfig = arrayReduce(hidingMapValues, function (hiddenIndexes, isHidden, physicalIndex) {\n          if (isHidden) {\n            hiddenIndexes.push(_this3.hot.toVisualColumn(physicalIndex));\n          }\n          return hiddenIndexes;\n        }, []);\n      }\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isValidConfig && isAnyColumnShowed) {\n        _classPrivateFieldGet(this, _hiddenColumnsMap).setValues(hidingMapValues);\n      }\n\n      // @TODO Should call once per render cycle, currently fired separately in different plugins\n      this.hot.view.adjustElementsSize();\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, isValidConfig && isAnyColumnShowed, isValidConfig && destinationHideConfig.length < currentHideConfig.length);\n    }\n\n    /**\n     * Shows a single column.\n     *\n     * @param {...number} column Visual column index.\n     */\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n      this.showColumns(column);\n    }\n\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {number[]} columns Array of visual column indexes.\n     */\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var _this4 = this;\n      var currentHideConfig = this.getHiddenColumns();\n      var isConfigValid = this.isValidConfig(columns);\n      var destinationHideConfig = currentHideConfig;\n      if (isConfigValid) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, isConfigValid);\n      if (continueHiding === false) {\n        return;\n      }\n      if (isConfigValid) {\n        this.hot.batchExecution(function () {\n          arrayEach(columns, function (visualColumn) {\n            _classPrivateFieldGet(_this4, _hiddenColumnsMap).setValueAtIndex(_this4.hot.toPhysicalColumn(visualColumn), true);\n          });\n        }, true);\n      }\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, isConfigValid, isConfigValid && destinationHideConfig.length > currentHideConfig.length);\n    }\n\n    /**\n     * Hides a single column.\n     *\n     * @param {...number} column Visual column index.\n     */\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len3 = arguments.length, column = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        column[_key3] = arguments[_key3];\n      }\n      this.hideColumns(column);\n    }\n\n    /**\n     * Returns an array of visual indexes of hidden columns.\n     *\n     * @returns {number[]}\n     */\n  }, {\n    key: \"getHiddenColumns\",\n    value: function getHiddenColumns() {\n      var _this5 = this;\n      return arrayMap(_classPrivateFieldGet(this, _hiddenColumnsMap).getHiddenIndexes(), function (physicalColumnIndex) {\n        return _this5.hot.toVisualColumn(physicalColumnIndex);\n      });\n    }\n\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {number} column Visual column index.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      return _classPrivateFieldGet(this, _hiddenColumnsMap).getValueAtIndex(this.hot.toPhysicalColumn(column)) || false;\n    }\n\n    /**\n     * Get if trim config is valid. Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} hiddenColumns List of hidden column indexes.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isValidConfig\",\n    value: function isValidConfig(hiddenColumns) {\n      var nrOfColumns = this.hot.countCols();\n      if (Array.isArray(hiddenColumns) && hiddenColumns.length > 0) {\n        return hiddenColumns.every(function (visualColumn) {\n          return Number.isInteger(visualColumn) && visualColumn >= 0 && visualColumn < nrOfColumns;\n        });\n      }\n      return false;\n    }\n\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n        }\n      });\n    }\n\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {number|undefined} width Column width.\n     * @param {number} column Visual column index.\n     * @returns {number}\n     */\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, column) {\n      // Hook is triggered internally only for the visible columns. Conditional will be handled for the API\n      // calls of the `getColWidth` function on not visible indexes.\n      if (this.isHidden(column)) {\n        return 0;\n      }\n      if (_classPrivateFieldGet(this, _settings).indicators && (this.isHidden(column + 1) || this.isHidden(column - 1))) {\n        // Add additional space for hidden column indicator.\n        if (typeof width === 'number' && this.hot.hasColHeaders()) {\n          return width + 15;\n        }\n      }\n    }\n\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} cellProperties Object containing the cell properties.\n     */\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, column, cellProperties) {\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled === false && this.isHidden(column)) {\n        // Cell property handled by the `Autofill` and the `CopyPaste` plugins.\n        cellProperties.skipColumnOnPaste = true;\n      }\n      if (this.isHidden(column - 1)) {\n        cellProperties.className = cellProperties.className || '';\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n        if (classArr.length > 0) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges An array of objects defining copyable cells.\n     * @returns {Array}\n     */\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n      // Ranges shouldn't be modified when `copyPasteEnabled` option is set to `true` (by default).\n      if (_classPrivateFieldGet(this, _settings).copyPasteEnabled) {\n        return ranges;\n      }\n      var newRanges = [];\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (visualColumn) {\n          if (_this6.isHidden(visualColumn)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn - 1);\n            }\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = visualColumn;\n            }\n            if (visualColumn === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, visualColumn);\n            }\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @param {HTMLElement} TH Header's TH element.\n     */\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (!_classPrivateFieldGet(this, _settings).indicators || column < 0) {\n        return;\n      }\n      var classList = [];\n      if (column >= 1 && this.isHidden(column - 1)) {\n        classList.push('afterHiddenColumn');\n      }\n      if (column < this.hot.countCols() - 1 && this.isHidden(column + 1)) {\n        classList.push('beforeHiddenColumn');\n      }\n      addClass(TH, classList);\n    }\n\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {object} options An array of objects containing information about the pre-defined Context Menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n\n    /**\n     * On map initialized hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMapInit\",\n    value: function onMapInit() {\n      if (Array.isArray(_classPrivateFieldGet(this, _settings).columns)) {\n        this.hideColumns(_classPrivateFieldGet(this, _settings).columns);\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _classPrivateFieldSet(this, _settings, null);\n      _classPrivateFieldSet(this, _hiddenColumnsMap, null);\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {object}\n     */\n  }]);\n  return HiddenColumns;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}