{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { Selection } from \"./../../3rdparty/walkontable/src/index.mjs\";\nvar VisualSelection = /*#__PURE__*/function (_Selection) {\n  _inherits(VisualSelection, _Selection);\n  var _super = _createSuper(VisualSelection);\n  /**\n   * Range of selection visually. Visual representation may have representation in a rendered selection.\n   *\n   * @type {null|CellRange}\n   */\n\n  function VisualSelection(settings, visualCellRange) {\n    var _this;\n    _classCallCheck(this, VisualSelection);\n    _this = _super.call(this, settings, null);\n    _defineProperty(_assertThisInitialized(_this), \"visualCellRange\", null);\n    _this.visualCellRange = visualCellRange || null;\n    _this.commit();\n    return _this;\n  }\n  /**\n   * Adds a cell coords to the selection.\n   *\n   * @param {CellCoords} coords Visual coordinates of a cell.\n   * @returns {VisualSelection}\n   */\n  _createClass(VisualSelection, [{\n    key: \"add\",\n    value: function add(coords) {\n      if (this.visualCellRange === null) {\n        this.visualCellRange = this.settings.createCellRange(coords);\n      } else {\n        this.visualCellRange.expand(coords);\n      }\n      return this;\n    }\n\n    /**\n     * Clears visual and renderable selection.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.visualCellRange = null;\n      return _get(_getPrototypeOf(VisualSelection.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n     * Trims the passed cell range object by removing all coordinates that points to the hidden rows\n     * or columns. The result is a new cell range object that points only to the visible indexes or `null`.\n     *\n     * @private\n     * @param {CellRange} cellRange Cells range object to be trimmed.\n     * @returns {CellRange} Visual non-hidden cells range coordinates.\n     */\n  }, {\n    key: \"trimToVisibleCellsRangeOnly\",\n    value: function trimToVisibleCellsRangeOnly(_ref) {\n      var from = _ref.from,\n        to = _ref.to;\n      var visibleFromCoords = this.getNearestNotHiddenCoords(from, 1);\n      var visibleToCoords = this.getNearestNotHiddenCoords(to, -1);\n      if (visibleFromCoords === null || visibleToCoords === null) {\n        return null;\n      }\n      if (visibleFromCoords.row > visibleToCoords.row || visibleFromCoords.col > visibleToCoords.col) {\n        var isHeaderTypeSelection = this.settings.type === 'header' || this.settings.type === 'active-header';\n        if (!isHeaderTypeSelection) {\n          return null;\n        }\n        visibleFromCoords = from;\n        visibleToCoords = to;\n      }\n      return this.settings.createCellRange(visibleFromCoords, visibleFromCoords, visibleToCoords);\n    }\n\n    /**\n     * Gets nearest coordinates that points to the visible row and column indexes. If there are no visible\n     * rows and/or columns the `null` value is returned.\n     *\n     * @private\n     * @param {CellCoords} coords The coords object as starting point for finding the nearest visible coordinates.\n     * @param {1|-1} rowSearchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                                  rows and from left to right for columns. For -1, it is the other way around.\n     * @param {1|-1} columnSearchDirection The same as above but for rows.\n     * @returns {CellCoords|null} Visual cell coordinates.\n     */\n  }, {\n    key: \"getNearestNotHiddenCoords\",\n    value: function getNearestNotHiddenCoords(coords, rowSearchDirection) {\n      var columnSearchDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowSearchDirection;\n      var nextVisibleRow = this.getNearestNotHiddenIndex(this.settings.rowIndexMapper(), coords.row, rowSearchDirection);\n\n      // There are no more visual rows in the range.\n      if (nextVisibleRow === null) {\n        return null;\n      }\n      var nextVisibleColumn = this.getNearestNotHiddenIndex(this.settings.columnIndexMapper(), coords.col, columnSearchDirection);\n\n      // There are no more visual columns in the range.\n      if (nextVisibleColumn === null) {\n        return null;\n      }\n      return this.settings.createCellCoords(nextVisibleRow, nextVisibleColumn);\n    }\n\n    /**\n     * Gets nearest visual index. If there are no visible rows or columns the `null` value is returned.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} visualIndex The index as starting point for finding the nearest visible index.\n     * @param {1|-1} searchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                               rows and from left to right for columns. For -1, it is the other way around.\n     * @returns {number|null} Visual row/column index.\n     */\n  }, {\n    key: \"getNearestNotHiddenIndex\",\n    value: function getNearestNotHiddenIndex(indexMapper, visualIndex, searchDirection) {\n      if (visualIndex < 0) {\n        return visualIndex;\n      }\n      var nearestVisualIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, searchDirection);\n      var isHeaderSelectionType = this.settings.type === 'header' || this.settings.type === 'active-header';\n      if (isHeaderSelectionType && nearestVisualIndex === null) {\n        return -1;\n      }\n      return nearestVisualIndex;\n    }\n\n    /**\n     * Override internally stored visual indexes added by the Selection's `add` function. It should be executed\n     * at the end of process of adding visual selection coordinates.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      // There is no information about visual ranges, thus no selection may be displayed.\n      if (this.visualCellRange === null) {\n        return this;\n      }\n      var trimmedCellRange = this.trimToVisibleCellsRangeOnly(this.visualCellRange);\n\n      // There is no visual start point (and also visual end point) in the range.\n      if (trimmedCellRange === null) {\n        this.cellRange = null;\n      } else {\n        this.cellRange = this.createRenderableCellRange(trimmedCellRange.from, trimmedCellRange.to);\n      }\n      return this;\n    }\n\n    /**\n     * Some selection may be a part of broader cell range. This function sync coordinates of current selection\n     * and the broader cell range when needed (current selection can't be presented visually).\n     *\n     * @param {CellRange} broaderCellRange Visual range. Actual cell range may be contained in the broader cell range.\n     * When there is no way to represent some cell range visually we try to find range containing just the first visible cell.\n     *\n     * Warn: Please keep in mind that this function may change coordinates of the handled broader range.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"syncWith\",\n    value: function syncWith(broaderCellRange) {\n      var rowDirection = broaderCellRange.getVerticalDirection() === 'N-S' ? 1 : -1;\n      var columnDirection = broaderCellRange.getHorizontalDirection() === 'W-E' ? 1 : -1;\n      var singleCellRangeVisual = this.getNearestNotHiddenCoords(broaderCellRange.from.clone().normalize(), rowDirection, columnDirection);\n      if (singleCellRangeVisual !== null && broaderCellRange.overlaps(singleCellRangeVisual)) {\n        // We can't show selection visually now, but we found fist visible range in the broader cell range.\n        if (this.cellRange === null) {\n          var singleCellRangeRenderable = this.settings.visualToRenderableCoords(singleCellRangeVisual);\n          this.cellRange = this.settings.createCellRange(singleCellRangeRenderable);\n        }\n\n        // We set new highlight as it might change (for example, when showing/hiding some cells from the broader selection range)\n        // TODO: It is also handled by the `MergeCells` plugin while adjusting already modified coordinates. Should it?\n        broaderCellRange.setHighlight(singleCellRangeVisual);\n        return this;\n      }\n\n      // Fallback to the start of the range. It resets the previous highlight (for example, when all columns have been hidden).\n      broaderCellRange.setHighlight(broaderCellRange.from);\n      return this;\n    }\n\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates (renderable indexes).\n     * The method overwrites the original method to support header selection for hidden cells.\n     * To make the header selection working, the CellCoords and CellRange have to support not\n     * complete coordinates (`null` values for example, `row: null`, `col: 2`).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var _this$cellRange = this.cellRange,\n        from = _this$cellRange.from,\n        to = _this$cellRange.to;\n      var isRowUndefined = from.row === null || to.row === null;\n      var isColumnUndefined = from.col === null || to.col === null;\n      var topLeftCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.min(from.row, to.row), isColumnUndefined ? null : Math.min(from.col, to.col));\n      var bottomRightCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.max(from.row, to.row), isColumnUndefined ? null : Math.max(from.col, to.col));\n      return [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n    }\n\n    /**\n     * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection\n     * coordinates (visual indexes).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getVisualCorners\",\n    value: function getVisualCorners() {\n      var topStart = this.settings.renderableToVisualCoords(this.cellRange.getTopStartCorner());\n      var bottomEnd = this.settings.renderableToVisualCoords(this.cellRange.getBottomEndCorner());\n      return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n    }\n\n    /**\n     * Creates a new CellRange object based on visual coordinates which before object creation are\n     * translated to renderable indexes.\n     *\n     * @param {CellCoords} visualFromCoords The CellCoords object which contains coordinates that\n     *                                      points to the beginning of the selection.\n     * @param {CellCoords} visualToCoords The CellCoords object which contains coordinates that\n     *                                    points to the end of the selection.\n     * @returns {CellRange}\n     */\n  }, {\n    key: \"createRenderableCellRange\",\n    value: function createRenderableCellRange(visualFromCoords, visualToCoords) {\n      var renderableFromCoords = this.settings.visualToRenderableCoords(visualFromCoords);\n      var renderableToCoords = this.settings.visualToRenderableCoords(visualToCoords);\n      return this.settings.createCellRange(renderableFromCoords, renderableFromCoords, renderableToCoords);\n    }\n  }]);\n  return VisualSelection;\n}(Selection);\nexport default VisualSelection;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","Selection","VisualSelection","_Selection","_super","settings","visualCellRange","_this","commit","add","coords","createCellRange","expand","clear","trimToVisibleCellsRangeOnly","_ref","from","to","visibleFromCoords","getNearestNotHiddenCoords","visibleToCoords","row","col","isHeaderTypeSelection","type","rowSearchDirection","columnSearchDirection","nextVisibleRow","getNearestNotHiddenIndex","rowIndexMapper","nextVisibleColumn","columnIndexMapper","createCellCoords","indexMapper","visualIndex","searchDirection","nearestVisualIndex","isHeaderSelectionType","trimmedCellRange","cellRange","createRenderableCellRange","syncWith","broaderCellRange","rowDirection","getVerticalDirection","columnDirection","getHorizontalDirection","singleCellRangeVisual","clone","normalize","overlaps","singleCellRangeRenderable","visualToRenderableCoords","setHighlight","getCorners","_this$cellRange","isRowUndefined","isColumnUndefined","topLeftCorner","Math","min","bottomRightCorner","max","getVisualCorners","topStart","renderableToVisualCoords","getTopStartCorner","bottomEnd","getBottomEndCorner","visualFromCoords","visualToCoords","renderableFromCoords","renderableToCoords"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/selection/highlight/visualSelection.mjs"],"sourcesContent":["import \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { Selection } from \"./../../3rdparty/walkontable/src/index.mjs\";\nvar VisualSelection = /*#__PURE__*/function (_Selection) {\n  _inherits(VisualSelection, _Selection);\n  var _super = _createSuper(VisualSelection);\n  /**\n   * Range of selection visually. Visual representation may have representation in a rendered selection.\n   *\n   * @type {null|CellRange}\n   */\n\n  function VisualSelection(settings, visualCellRange) {\n    var _this;\n    _classCallCheck(this, VisualSelection);\n    _this = _super.call(this, settings, null);\n    _defineProperty(_assertThisInitialized(_this), \"visualCellRange\", null);\n    _this.visualCellRange = visualCellRange || null;\n    _this.commit();\n    return _this;\n  }\n  /**\n   * Adds a cell coords to the selection.\n   *\n   * @param {CellCoords} coords Visual coordinates of a cell.\n   * @returns {VisualSelection}\n   */\n  _createClass(VisualSelection, [{\n    key: \"add\",\n    value: function add(coords) {\n      if (this.visualCellRange === null) {\n        this.visualCellRange = this.settings.createCellRange(coords);\n      } else {\n        this.visualCellRange.expand(coords);\n      }\n      return this;\n    }\n\n    /**\n     * Clears visual and renderable selection.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.visualCellRange = null;\n      return _get(_getPrototypeOf(VisualSelection.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n     * Trims the passed cell range object by removing all coordinates that points to the hidden rows\n     * or columns. The result is a new cell range object that points only to the visible indexes or `null`.\n     *\n     * @private\n     * @param {CellRange} cellRange Cells range object to be trimmed.\n     * @returns {CellRange} Visual non-hidden cells range coordinates.\n     */\n  }, {\n    key: \"trimToVisibleCellsRangeOnly\",\n    value: function trimToVisibleCellsRangeOnly(_ref) {\n      var from = _ref.from,\n        to = _ref.to;\n      var visibleFromCoords = this.getNearestNotHiddenCoords(from, 1);\n      var visibleToCoords = this.getNearestNotHiddenCoords(to, -1);\n      if (visibleFromCoords === null || visibleToCoords === null) {\n        return null;\n      }\n      if (visibleFromCoords.row > visibleToCoords.row || visibleFromCoords.col > visibleToCoords.col) {\n        var isHeaderTypeSelection = this.settings.type === 'header' || this.settings.type === 'active-header';\n        if (!isHeaderTypeSelection) {\n          return null;\n        }\n        visibleFromCoords = from;\n        visibleToCoords = to;\n      }\n      return this.settings.createCellRange(visibleFromCoords, visibleFromCoords, visibleToCoords);\n    }\n\n    /**\n     * Gets nearest coordinates that points to the visible row and column indexes. If there are no visible\n     * rows and/or columns the `null` value is returned.\n     *\n     * @private\n     * @param {CellCoords} coords The coords object as starting point for finding the nearest visible coordinates.\n     * @param {1|-1} rowSearchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                                  rows and from left to right for columns. For -1, it is the other way around.\n     * @param {1|-1} columnSearchDirection The same as above but for rows.\n     * @returns {CellCoords|null} Visual cell coordinates.\n     */\n  }, {\n    key: \"getNearestNotHiddenCoords\",\n    value: function getNearestNotHiddenCoords(coords, rowSearchDirection) {\n      var columnSearchDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowSearchDirection;\n      var nextVisibleRow = this.getNearestNotHiddenIndex(this.settings.rowIndexMapper(), coords.row, rowSearchDirection);\n\n      // There are no more visual rows in the range.\n      if (nextVisibleRow === null) {\n        return null;\n      }\n      var nextVisibleColumn = this.getNearestNotHiddenIndex(this.settings.columnIndexMapper(), coords.col, columnSearchDirection);\n\n      // There are no more visual columns in the range.\n      if (nextVisibleColumn === null) {\n        return null;\n      }\n      return this.settings.createCellCoords(nextVisibleRow, nextVisibleColumn);\n    }\n\n    /**\n     * Gets nearest visual index. If there are no visible rows or columns the `null` value is returned.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} visualIndex The index as starting point for finding the nearest visible index.\n     * @param {1|-1} searchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                               rows and from left to right for columns. For -1, it is the other way around.\n     * @returns {number|null} Visual row/column index.\n     */\n  }, {\n    key: \"getNearestNotHiddenIndex\",\n    value: function getNearestNotHiddenIndex(indexMapper, visualIndex, searchDirection) {\n      if (visualIndex < 0) {\n        return visualIndex;\n      }\n      var nearestVisualIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, searchDirection);\n      var isHeaderSelectionType = this.settings.type === 'header' || this.settings.type === 'active-header';\n      if (isHeaderSelectionType && nearestVisualIndex === null) {\n        return -1;\n      }\n      return nearestVisualIndex;\n    }\n\n    /**\n     * Override internally stored visual indexes added by the Selection's `add` function. It should be executed\n     * at the end of process of adding visual selection coordinates.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      // There is no information about visual ranges, thus no selection may be displayed.\n      if (this.visualCellRange === null) {\n        return this;\n      }\n      var trimmedCellRange = this.trimToVisibleCellsRangeOnly(this.visualCellRange);\n\n      // There is no visual start point (and also visual end point) in the range.\n      if (trimmedCellRange === null) {\n        this.cellRange = null;\n      } else {\n        this.cellRange = this.createRenderableCellRange(trimmedCellRange.from, trimmedCellRange.to);\n      }\n      return this;\n    }\n\n    /**\n     * Some selection may be a part of broader cell range. This function sync coordinates of current selection\n     * and the broader cell range when needed (current selection can't be presented visually).\n     *\n     * @param {CellRange} broaderCellRange Visual range. Actual cell range may be contained in the broader cell range.\n     * When there is no way to represent some cell range visually we try to find range containing just the first visible cell.\n     *\n     * Warn: Please keep in mind that this function may change coordinates of the handled broader range.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"syncWith\",\n    value: function syncWith(broaderCellRange) {\n      var rowDirection = broaderCellRange.getVerticalDirection() === 'N-S' ? 1 : -1;\n      var columnDirection = broaderCellRange.getHorizontalDirection() === 'W-E' ? 1 : -1;\n      var singleCellRangeVisual = this.getNearestNotHiddenCoords(broaderCellRange.from.clone().normalize(), rowDirection, columnDirection);\n      if (singleCellRangeVisual !== null && broaderCellRange.overlaps(singleCellRangeVisual)) {\n        // We can't show selection visually now, but we found fist visible range in the broader cell range.\n        if (this.cellRange === null) {\n          var singleCellRangeRenderable = this.settings.visualToRenderableCoords(singleCellRangeVisual);\n          this.cellRange = this.settings.createCellRange(singleCellRangeRenderable);\n        }\n\n        // We set new highlight as it might change (for example, when showing/hiding some cells from the broader selection range)\n        // TODO: It is also handled by the `MergeCells` plugin while adjusting already modified coordinates. Should it?\n        broaderCellRange.setHighlight(singleCellRangeVisual);\n        return this;\n      }\n\n      // Fallback to the start of the range. It resets the previous highlight (for example, when all columns have been hidden).\n      broaderCellRange.setHighlight(broaderCellRange.from);\n      return this;\n    }\n\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates (renderable indexes).\n     * The method overwrites the original method to support header selection for hidden cells.\n     * To make the header selection working, the CellCoords and CellRange have to support not\n     * complete coordinates (`null` values for example, `row: null`, `col: 2`).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var _this$cellRange = this.cellRange,\n        from = _this$cellRange.from,\n        to = _this$cellRange.to;\n      var isRowUndefined = from.row === null || to.row === null;\n      var isColumnUndefined = from.col === null || to.col === null;\n      var topLeftCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.min(from.row, to.row), isColumnUndefined ? null : Math.min(from.col, to.col));\n      var bottomRightCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.max(from.row, to.row), isColumnUndefined ? null : Math.max(from.col, to.col));\n      return [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n    }\n\n    /**\n     * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection\n     * coordinates (visual indexes).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getVisualCorners\",\n    value: function getVisualCorners() {\n      var topStart = this.settings.renderableToVisualCoords(this.cellRange.getTopStartCorner());\n      var bottomEnd = this.settings.renderableToVisualCoords(this.cellRange.getBottomEndCorner());\n      return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n    }\n\n    /**\n     * Creates a new CellRange object based on visual coordinates which before object creation are\n     * translated to renderable indexes.\n     *\n     * @param {CellCoords} visualFromCoords The CellCoords object which contains coordinates that\n     *                                      points to the beginning of the selection.\n     * @param {CellCoords} visualToCoords The CellCoords object which contains coordinates that\n     *                                    points to the end of the selection.\n     * @returns {CellRange}\n     */\n  }, {\n    key: \"createRenderableCellRange\",\n    value: function createRenderableCellRange(visualFromCoords, visualToCoords) {\n      var renderableFromCoords = this.settings.visualToRenderableCoords(visualFromCoords);\n      var renderableToCoords = this.settings.visualToRenderableCoords(visualToCoords);\n      return this.settings.createCellRange(renderableFromCoords, renderableFromCoords, renderableToCoords);\n    }\n  }]);\n  return VisualSelection;\n}(Selection);\nexport default VisualSelection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}