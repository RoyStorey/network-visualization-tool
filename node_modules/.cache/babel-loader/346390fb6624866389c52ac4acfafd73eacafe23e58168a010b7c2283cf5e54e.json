{"ast":null,"code":"import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'row_above';\n\n/**\n * @returns {object}\n */\nexport default function rowAboveItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ROW_ABOVE);\n    },\n    callback: function callback() {\n      var latestSelection = this.getSelectedRangeLast().getTopLeftCorner();\n      this.alter('insert_row_above', latestSelection.row, 1, 'ContextMenu.rowAbove');\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n      if (!selected) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        var totalRows = this.countRows();\n\n        // Enable \"Insert row above\" only when there is at least one row.\n        return totalRows === 0;\n      }\n      return this.selection.isSelectedByColumnHeader() || this.countRows() >= this.getSettings().maxRows;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertRow;\n    }\n  };\n}","map":{"version":3,"names":["getValidSelection","C","KEY","rowAboveItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_ROW_ABOVE","callback","latestSelection","getSelectedRangeLast","getTopLeftCorner","alter","row","disabled","selected","selection","isSelectedByCorner","totalRows","countRows","isSelectedByColumnHeader","getSettings","maxRows","hidden","allowInsertRow"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/contextMenu/predefinedItems/rowAbove.mjs"],"sourcesContent":["import { getValidSelection } from \"../utils.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\nexport var KEY = 'row_above';\n\n/**\n * @returns {object}\n */\nexport default function rowAboveItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ROW_ABOVE);\n    },\n    callback: function callback() {\n      var latestSelection = this.getSelectedRangeLast().getTopLeftCorner();\n      this.alter('insert_row_above', latestSelection.row, 1, 'ContextMenu.rowAbove');\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n      if (!selected) {\n        return true;\n      }\n      if (this.selection.isSelectedByCorner()) {\n        var totalRows = this.countRows();\n\n        // Enable \"Insert row above\" only when there is at least one row.\n        return totalRows === 0;\n      }\n      return this.selection.isSelectedByColumnHeader() || this.countRows() >= this.getSettings().maxRows;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowInsertRow;\n    }\n  };\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAChD,OAAO,IAAIC,GAAG,GAAG,WAAW;;AAE5B;AACA;AACA;AACA,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,OAAO;IACLC,GAAG,EAAEF,GAAG;IACRG,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACC,mBAAmB,CAACL,CAAC,CAACM,2BAA2B,CAAC;IAChE,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;MAC5B,IAAIC,eAAe,GAAG,IAAI,CAACC,oBAAoB,EAAE,CAACC,gBAAgB,EAAE;MACpE,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAEH,eAAe,CAACI,GAAG,EAAE,CAAC,EAAE,sBAAsB,CAAC;IAChF,CAAC;IACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;MAC5B,IAAIC,QAAQ,GAAGf,iBAAiB,CAAC,IAAI,CAAC;MACtC,IAAI,CAACe,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MACA,IAAI,IAAI,CAACC,SAAS,CAACC,kBAAkB,EAAE,EAAE;QACvC,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAS,EAAE;;QAEhC;QACA,OAAOD,SAAS,KAAK,CAAC;MACxB;MACA,OAAO,IAAI,CAACF,SAAS,CAACI,wBAAwB,EAAE,IAAI,IAAI,CAACD,SAAS,EAAE,IAAI,IAAI,CAACE,WAAW,EAAE,CAACC,OAAO;IACpG,CAAC;IACDC,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;MACxB,OAAO,CAAC,IAAI,CAACF,WAAW,EAAE,CAACG,cAAc;IAC3C;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}