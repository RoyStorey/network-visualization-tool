{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR)).\n *\n * @type {string}\n */\nexport var TRAVERSAL_DF_PRE = 'DF-pre-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nexport function depthFirstPreOrder(callback, context) {\n  var continueTraverse = callback.call(context, this);\n  for (var i = 0; i < this.childs.length; i++) {\n    if (continueTraverse === false) {\n      return false;\n    }\n    continueTraverse = depthFirstPreOrder.call(this.childs[i], callback, context);\n  }\n  return continueTraverse;\n}\n\n/**\n * Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR)).\n *\n * @type {string}\n */\nexport var TRAVERSAL_DF_POST = 'DF-post-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nfunction depthFirstPostOrder(callback, context) {\n  for (var i = 0; i < this.childs.length; i++) {\n    var continueTraverse = depthFirstPostOrder.call(this.childs[i], callback, context);\n    if (continueTraverse === false) {\n      return false;\n    }\n  }\n  return callback.call(context, this);\n}\n\n/**\n * Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n *\n * @type {string}\n */\nexport var TRAVERSAL_BF = 'BF';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n */\nfunction breadthFirst(callback, context) {\n  var queue = [this];\n\n  /**\n   * Internal processor.\n   */\n  function process() {\n    if (queue.length === 0) {\n      return;\n    }\n    var node = queue.shift();\n    queue.push.apply(queue, _toConsumableArray(node.childs));\n    if (callback.call(context, node) !== false) {\n      process();\n    }\n  }\n  process();\n}\n\n/**\n * Default strategy for tree traversal.\n *\n * @type {string}\n */\nvar DEFAULT_TRAVERSAL_STRATEGY = TRAVERSAL_BF;\n/**\n * Collection of all available tree traversal strategies.\n *\n * @type {Map<string, Function>}\n */\nvar TRAVERSAL_STRATEGIES = new Map([[TRAVERSAL_DF_PRE, depthFirstPreOrder], [TRAVERSAL_DF_POST, depthFirstPostOrder], [TRAVERSAL_BF, breadthFirst]]);\n\n/**\n *\n */\nvar TreeNode = /*#__PURE__*/function () {\n  /**\n   * A tree data.\n   *\n   * @type {object}\n   */\n\n  /**\n   * A parent node.\n   *\n   * @type {TreeNode}\n   */\n\n  /**\n   * A tree leaves.\n   *\n   * @type {TreeNode[]}\n   */\n\n  function TreeNode(data) {\n    _classCallCheck(this, TreeNode);\n    _defineProperty(this, \"data\", {});\n    _defineProperty(this, \"parent\", null);\n    _defineProperty(this, \"childs\", []);\n    this.data = data;\n  }\n\n  /**\n   * Adds a node to tree leaves. Added node is linked with the parent node through \"parent\" property.\n   *\n   * @param {TreeNode} node A TreeNode to add.\n   */\n  _createClass(TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      node.parent = this;\n      this.childs.push(node);\n    }\n\n    /* eslint-disable jsdoc/require-description-complete-sentence */\n    /**\n     * @memberof TreeNode#\n     * @function cloneTree\n     *\n     * Clones a tree structure deeply.\n     *\n     * For example, for giving a tree structure:\n     *      .--(B1)--.\n     *   .-(C1)   .-(C2)-.----.\n     *  (D1)     (D2)   (D3) (D4)\n     *\n     * Cloning a tree starting from C2 node creates a mirrored tree structure.\n     *     .-(C2')-.-----.\n     *    (D2')   (D3') (D4')\n     *\n     * The cloned tree can be safely modified without affecting the original structure.\n     * After modification, the clone can be merged with a tree using the \"replaceTreeWith\" method.\n     *\n     * @param {TreeNode} [nodeTree=this] A TreeNode to clone.\n     * @returns {TreeNode}\n     */\n    /* eslint-enable jsdoc/require-description-complete-sentence */\n  }, {\n    key: \"cloneTree\",\n    value: function cloneTree() {\n      var nodeTree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n      var clonedNode = new TreeNode(_objectSpread({}, nodeTree.data));\n      for (var i = 0; i < nodeTree.childs.length; i++) {\n        clonedNode.addChild(this.cloneTree(nodeTree.childs[i]));\n      }\n      return clonedNode;\n    }\n\n    /**\n     * Replaces the current node with a passed tree structure.\n     *\n     * @param {TreeNode} nodeTree A TreeNode to replace with.\n     */\n  }, {\n    key: \"replaceTreeWith\",\n    value: function replaceTreeWith(nodeTree) {\n      this.data = _objectSpread({}, nodeTree.data);\n      this.childs = [];\n      for (var i = 0; i < nodeTree.childs.length; i++) {\n        this.addChild(nodeTree.childs[i]);\n      }\n    }\n\n    /**\n     * Traverses the tree structure through node childs. The walk down traversing supports\n     * a three different strategies.\n     *  - Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR));\n     *  - Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR));\n     *  - Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n     *\n     * @param {Function} callback The callback function which will be called for each node.\n     * @param {string} [traversalStrategy=DEFAULT_TRAVERSAL_STRATEGY] Traversing strategy.\n     */\n  }, {\n    key: \"walkDown\",\n    value: function walkDown(callback) {\n      var traversalStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_TRAVERSAL_STRATEGY;\n      if (!TRAVERSAL_STRATEGIES.has(traversalStrategy)) {\n        throw new Error(\"Traversal strategy \\\"\".concat(traversalStrategy, \"\\\" does not exist\"));\n      }\n      TRAVERSAL_STRATEGIES.get(traversalStrategy).call(this, callback, this);\n    }\n\n    /**\n     * Traverses the tree structure through node parents.\n     *\n     * @param {Function} callback The callback function which will be called for each node.\n     */\n  }, {\n    key: \"walkUp\",\n    value: function walkUp(callback) {\n      var context = this;\n      var process = function process(node) {\n        var continueTraverse = callback.call(context, node);\n        if (continueTraverse !== false && node.parent !== null) {\n          process(node.parent);\n        }\n      };\n      process(this);\n    }\n  }]);\n  return TreeNode;\n}();\nexport { TreeNode as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","value","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","arr2","TRAVERSAL_DF_PRE","depthFirstPreOrder","callback","context","continueTraverse","childs","TRAVERSAL_DF_POST","depthFirstPostOrder","TRAVERSAL_BF","breadthFirst","queue","process","node","shift","DEFAULT_TRAVERSAL_STRATEGY","TRAVERSAL_STRATEGIES","Map","TreeNode","data","addChild","parent","cloneTree","nodeTree","clonedNode","replaceTreeWith","walkDown","traversalStrategy","has","Error","concat","get","walkUp","default"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/utils/dataStructures/tree.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR)).\n *\n * @type {string}\n */\nexport var TRAVERSAL_DF_PRE = 'DF-pre-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nexport function depthFirstPreOrder(callback, context) {\n  var continueTraverse = callback.call(context, this);\n  for (var i = 0; i < this.childs.length; i++) {\n    if (continueTraverse === false) {\n      return false;\n    }\n    continueTraverse = depthFirstPreOrder.call(this.childs[i], callback, context);\n  }\n  return continueTraverse;\n}\n\n/**\n * Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR)).\n *\n * @type {string}\n */\nexport var TRAVERSAL_DF_POST = 'DF-post-order';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n * @returns {boolean}\n */\nfunction depthFirstPostOrder(callback, context) {\n  for (var i = 0; i < this.childs.length; i++) {\n    var continueTraverse = depthFirstPostOrder.call(this.childs[i], callback, context);\n    if (continueTraverse === false) {\n      return false;\n    }\n  }\n  return callback.call(context, this);\n}\n\n/**\n * Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n *\n * @type {string}\n */\nexport var TRAVERSAL_BF = 'BF';\n/**\n * @param {Function} callback A callback which will be called on each visited node.\n * @param {*} context A context to pass through.\n */\nfunction breadthFirst(callback, context) {\n  var queue = [this];\n\n  /**\n   * Internal processor.\n   */\n  function process() {\n    if (queue.length === 0) {\n      return;\n    }\n    var node = queue.shift();\n    queue.push.apply(queue, _toConsumableArray(node.childs));\n    if (callback.call(context, node) !== false) {\n      process();\n    }\n  }\n  process();\n}\n\n/**\n * Default strategy for tree traversal.\n *\n * @type {string}\n */\nvar DEFAULT_TRAVERSAL_STRATEGY = TRAVERSAL_BF;\n/**\n * Collection of all available tree traversal strategies.\n *\n * @type {Map<string, Function>}\n */\nvar TRAVERSAL_STRATEGIES = new Map([[TRAVERSAL_DF_PRE, depthFirstPreOrder], [TRAVERSAL_DF_POST, depthFirstPostOrder], [TRAVERSAL_BF, breadthFirst]]);\n\n/**\n *\n */\nvar TreeNode = /*#__PURE__*/function () {\n  /**\n   * A tree data.\n   *\n   * @type {object}\n   */\n\n  /**\n   * A parent node.\n   *\n   * @type {TreeNode}\n   */\n\n  /**\n   * A tree leaves.\n   *\n   * @type {TreeNode[]}\n   */\n\n  function TreeNode(data) {\n    _classCallCheck(this, TreeNode);\n    _defineProperty(this, \"data\", {});\n    _defineProperty(this, \"parent\", null);\n    _defineProperty(this, \"childs\", []);\n    this.data = data;\n  }\n\n  /**\n   * Adds a node to tree leaves. Added node is linked with the parent node through \"parent\" property.\n   *\n   * @param {TreeNode} node A TreeNode to add.\n   */\n  _createClass(TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      node.parent = this;\n      this.childs.push(node);\n    }\n\n    /* eslint-disable jsdoc/require-description-complete-sentence */\n    /**\n     * @memberof TreeNode#\n     * @function cloneTree\n     *\n     * Clones a tree structure deeply.\n     *\n     * For example, for giving a tree structure:\n     *      .--(B1)--.\n     *   .-(C1)   .-(C2)-.----.\n     *  (D1)     (D2)   (D3) (D4)\n     *\n     * Cloning a tree starting from C2 node creates a mirrored tree structure.\n     *     .-(C2')-.-----.\n     *    (D2')   (D3') (D4')\n     *\n     * The cloned tree can be safely modified without affecting the original structure.\n     * After modification, the clone can be merged with a tree using the \"replaceTreeWith\" method.\n     *\n     * @param {TreeNode} [nodeTree=this] A TreeNode to clone.\n     * @returns {TreeNode}\n     */\n    /* eslint-enable jsdoc/require-description-complete-sentence */\n  }, {\n    key: \"cloneTree\",\n    value: function cloneTree() {\n      var nodeTree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n      var clonedNode = new TreeNode(_objectSpread({}, nodeTree.data));\n      for (var i = 0; i < nodeTree.childs.length; i++) {\n        clonedNode.addChild(this.cloneTree(nodeTree.childs[i]));\n      }\n      return clonedNode;\n    }\n\n    /**\n     * Replaces the current node with a passed tree structure.\n     *\n     * @param {TreeNode} nodeTree A TreeNode to replace with.\n     */\n  }, {\n    key: \"replaceTreeWith\",\n    value: function replaceTreeWith(nodeTree) {\n      this.data = _objectSpread({}, nodeTree.data);\n      this.childs = [];\n      for (var i = 0; i < nodeTree.childs.length; i++) {\n        this.addChild(nodeTree.childs[i]);\n      }\n    }\n\n    /**\n     * Traverses the tree structure through node childs. The walk down traversing supports\n     * a three different strategies.\n     *  - Depth-first pre-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR));\n     *  - Depth-first post-order strategy (https://en.wikipedia.org/wiki/Tree_traversal#Post-order_(NLR));\n     *  - Breadth-first traversal strategy (https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search_/_level_order).\n     *\n     * @param {Function} callback The callback function which will be called for each node.\n     * @param {string} [traversalStrategy=DEFAULT_TRAVERSAL_STRATEGY] Traversing strategy.\n     */\n  }, {\n    key: \"walkDown\",\n    value: function walkDown(callback) {\n      var traversalStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_TRAVERSAL_STRATEGY;\n      if (!TRAVERSAL_STRATEGIES.has(traversalStrategy)) {\n        throw new Error(\"Traversal strategy \\\"\".concat(traversalStrategy, \"\\\" does not exist\"));\n      }\n      TRAVERSAL_STRATEGIES.get(traversalStrategy).call(this, callback, this);\n    }\n\n    /**\n     * Traverses the tree structure through node parents.\n     *\n     * @param {Function} callback The callback function which will be called for each node.\n     */\n  }, {\n    key: \"walkUp\",\n    value: function walkUp(callback) {\n      var context = this;\n      var process = function process(node) {\n        var continueTraverse = callback.call(context, node);\n        if (continueTraverse !== false && node.parent !== null) {\n          process(node.parent);\n        }\n      };\n      process(this);\n    }\n  }]);\n  return TreeNode;\n}();\nexport { TreeNode as default };"],"mappings":"AAAA,SAASA,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAC/U,SAASK,OAAOA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACF,MAAM,CAAC;EAAE,IAAIG,MAAM,CAACC,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAqB,CAACJ,MAAM,CAAC;IAAEC,cAAc,KAAKI,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOJ,MAAM,CAACK,wBAAwB,CAACR,MAAM,EAAEO,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEP,IAAI,CAACQ,IAAI,CAACC,KAAK,CAACT,IAAI,EAAEG,OAAO,CAAC;EAAE;EAAE,OAAOH,IAAI;AAAE;AACpV,SAASU,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAG,IAAI,IAAIF,SAAS,CAACD,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGf,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAACP,MAAM,EAAEM,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGhB,MAAM,CAACkB,yBAAyB,GAAGlB,MAAM,CAACmB,gBAAgB,CAACT,MAAM,EAAEV,MAAM,CAACkB,yBAAyB,CAACJ,MAAM,CAAC,CAAC,GAAGlB,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEhB,MAAM,CAACoB,cAAc,CAACV,MAAM,EAAEM,GAAG,EAAEhB,MAAM,CAACK,wBAAwB,CAACS,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAON,MAAM;AAAE;AACzf,SAASW,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AACxJ,SAASC,iBAAiBA,CAACf,MAAM,EAAEgB,KAAK,EAAE;EAAE,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGe,KAAK,CAACb,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIgB,UAAU,GAAGD,KAAK,CAACf,CAAC,CAAC;IAAEgB,UAAU,CAACrB,UAAU,GAAGqB,UAAU,CAACrB,UAAU,IAAI,KAAK;IAAEqB,UAAU,CAACC,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAID,UAAU,EAAEA,UAAU,CAACE,QAAQ,GAAG,IAAI;IAAE7B,MAAM,CAACoB,cAAc,CAACV,MAAM,EAAEoB,cAAc,CAACH,UAAU,CAACX,GAAG,CAAC,EAAEW,UAAU,CAAC;EAAE;AAAE;AAC5U,SAASI,YAAYA,CAACR,WAAW,EAAES,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEP,iBAAiB,CAACF,WAAW,CAAC5B,SAAS,EAAEqC,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAER,iBAAiB,CAACF,WAAW,EAAEU,WAAW,CAAC;EAAEjC,MAAM,CAACoB,cAAc,CAACG,WAAW,EAAE,WAAW,EAAE;IAAEM,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAON,WAAW;AAAE;AAC5R,SAASN,eAAeA,CAAC1B,GAAG,EAAEyB,GAAG,EAAEkB,KAAK,EAAE;EAAElB,GAAG,GAAGc,cAAc,CAACd,GAAG,CAAC;EAAE,IAAIA,GAAG,IAAIzB,GAAG,EAAE;IAAES,MAAM,CAACoB,cAAc,CAAC7B,GAAG,EAAEyB,GAAG,EAAE;MAAEkB,KAAK,EAAEA,KAAK;MAAE5B,UAAU,EAAE,IAAI;MAAEsB,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEtC,GAAG,CAACyB,GAAG,CAAC,GAAGkB,KAAK;EAAE;EAAE,OAAO3C,GAAG;AAAE;AAC3O,SAASuC,cAAcA,CAACK,GAAG,EAAE;EAAE,IAAInB,GAAG,GAAGoB,YAAY,CAACD,GAAG,EAAE,QAAQ,CAAC;EAAE,OAAO7C,OAAO,CAAC0B,GAAG,CAAC,KAAK,QAAQ,GAAGA,GAAG,GAAGqB,MAAM,CAACrB,GAAG,CAAC;AAAE;AAC5H,SAASoB,YAAYA,CAACE,KAAK,EAAEC,IAAI,EAAE;EAAE,IAAIjD,OAAO,CAACgD,KAAK,CAAC,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOA,KAAK;EAAE,IAAIE,IAAI,GAAGF,KAAK,CAAC9C,MAAM,CAACiD,WAAW,CAAC;EAAE,IAAID,IAAI,KAAKE,SAAS,EAAE;IAAE,IAAIC,GAAG,GAAGH,IAAI,CAACI,IAAI,CAACN,KAAK,EAAEC,IAAI,IAAI,SAAS,CAAC;IAAE,IAAIjD,OAAO,CAACqD,GAAG,CAAC,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAAE,MAAM,IAAInB,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAACe,IAAI,KAAK,QAAQ,GAAGF,MAAM,GAAGQ,MAAM,EAAEP,KAAK,CAAC;AAAE;AAqB5X,SAASQ,kBAAkBA,CAACC,GAAG,EAAE;EAAE,OAAOC,kBAAkB,CAACD,GAAG,CAAC,IAAIE,gBAAgB,CAACF,GAAG,CAAC,IAAIG,2BAA2B,CAACH,GAAG,CAAC,IAAII,kBAAkB,EAAE;AAAE;AACxJ,SAASA,kBAAkBA,CAAA,EAAG;EAAE,MAAM,IAAI3B,SAAS,CAAC,sIAAsI,CAAC;AAAE;AAC7L,SAAS0B,2BAA2BA,CAACE,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGvD,MAAM,CAACL,SAAS,CAAC6D,QAAQ,CAACZ,IAAI,CAACQ,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIF,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAAC1D,WAAW,EAAE6D,CAAC,GAAGH,CAAC,CAAC1D,WAAW,CAACgE,IAAI;EAAE,IAAIH,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOI,KAAK,CAACC,IAAI,CAACR,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACM,IAAI,CAACN,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAC/Z,SAASJ,gBAAgBA,CAACa,IAAI,EAAE;EAAE,IAAI,OAAOtE,MAAM,KAAK,WAAW,IAAIsE,IAAI,CAACtE,MAAM,CAACC,QAAQ,CAAC,IAAI,IAAI,IAAIqE,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,OAAOH,KAAK,CAACC,IAAI,CAACE,IAAI,CAAC;AAAE;AAC7J,SAASd,kBAAkBA,CAACD,GAAG,EAAE;EAAE,IAAIY,KAAK,CAACI,OAAO,CAAChB,GAAG,CAAC,EAAE,OAAOO,iBAAiB,CAACP,GAAG,CAAC;AAAE;AAC1F,SAASO,iBAAiBA,CAACP,GAAG,EAAEiB,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGjB,GAAG,CAAClC,MAAM,EAAEmD,GAAG,GAAGjB,GAAG,CAAClC,MAAM;EAAE,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEsD,IAAI,GAAG,IAAIN,KAAK,CAACK,GAAG,CAAC,EAAErD,CAAC,GAAGqD,GAAG,EAAErD,CAAC,EAAE,EAAEsD,IAAI,CAACtD,CAAC,CAAC,GAAGoC,GAAG,CAACpC,CAAC,CAAC;EAAE,OAAOsD,IAAI;AAAE;AAClL;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,gBAAgB,GAAG,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACpD,IAAIC,gBAAgB,GAAGF,QAAQ,CAACxB,IAAI,CAACyB,OAAO,EAAE,IAAI,CAAC;EACnD,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4D,MAAM,CAAC1D,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC3C,IAAI2D,gBAAgB,KAAK,KAAK,EAAE;MAC9B,OAAO,KAAK;IACd;IACAA,gBAAgB,GAAGH,kBAAkB,CAACvB,IAAI,CAAC,IAAI,CAAC2B,MAAM,CAAC5D,CAAC,CAAC,EAAEyD,QAAQ,EAAEC,OAAO,CAAC;EAC/E;EACA,OAAOC,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,iBAAiB,GAAG,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACL,QAAQ,EAAEC,OAAO,EAAE;EAC9C,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4D,MAAM,CAAC1D,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC3C,IAAI2D,gBAAgB,GAAGG,mBAAmB,CAAC7B,IAAI,CAAC,IAAI,CAAC2B,MAAM,CAAC5D,CAAC,CAAC,EAAEyD,QAAQ,EAAEC,OAAO,CAAC;IAClF,IAAIC,gBAAgB,KAAK,KAAK,EAAE;MAC9B,OAAO,KAAK;IACd;EACF;EACA,OAAOF,QAAQ,CAACxB,IAAI,CAACyB,OAAO,EAAE,IAAI,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIK,YAAY,GAAG,IAAI;AAC9B;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACP,QAAQ,EAAEC,OAAO,EAAE;EACvC,IAAIO,KAAK,GAAG,CAAC,IAAI,CAAC;;EAElB;AACF;AACA;EACE,SAASC,OAAOA,CAAA,EAAG;IACjB,IAAID,KAAK,CAAC/D,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACA,IAAIiE,IAAI,GAAGF,KAAK,CAACG,KAAK,EAAE;IACxBH,KAAK,CAACrE,IAAI,CAACC,KAAK,CAACoE,KAAK,EAAE9B,kBAAkB,CAACgC,IAAI,CAACP,MAAM,CAAC,CAAC;IACxD,IAAIH,QAAQ,CAACxB,IAAI,CAACyB,OAAO,EAAES,IAAI,CAAC,KAAK,KAAK,EAAE;MAC1CD,OAAO,EAAE;IACX;EACF;EACAA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIG,0BAA0B,GAAGN,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,IAAIO,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAChB,gBAAgB,EAAEC,kBAAkB,CAAC,EAAE,CAACK,iBAAiB,EAAEC,mBAAmB,CAAC,EAAE,CAACC,YAAY,EAAEC,YAAY,CAAC,CAAC,CAAC;;AAEpJ;AACA;AACA;AACA,IAAIQ,QAAQ,GAAG,aAAa,YAAY;EACtC;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE,SAASA,QAAQA,CAACC,IAAI,EAAE;IACtB/D,eAAe,CAAC,IAAI,EAAE8D,QAAQ,CAAC;IAC/BlE,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACjCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;IACrCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC;IACnC,IAAI,CAACmE,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;AACA;EACErD,YAAY,CAACoD,QAAQ,EAAE,CAAC;IACtBnE,GAAG,EAAE,UAAU;IACfkB,KAAK,EAAE,SAASmD,QAAQA,CAACP,IAAI,EAAE;MAC7BA,IAAI,CAACQ,MAAM,GAAG,IAAI;MAClB,IAAI,CAACf,MAAM,CAAChE,IAAI,CAACuE,IAAI,CAAC;IACxB;;IAEA;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI;EACF,CAAC,EAAE;IACD9D,GAAG,EAAE,WAAW;IAChBkB,KAAK,EAAE,SAASqD,SAASA,CAAA,EAAG;MAC1B,IAAIC,QAAQ,GAAG5E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAK8B,SAAS,GAAG9B,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MACvF,IAAI6E,UAAU,GAAG,IAAIN,QAAQ,CAAC1E,aAAa,CAAC,CAAC,CAAC,EAAE+E,QAAQ,CAACJ,IAAI,CAAC,CAAC;MAC/D,KAAK,IAAIzE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6E,QAAQ,CAACjB,MAAM,CAAC1D,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC/C8E,UAAU,CAACJ,QAAQ,CAAC,IAAI,CAACE,SAAS,CAACC,QAAQ,CAACjB,MAAM,CAAC5D,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,OAAO8E,UAAU;IACnB;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzE,GAAG,EAAE,iBAAiB;IACtBkB,KAAK,EAAE,SAASwD,eAAeA,CAACF,QAAQ,EAAE;MACxC,IAAI,CAACJ,IAAI,GAAG3E,aAAa,CAAC,CAAC,CAAC,EAAE+E,QAAQ,CAACJ,IAAI,CAAC;MAC5C,IAAI,CAACb,MAAM,GAAG,EAAE;MAChB,KAAK,IAAI5D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6E,QAAQ,CAACjB,MAAM,CAAC1D,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC/C,IAAI,CAAC0E,QAAQ,CAACG,QAAQ,CAACjB,MAAM,CAAC5D,CAAC,CAAC,CAAC;MACnC;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDK,GAAG,EAAE,UAAU;IACfkB,KAAK,EAAE,SAASyD,QAAQA,CAACvB,QAAQ,EAAE;MACjC,IAAIwB,iBAAiB,GAAGhF,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAK8B,SAAS,GAAG9B,SAAS,CAAC,CAAC,CAAC,GAAGoE,0BAA0B;MACtH,IAAI,CAACC,oBAAoB,CAACY,GAAG,CAACD,iBAAiB,CAAC,EAAE;QAChD,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAACC,MAAM,CAACH,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;MACzF;MACAX,oBAAoB,CAACe,GAAG,CAACJ,iBAAiB,CAAC,CAAChD,IAAI,CAAC,IAAI,EAAEwB,QAAQ,EAAE,IAAI,CAAC;IACxE;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpD,GAAG,EAAE,QAAQ;IACbkB,KAAK,EAAE,SAAS+D,MAAMA,CAAC7B,QAAQ,EAAE;MAC/B,IAAIC,OAAO,GAAG,IAAI;MAClB,IAAIQ,OAAO,GAAG,SAASA,OAAOA,CAACC,IAAI,EAAE;QACnC,IAAIR,gBAAgB,GAAGF,QAAQ,CAACxB,IAAI,CAACyB,OAAO,EAAES,IAAI,CAAC;QACnD,IAAIR,gBAAgB,KAAK,KAAK,IAAIQ,IAAI,CAACQ,MAAM,KAAK,IAAI,EAAE;UACtDT,OAAO,CAACC,IAAI,CAACQ,MAAM,CAAC;QACtB;MACF,CAAC;MACDT,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,CAAC,CAAC;EACH,OAAOM,QAAQ;AACjB,CAAC,EAAE;AACH,SAASA,QAAQ,IAAIe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}