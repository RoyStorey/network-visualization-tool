{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { addClass, closest, isChildOf, hasClass, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   comments={true}\n *   cell={[\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]}\n * />\n *\n * // Access to the Comments plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n */\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n  var _super = _createSuper(Comments);\n  function Comments(hotInstance) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument, this.hot.isRtl());\n      }\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *   - [`comments`](@/api/options.md#comments)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n\n    /**\n     * Clears the currently selected cell.\n     */\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var editorValue = this.editor.getValue();\n      var comment = '';\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n      if (forceRender) {\n        this.hot.render();\n      }\n      this.hide();\n    }\n\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var _this$range$from = this.range.from,\n        row = _this$range$from.row,\n        col = _this$range$from.col;\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n      this.editor.show();\n      this.refreshEditor(true);\n      return true;\n    }\n\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      return this.show();\n    }\n\n    /**\n     * Hides the comment editor.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n      var _this$hot = this.hot,\n        rowIndexMapper = _this$hot.rowIndexMapper,\n        columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n        visualRow = _this$range$from2.row,\n        visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn);\n      // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n      var targetingPreviousRow = renderableRow === null;\n\n      // Reset the editor position to (0, 0) so the opening direction calculation wouldn't be influenced by its\n      // previous position\n      this.editor.setPosition(0, 0);\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getNearestNotHiddenIndex(visualRow, -1));\n      }\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(visualColumn, -1));\n      }\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n        rootWindow = _this$hot2.rootWindow,\n        wt = _this$hot2.view._wt;\n      var wtTable = wt.wtTable;\n      // TODO: Probably using `hot.getCell` would be the best. However, case for showing comment editor for hidden cell\n      // potentially should be removed with that change (currently a test for it is passing).\n      var TD = wt.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      }, true);\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var _TD$getBoundingClient = TD.getBoundingClientRect(),\n        left = _TD$getBoundingClient.left,\n        top = _TD$getBoundingClient.top,\n        cellWidth = _TD$getBoundingClient.width,\n        cellHeight = _TD$getBoundingClient.height;\n      var _this$editor$getSize = this.editor.getSize(),\n        editorWidth = _this$editor$getSize.width,\n        editorHeight = _this$editor$getSize.height;\n      var _this$hot$rootWindow = this.hot.rootWindow,\n        innerWidth = _this$hot$rootWindow.innerWidth,\n        innerHeight = _this$hot$rootWindow.innerHeight;\n      var documentElement = this.hot.rootDocument.documentElement;\n      var x = left + rootWindow.scrollX + lastColWidth;\n      var y = top + rootWindow.scrollY + lastRowHeight;\n      if (this.hot.isRtl()) {\n        x -= editorWidth + lastColWidth;\n      }\n\n      // flip to the right or left the comments editor position when it goes out of browser viewport\n      if (this.hot.isLtr() && left + cellWidth + editorWidth > innerWidth) {\n        x = left + rootWindow.scrollX - editorWidth - 1;\n      } else if (this.hot.isRtl() && x < -(documentElement.scrollWidth - documentElement.clientWidth)) {\n        x = left + rootWindow.scrollX + lastColWidth + 1;\n      }\n      if (top + editorHeight > innerHeight) {\n        y -= editorHeight - cellHeight + 1;\n      }\n      this.editor.setPosition(x, y);\n      this.editor.setReadOnlyState(this.getCommentMeta(visualRow, visualColumn, META_READONLY));\n    }\n\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n      if (!selected) {\n        return false;\n      }\n      var hasComment = false;\n      var cell = selected.getTopStartCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n      return hasComment;\n    }\n\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n      return cellMeta[META_COMMENT][property];\n    }\n\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view._wt) {\n        return;\n      }\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n      if (this.targetIsCellWithComment(event)) {\n        var range = this.hot._createCellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return Comments;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","addClass","closest","isChildOf","hasClass","outerWidth","outerHeight","deepClone","deepExtend","isObject","EventManager","BasePlugin","CommentEditor","checkSelectionConsistency","markLabelAsSelected","DisplaySwitch","C","PLUGIN_KEY","PLUGIN_PRIORITY","privatePool","WeakMap","META_COMMENT","META_COMMENT_VALUE","META_STYLE","META_READONLY","Comments","_BasePlugin","_super","hotInstance","_this","editor","displaySwitch","eventManager","range","preventEditorAutoSwitch","set","tempEditorDimensions","cellBelowCursor","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","rootDocument","isRtl","getDisplayDelaySetting","addHook","options","addToContextMenu","TD","row","col","prop","cellProperties","onAfterRenderer","hide","addLocalHook","showAtCell","registerListeners","updatePlugin","disablePlugin","updateDelay","_this3","addEventListener","event","onMouseOver","onMouseDown","onMouseUp","getInputElement","onEditorBlur","onEditorMouseDown","onEditorMouseUp","setRange","clearRange","targetIsCellWithComment","closestCell","rootElement","targetIsCommentTextArea","setComment","from","Error","editorValue","getValue","comment","updateCommentMeta","render","setCommentAtCell","column","_createCellCoords","removeComment","forceRender","setCellMeta","removeCommentAtCell","getComment","getCommentMeta","getCommentAtCell","show","_this$range$from","countSourceRows","countSourceCols","meta","getCellMeta","setValue","refreshEditor","_renderableRow","_renderableColumn","force","isVisible","_this$hot","rowIndexMapper","columnIndexMapper","_this$range$from2","visualRow","visualColumn","renderableRow","getRenderableFromVisualIndex","renderableColumn","targetingPreviousRow","setPosition","getNearestNotHiddenIndex","isBeforeRenderedRows","isBeforeRenderedColumns","_this$hot2","rootWindow","wt","view","_wt","wtTable","getCell","commentStyle","setSize","width","height","resetSize","lastColWidth","getStretchedColumnWidth","lastRowHeight","_TD$getBoundingClient","getBoundingClientRect","left","top","cellWidth","cellHeight","_this$editor$getSize","getSize","editorWidth","editorHeight","_this$hot$rootWindow","innerWidth","innerHeight","documentElement","x","scrollX","y","scrollY","isLtr","scrollWidth","clientWidth","setReadOnlyState","checkSelectionCommentsConsistency","selected","getSelectedRangeLast","hasComment","cell","getTopStartCorner","metaObject","oldComment","newComment","cellMeta","eventCell","coordinates","getCoords","priv","isFocused","elementFromPoint","clientX","clientY","_createCellRange","commentedCellClassName","currentWidth","currentHeight","onContextMenuAddComment","coords","cancelHiding","highlight","deselectCell","focus","onContextMenuRemoveComment","_this4","forAll","onContextMenuMakeReadOnly","_this5","currentState","defaultOptions","_this6","isThereAnyCellRendered","getRenderableIndexesLength","items","push","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_EDIT_COMMENT","CONTEXTMENU_ITEMS_ADD_COMMENT","callback","disabled","getSelectedLast","selection","isSelectedByCorner","CONTEXTMENU_ITEMS_REMOVE_COMMENT","_this7","label","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","hasProperty","readOnlyProperty","commentSetting","displayDelay","destroy"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/comments/comments.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport { addClass, closest, isChildOf, hasClass, outerWidth, outerHeight } from \"../../helpers/dom/element.mjs\";\nimport { deepClone, deepExtend, isObject } from \"../../helpers/object.mjs\";\nimport EventManager from \"../../eventManager.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport CommentEditor from \"./commentEditor.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../contextMenu/utils.mjs\";\nimport DisplaySwitch from \"./displaySwitch.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nexport var PLUGIN_KEY = 'comments';\nexport var PLUGIN_PRIORITY = 60;\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin Comments\n * @class Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000,\n *   readOnly: true,\n *   style: {\n *     width: 300,\n *     height: 100\n *   }\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   data: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * const hotRef = useRef(null);\n *\n * ...\n *\n * <HotTable\n *   ref={hotRef}\n *   data={getData()}\n *   comments={true}\n *   cell={[\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]}\n * />\n *\n * // Access to the Comments plugin instance:\n * const hot = hotRef.current.hotInstance;\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n * :::\n */\nexport var Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n  var _super = _createSuper(Comments);\n  function Comments(hotInstance) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {object}\n     */\n    _this.range = {};\n    /**\n     * Prevents showing/hiding editor that reacts on the logic triggered by the \"mouseover\" events.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _this.preventEditorAutoSwitch = false;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument, this.hot.isRtl());\n      }\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *   - [`comments`](@/api/options.md#comments)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {object} range Object with `from` property, each with `row` and `col` properties.\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n\n    /**\n     * Clears the currently selected cell.\n     */\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var editorValue = this.editor.getValue();\n      var comment = '';\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} value Comment contents.\n     */\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT);\n      if (forceRender) {\n        this.hot.render();\n      }\n      this.hide();\n    }\n\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {string|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var _this$range$from = this.range.from,\n        row = _this$range$from.row,\n        col = _this$range$from.col;\n      if (row < 0 || row > this.hot.countSourceRows() - 1 || col < 0 || col > this.hot.countSourceCols() - 1) {\n        return false;\n      }\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n      this.editor.show();\n      this.refreshEditor(true);\n      return true;\n    }\n\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @returns {boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: this.hot._createCellCoords(row, column)\n      });\n      return this.show();\n    }\n\n    /**\n     * Hides the comment editor.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.editor.hide();\n    }\n\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {boolean} [force=false] If `true` then recalculation will be forced.\n     */\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var _renderableRow, _renderableColumn;\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n      var _this$hot = this.hot,\n        rowIndexMapper = _this$hot.rowIndexMapper,\n        columnIndexMapper = _this$hot.columnIndexMapper;\n      var _this$range$from2 = this.range.from,\n        visualRow = _this$range$from2.row,\n        visualColumn = _this$range$from2.col;\n      var renderableRow = rowIndexMapper.getRenderableFromVisualIndex(visualRow);\n      var renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(visualColumn);\n      // Used when the requested row is hidden, and the editor needs to be positioned on the previous row's coords.\n      var targetingPreviousRow = renderableRow === null;\n\n      // Reset the editor position to (0, 0) so the opening direction calculation wouldn't be influenced by its\n      // previous position\n      this.editor.setPosition(0, 0);\n      if (renderableRow === null) {\n        renderableRow = rowIndexMapper.getRenderableFromVisualIndex(rowIndexMapper.getNearestNotHiddenIndex(visualRow, -1));\n      }\n      if (renderableColumn === null) {\n        renderableColumn = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(visualColumn, -1));\n      }\n      var isBeforeRenderedRows = renderableRow === null;\n      var isBeforeRenderedColumns = renderableColumn === null;\n      renderableRow = (_renderableRow = renderableRow) !== null && _renderableRow !== void 0 ? _renderableRow : 0;\n      renderableColumn = (_renderableColumn = renderableColumn) !== null && _renderableColumn !== void 0 ? _renderableColumn : 0;\n      var _this$hot2 = this.hot,\n        rootWindow = _this$hot2.rootWindow,\n        wt = _this$hot2.view._wt;\n      var wtTable = wt.wtTable;\n      // TODO: Probably using `hot.getCell` would be the best. However, case for showing comment editor for hidden cell\n      // potentially should be removed with that change (currently a test for it is passing).\n      var TD = wt.getCell({\n        row: renderableRow,\n        col: renderableColumn\n      }, true);\n      var commentStyle = this.getCommentMeta(visualRow, visualColumn, META_STYLE);\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n      var lastColWidth = isBeforeRenderedColumns ? 0 : wtTable.getStretchedColumnWidth(renderableColumn);\n      var lastRowHeight = targetingPreviousRow && !isBeforeRenderedRows ? outerHeight(TD) : 0;\n      var _TD$getBoundingClient = TD.getBoundingClientRect(),\n        left = _TD$getBoundingClient.left,\n        top = _TD$getBoundingClient.top,\n        cellWidth = _TD$getBoundingClient.width,\n        cellHeight = _TD$getBoundingClient.height;\n      var _this$editor$getSize = this.editor.getSize(),\n        editorWidth = _this$editor$getSize.width,\n        editorHeight = _this$editor$getSize.height;\n      var _this$hot$rootWindow = this.hot.rootWindow,\n        innerWidth = _this$hot$rootWindow.innerWidth,\n        innerHeight = _this$hot$rootWindow.innerHeight;\n      var documentElement = this.hot.rootDocument.documentElement;\n      var x = left + rootWindow.scrollX + lastColWidth;\n      var y = top + rootWindow.scrollY + lastRowHeight;\n      if (this.hot.isRtl()) {\n        x -= editorWidth + lastColWidth;\n      }\n\n      // flip to the right or left the comments editor position when it goes out of browser viewport\n      if (this.hot.isLtr() && left + cellWidth + editorWidth > innerWidth) {\n        x = left + rootWindow.scrollX - editorWidth - 1;\n      } else if (this.hot.isRtl() && x < -(documentElement.scrollWidth - documentElement.clientWidth)) {\n        x = left + rootWindow.scrollX + lastColWidth + 1;\n      }\n      if (top + editorHeight > innerHeight) {\n        y -= editorHeight - cellHeight + 1;\n      }\n      this.editor.setPosition(x, y);\n      this.editor.setReadOnlyState(this.getCommentMeta(visualRow, visualColumn, META_READONLY));\n    }\n\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n      if (!selected) {\n        return false;\n      }\n      var hasComment = false;\n      var cell = selected.getTopStartCorner(); // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n      return hasComment;\n    }\n\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} metaObject Object defining all the comment-related meta information.\n     */\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} property Cell meta property.\n     * @returns {Mixed}\n     */\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n      return cellMeta[META_COMMENT][property];\n    }\n\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (!this.hot.view || !this.hot.view._wt) {\n        return;\n      }\n      if (!this.preventEditorAutoSwitch && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n        if (eventCell) {\n          coordinates = this.hot.getCoords(eventCell);\n        }\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n    }\n\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      if (this.preventEditorAutoSwitch || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor === event.target || !this.editor) {\n        return;\n      }\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n      if (this.targetIsCellWithComment(event)) {\n        var range = this.hot._createCellRange(this.hot.getCoords(event.target));\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.preventEditorAutoSwitch = false;\n    }\n\n    /**\n     * The `afterRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {object} cellProperties The rendered cell's property object.\n     */\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      this.displaySwitch.cancelHiding();\n      this.setRange({\n        from: coords.highlight\n      });\n      this.show();\n      this.hot.deselectCell();\n      this.editor.focus();\n    }\n\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this4 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          _this4.removeCommentAtCell(row, column, false);\n        }\n      });\n      this.hot.render();\n    }\n\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this5 = this;\n      var coords = this.hot.getSelectedRangeLast();\n      this.preventEditorAutoSwitch = true;\n      coords.forAll(function (row, column) {\n        if (row >= 0 && column >= 0) {\n          var currentState = !!_this5.getCommentMeta(row, column, META_READONLY);\n          _this5.updateCommentMeta(row, column, _defineProperty({}, META_READONLY, !currentState));\n        }\n      });\n    }\n\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {object} defaultOptions The menu options.\n     */\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this6 = this;\n      var isThereAnyCellRendered = function isThereAnyCellRendered() {\n        return _this6.hot.rowIndexMapper.getRenderableIndexesLength() > 0 && _this6.hot.columnIndexMapper.getRenderableIndexesLength() > 0;\n      };\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this6.checkSelectionCommentsConsistency()) {\n            return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n          return _this6.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this6.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this7 = this;\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this7.getCellMeta(row, col)[META_COMMENT];\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n          return label;\n        },\n        callback: function callback() {\n          return _this6.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          if (!isThereAnyCellRendered()) {\n            return true;\n          }\n          return !(_this6.hot.getSelectedLast() && !_this6.hot.selection.isSelectedByCorner()) || !_this6.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {number|undefined}\n     */\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings()[PLUGIN_KEY];\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return Comments;\n}(BasePlugin);"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAG,aAAa,UAAUC,WAAW,EAAE;EACxDrD,SAAS,CAACoD,QAAQ,EAAEC,WAAW,CAAC;EAChC,IAAIC,MAAM,GAAG7C,YAAY,CAAC2C,QAAQ,CAAC;EACnC,SAASA,QAAQA,CAACG,WAAW,EAAE;IAC7B,IAAIC,KAAK;IACT/F,eAAe,CAAC,IAAI,EAAE2F,QAAQ,CAAC;IAC/BI,KAAK,GAAGF,MAAM,CAACvE,IAAI,CAAC,IAAI,EAAEwE,WAAW,CAAC;IACtC;AACJ;AACA;AACA;AACA;AACA;IACIC,KAAK,CAACC,MAAM,GAAG,IAAI;IACnB;AACJ;AACA;AACA;AACA;AACA;IACID,KAAK,CAACE,aAAa,GAAG,IAAI;IAC1B;AACJ;AACA;AACA;AACA;AACA;IACIF,KAAK,CAACG,YAAY,GAAG,IAAI;IACzB;AACJ;AACA;AACA;AACA;IACIH,KAAK,CAACI,KAAK,GAAG,CAAC,CAAC;IAChB;AACJ;AACA;AACA;AACA;AACA;IACIJ,KAAK,CAACK,uBAAuB,GAAG,KAAK;IACrCf,WAAW,CAACgB,GAAG,CAAC1C,sBAAsB,CAACoC,KAAK,CAAC,EAAE;MAC7CO,oBAAoB,EAAE,CAAC,CAAC;MACxBC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOR,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;AACA;EACErF,YAAY,CAACiF,QAAQ,EAAE,CAAC;IACtBnG,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,SAAS+G,SAASA,CAAA,EAAG;MAC1B,OAAO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"},"metadata":{},"sourceType":"module","externalDependencies":[]}