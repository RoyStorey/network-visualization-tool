{"ast":null,"code":"var _jsxFileName = \"/home/rstorey/wwwdev/Blucktool/src/components/spreadsheet.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport jspreadsheet from \"jspreadsheet\";\n// import * as CSV from \"csv-string\";\n\nimport \"../node_modules/jspreadsheet-ce/dist/jspreadsheet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csv = `**Some parameter;;;;;;;;;;;;\n;;;;;;;;;;;;;\nvar_1;var_2;var_3;var_4;var_5;var_5;var_6;var_7;var_8;var_9;var_10;var_11;var_12\nm;m;m;mm;text;-;text;text;text;text;text;text;text\n0.18;4.991;4.991;50;0.88;0.25;None;None;0.962;89.99;top;C;C\n1;4.991;5.265;50;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.8;6.495;6.495;20;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.501;6.502;22.7;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.502;6.503;23.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.503;6.503;24.3;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.503;6.504;25;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.93;6.504;6.505;25.8;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.505;6.5;26.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.95;6.5;6.5;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n0.14;6.5;6.5;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n0.14;6.5;6.5;28.5;0.88;0.25;None;None;0.962;89.99;-;C;C\n2.63;6.5;6.549;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.62;6.549;6.598;27.9;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.85;7;6.999;34;0.88;0.25;D;D;0.962;89.99;-;C;C\n`;\nexport default function Sheet() {\n  _s();\n  const jRef = useRef(null);\n  const [formData, setFormData] = useState(\"\");\n  const options = {\n    data: [[]],\n    // data: CSV.parse(csv),\n    minDimensions: [10, 10],\n    // defaultColWidth: 100,\n    tableOverflow: true,\n    tableWidth: \"100%\",\n    tableHeight: \"400px\",\n    loadingSpin: true\n    // editable: false\n  };\n\n  useEffect(() => {\n    if (!jRef.current.jspreadsheet) {\n      jspreadsheet(jRef.current, options);\n    }\n  }, []);\n  const addRow = () => {\n    jRef.current.jexcel.insertRow();\n  };\n  const convertToCSV = () => {\n    var _jRef$current;\n    const rows = (_jRef$current = jRef.current) === null || _jRef$current === void 0 ? void 0 : _jRef$current.jexcel.getData();\n    setFormData(CSV.stringify(rows, \";\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: jRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: addRow,\n      value: \"Add new row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => jRef.current.jexcel.selectAll(),\n      children: \"Select All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _jRef$current2;\n        return console.log((_jRef$current2 = jRef.current) === null || _jRef$current2 === void 0 ? void 0 : _jRef$current2.jexcel.getData());\n      },\n      children: \"Get all data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertToCSV,\n      children: \"Convert to CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Sheet, \"jdfthij7U/UDcGT6miFN7x78urY=\");\n_c = Sheet;\nvar _c;\n$RefreshReg$(_c, \"Sheet\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jspreadsheet","jsxDEV","_jsxDEV","csv","Sheet","_s","jRef","formData","setFormData","options","data","minDimensions","tableOverflow","tableWidth","tableHeight","loadingSpin","current","addRow","jexcel","insertRow","convertToCSV","_jRef$current","rows","getData","CSV","stringify","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","value","selectAll","_jRef$current2","console","log","_c","$RefreshReg$"],"sources":["/home/rstorey/wwwdev/Blucktool/src/components/spreadsheet.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport jspreadsheet from \"jspreadsheet\";\n// import * as CSV from \"csv-string\";\n\nimport \"../node_modules/jspreadsheet-ce/dist/jspreadsheet.css\";\nconst csv = `**Some parameter;;;;;;;;;;;;\n;;;;;;;;;;;;;\nvar_1;var_2;var_3;var_4;var_5;var_5;var_6;var_7;var_8;var_9;var_10;var_11;var_12\nm;m;m;mm;text;-;text;text;text;text;text;text;text\n0.18;4.991;4.991;50;0.88;0.25;None;None;0.962;89.99;top;C;C\n1;4.991;5.265;50;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.8;6.495;6.495;20;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.501;6.502;22.7;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.502;6.503;23.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.503;6.503;24.3;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.503;6.504;25;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.93;6.504;6.505;25.8;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.94;6.505;6.5;26.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.95;6.5;6.5;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n0.14;6.5;6.5;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n0.14;6.5;6.5;28.5;0.88;0.25;None;None;0.962;89.99;-;C;C\n2.63;6.5;6.549;28.5;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.62;6.549;6.598;27.9;0.88;0.25;D;D;0.962;89.99;-;C;C\n2.85;7;6.999;34;0.88;0.25;D;D;0.962;89.99;-;C;C\n`;\nexport default function Sheet() {\n  const jRef = useRef(null);\n\n  const [formData, setFormData] = useState(\"\");\n\n  const options = {\n    data: [[]],\n    // data: CSV.parse(csv),\n    minDimensions: [10, 10],\n    // defaultColWidth: 100,\n    tableOverflow: true,\n    tableWidth: \"100%\",\n    tableHeight: \"400px\",\n    loadingSpin: true,\n    // editable: false\n  };\n\n  useEffect(() => {\n    if (!jRef.current.jspreadsheet) {\n      jspreadsheet(jRef.current, options);\n    }\n  }, []);\n\n  const addRow = () => {\n    jRef.current.jexcel.insertRow();\n  };\n\n  const convertToCSV = () => {\n    const rows = jRef.current?.jexcel.getData();\n\n    setFormData(CSV.stringify(rows, \";\"));\n  };\n\n  return (\n    <div>\n      <div ref={jRef} />\n      <br />\n      <input type=\"button\" onClick={addRow} value=\"Add new row\" />\n\n      <button onClick={() => jRef.current.jexcel.selectAll()}>\n        Select All\n      </button>\n\n      <button onClick={() => console.log(jRef.current?.jexcel.getData())}>\n        Get all data\n      </button>\n\n      <button onClick={convertToCSV}>Convert to CSV</button>\n\n      <pre>{formData}</pre>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}