{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach, deepClone } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { top as menuItemTop, bottom as menuItemBottom, left as menuItemLeft, right as menuItemRight, noBorders as menuItemNoBorders } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder, hasLeftRightTypeOptions, hasStartEndTypeOptions, toInlinePropName, normalizeBorder, denormalizeBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin CustomBorders\n * @class CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [`customBorders` configuration option](@/api/options.md#customBorders) or go to\n * [Custom cell borders demo](@/guides/cell-features/formatting-cells.md#custom-cell-borders) for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    start: {},\n *    end: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     start: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     end: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n  var _super = _createSuper(CustomBorders);\n  function CustomBorders() {\n    var _this;\n    _classCallCheck(this, CustomBorders);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"savedBorders\", []);\n    return _this;\n  }\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` then the {@link CustomBorders#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`customBorders`](@/api/options.md#customborders)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {start: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {start: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `start` properties.\n     */\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n      var borderKeys = ['top', 'bottom', 'start', 'end'];\n      var normBorder = null;\n      if (borderObject) {\n        this.checkSettingsCohesion([borderObject]);\n        borderKeys = Object.keys(borderObject);\n        normBorder = normalizeBorder(borderObject);\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n          rowStart = _selectionSchemaNorma2[0],\n          columnStart = _selectionSchemaNorma2[1],\n          rowEnd = _selectionSchemaNorma2[2],\n          columnEnd = _selectionSchemaNorma2[3];\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, normBorder, toInlinePropName(borderKey));\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n      this.hot.view.render();\n    }\n\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n          rowStart = _selectionSchemaNorma4[0],\n          columnStart = _selectionSchemaNorma4[1],\n          rowEnd = _selectionSchemaNorma4[2],\n          columnEnd = _selectionSchemaNorma4[3];\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(denormalizeBorder(border));\n              }\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n          _this5.clearNullCellRange();\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     */\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n      var visualCellRange = this.hot._createCellRange(this.hot._createCellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n      var border = createEmptyBorders(row, column);\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            border.start = customSelection.settings.start;\n            border.end = customSelection.settings.end;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(border));\n      this.insertBorderIntoSettings(border, place);\n    }\n\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} range {CellRange} The CellRange object.\n     * @param {object} customBorder Object with `start`, `end`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(range, customBorder) {\n      var _this6 = this;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(customBorder, 'top')) {\n              add += 1;\n              border.top = customBorder.top;\n            }\n          }\n\n          // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(customBorder, 'bottom')) {\n              add += 1;\n              border.bottom = customBorder.bottom;\n            }\n          }\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(customBorder, 'start')) {\n              add += 1;\n              border.start = customBorder.start;\n            }\n          }\n\n          // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(customBorder, 'end')) {\n              add += 1;\n              border.end = customBorder.end;\n            }\n          }\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', denormalizeBorder(border));\n            _this6.insertBorderIntoSettings(border);\n          } else {\n            // TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      } else {\n        bordersMeta = normalizeBorder(bordersMeta);\n      }\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n          this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n        this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n      }\n    }\n\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n          end = _ref.end;\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n            case 'start':\n              rangeEach(start.row, end.row, function (rowStart) {\n                _this7.setBorder(rowStart, start.col, place, remove);\n              });\n              break;\n            case 'end':\n              rangeEach(start.row, end.row, function (rowEnd) {\n                _this7.setBorder(rowEnd, end.col, place, remove);\n              });\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n      arrayEach(customBorders, function (customBorder) {\n        var normCustomBorder = normalizeBorder(customBorder);\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder.range, normCustomBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, normCustomBorder);\n        }\n      });\n    }\n\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {number}\n     */\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var top = border.top,\n        bottom = border.bottom,\n        start = border.start,\n        end = border.end;\n      var values = [top, bottom, start, end];\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n        if (value && value.hide) {\n          result += 1;\n        }\n        return result;\n      }, 0);\n    }\n\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n          return false; // breaks forAll\n        }\n      });\n    }\n\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n        _this10.clearNullCellRange();\n      });\n    }\n\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n      var check = false;\n      var hideCount = this.countHide(border);\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n\n      return check;\n    }\n\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n      if (Array.isArray(customBorders)) {\n        var bordersClone = deepClone(customBorders);\n        this.checkSettingsCohesion(bordersClone);\n        if (!bordersClone.length) {\n          this.savedBorders = bordersClone;\n        }\n        this.createCustomBorders(bordersClone);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n\n    /**\n     * Checks the settings cohesion. The properties such like \"left\"/\"right\" are supported only\n     * in the LTR mode and the \"left\"/\"right\" options can not be used together with \"start\"/\"end\" properties.\n     *\n     * @private\n     * @param {object[]} customBorders The user defined custom border objects array.\n     */\n  }, {\n    key: \"checkSettingsCohesion\",\n    value: function checkSettingsCohesion(customBorders) {\n      var hasLeftOrRight = hasLeftRightTypeOptions(customBorders);\n      var hasStartOrEnd = hasStartEndTypeOptions(customBorders);\n      if (hasLeftOrRight && hasStartOrEnd) {\n        throw new Error('The \"left\"/\"right\" and \"start\"/\"end\" options should not be used together. ' + 'Please use only the option \"start\"/\"end\".');\n      }\n      if (this.hot.isRtl() && hasLeftOrRight) {\n        throw new Error('The \"left\"/\"right\" properties are not supported for RTL. Please use option \"start\"/\"end\".');\n      }\n    }\n\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [menuItemTop(this), menuItemRight(this), menuItemBottom(this), menuItemLeft(this), menuItemNoBorders(this)]\n        }\n      });\n    }\n\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","BasePlugin","objectEach","deepClone","rangeEach","arrayEach","arrayReduce","arrayMap","C","top","menuItemTop","bottom","menuItemBottom","left","menuItemLeft","right","menuItemRight","noBorders","menuItemNoBorders","createId","createDefaultCustomBorder","createSingleEmptyBorder","createEmptyBorders","extendDefaultBorder","hasLeftRightTypeOptions","hasStartEndTypeOptions","toInlinePropName","normalizeBorder","denormalizeBorder","detectSelectionType","normalizeSelectionFactory","PLUGIN_KEY","PLUGIN_PRIORITY","CustomBorders","_BasePlugin","_super","_this","_len","args","_key","concat","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","addHook","options","onAfterContextMenuDefaultOptions","onAfterInit","disablePlugin","hideBorders","updatePlugin","changeBorderSettings","setBorders","selectionRanges","borderObject","_this3","borderKeys","normBorder","checkSettingsCohesion","keys","selectionType","selectionSchemaNormalizer","selection","_selectionSchemaNorma","_selectionSchemaNorma2","rowStart","columnStart","rowEnd","columnEnd","_loop","row","_loop2","col","borderKey","prepareBorderFromCustomAdded","view","render","getBorders","_this4","savedBorders","selectedBorders","_selectionSchemaNorma3","_selectionSchemaNorma4","_loop3","_loop4","border","clearBorders","_this5","clearBordersFromSelectionSettings","id","clearNullCellRange","removeCellMeta","insertBorderIntoSettings","place","hasSavedBorders","checkSavedBorders","visualCellRange","_createCellRange","_createCellCoords","hasCustomSelections","checkCustomSelections","highlight","addCustomSelection","column","borderDescriptor","nrOfRows","countRows","nrOfColumns","countCols","customSelections","customSelection","settings","assign","start","end","setCellMeta","prepareBorderFromCustomAddedRange","range","customBorder","_this6","lastRowIndex","Math","min","to","lastColumnIndex","rowIndex","colIndex","add","removeAllBorders","borderId","spliceBorder","setBorder","remove","bordersMeta","getCellMeta","borders","hideCount","countHide","customSelectionsChecker","checkCustomSelectionsFromContextMenu","_customSelectionsChecker","prepareBorder","selected","_this7","_ref","topCol","bottomCol","createCustomBorders","customBorders","_this8","normCustomBorder","values","accumulator","hide","index","indexOf","clear","_this9","cellRange","destroy","splice","_this10","_this11","check","savedBorder","instanceBorders","toggleHiddenClass","commit","changeBorderStyle","bordersClone","hasLeftOrRight","hasStartOrEnd","Error","isRtl","defaultOptions","items","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS","disabled","isSelectedByCorner","submenu"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/customBorders/customBorders.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { hasOwnProperty, objectEach, deepClone } from \"../../helpers/object.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { arrayEach, arrayReduce, arrayMap } from \"../../helpers/array.mjs\";\nimport * as C from \"../../i18n/constants.mjs\";\nimport { top as menuItemTop, bottom as menuItemBottom, left as menuItemLeft, right as menuItemRight, noBorders as menuItemNoBorders } from \"./contextMenuItem/index.mjs\";\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder, hasLeftRightTypeOptions, hasStartEndTypeOptions, toInlinePropName, normalizeBorder, denormalizeBorder } from \"./utils.mjs\";\nimport { detectSelectionType, normalizeSelectionFactory } from \"../../selection/index.mjs\";\nexport var PLUGIN_KEY = 'customBorders';\nexport var PLUGIN_PRIORITY = 90;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @plugin CustomBorders\n * @class CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [`customBorders` configuration option](@/api/options.md#customBorders) or go to\n * [Custom cell borders demo](@/guides/cell-features/formatting-cells.md#custom-cell-borders) for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    start: {},\n *    end: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     start: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     end: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\nexport var CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n  var _super = _createSuper(CustomBorders);\n  function CustomBorders() {\n    var _this;\n    _classCallCheck(this, CustomBorders);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"savedBorders\", []);\n    return _this;\n  }\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value:\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` then the {@link CustomBorders#enablePlugin} method is called.\n     *\n     * @returns {boolean}\n     */\n    function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`customBorders`](@/api/options.md#customborders)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Set custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {start: {width: 2, color: 'blue'}});\n     *\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * //  Selecting a cell range.\n     * hot.selectCell(0, 0, 2, 2);\n     * // Returning selected cells' range with the getSelectedRange method.\n     * customBordersPlugin.setBorders(hot.getSelectedRange(), {start: {hide: false, width: 2, color: 'blue'}});\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @param {object} borderObject Object with `top`, `right`, `bottom` and `start` properties.\n     */\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n      var borderKeys = ['top', 'bottom', 'start', 'end'];\n      var normBorder = null;\n      if (borderObject) {\n        this.checkSettingsCohesion([borderObject]);\n        borderKeys = Object.keys(borderObject);\n        normBorder = normalizeBorder(borderObject);\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n          rowStart = _selectionSchemaNorma2[0],\n          columnStart = _selectionSchemaNorma2[1],\n          rowEnd = _selectionSchemaNorma2[2],\n          columnEnd = _selectionSchemaNorma2[3];\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, normBorder, toInlinePropName(borderKey));\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n      this.hot.view.render();\n    }\n\n    /**\n     * Get custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.getBorders(hot.getSelectedRange());\n     * // Using without param - return all customBorders.\n     * customBordersPlugin.getBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     * @returns {object[]} Returns array of border objects.\n     */\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n          rowStart = _selectionSchemaNorma4[0],\n          columnStart = _selectionSchemaNorma4[1],\n          rowEnd = _selectionSchemaNorma4[2],\n          columnEnd = _selectionSchemaNorma4[3];\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(denormalizeBorder(border));\n              }\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n\n    /**\n     * Clear custom borders.\n     *\n     * @example\n     * ```js\n     * const customBordersPlugin = hot.getPlugin('customBorders');\n     *\n     * // Using an array of arrays (produced by `.getSelected()` method).\n     * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n     * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n     * customBordersPlugin.clearBorders(hot.getSelectedRange());\n     * // Using without param - clear all customBorders.\n     * customBordersPlugin.clearBorders();\n     * ```\n     *\n     * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n     */\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n          _this5.clearNullCellRange();\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     */\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n      var visualCellRange = this.hot._createCellRange(this.hot._createCellCoords(border.row, border.col));\n      var hasCustomSelections = this.checkCustomSelections(border, visualCellRange, place);\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          visualCellRange: visualCellRange\n        });\n      }\n    }\n\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {object} borderDescriptor Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var nrOfRows = this.hot.countRows();\n      var nrOfColumns = this.hot.countCols();\n      if (row >= nrOfRows || column >= nrOfColumns) {\n        return;\n      }\n      var border = createEmptyBorders(row, column);\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border.id = customSelection.settings.id;\n            border.top = customSelection.settings.top;\n            border.bottom = customSelection.settings.bottom;\n            border.start = customSelection.settings.start;\n            border.end = customSelection.settings.end;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(border));\n      this.insertBorderIntoSettings(border, place);\n    }\n\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {object} range {CellRange} The CellRange object.\n     * @param {object} customBorder Object with `start`, `end`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(range, customBorder) {\n      var _this6 = this;\n      var lastRowIndex = Math.min(range.to.row, this.hot.countRows() - 1);\n      var lastColumnIndex = Math.min(range.to.col, this.hot.countCols() - 1);\n      rangeEach(range.from.row, lastRowIndex, function (rowIndex) {\n        rangeEach(range.from.col, lastColumnIndex, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(customBorder, 'top')) {\n              add += 1;\n              border.top = customBorder.top;\n            }\n          }\n\n          // Please keep in mind that `range.to.row` may be beyond the table boundaries. The border won't be rendered.\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(customBorder, 'bottom')) {\n              add += 1;\n              border.bottom = customBorder.bottom;\n            }\n          }\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(customBorder, 'start')) {\n              add += 1;\n              border.start = customBorder.start;\n            }\n          }\n\n          // Please keep in mind that `range.to.col` may be beyond the table boundaries. The border won't be rendered.\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(customBorder, 'end')) {\n              add += 1;\n              border.end = customBorder.end;\n            }\n          }\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', denormalizeBorder(border));\n            _this6.insertBorderIntoSettings(border);\n          } else {\n            // TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     */\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n\n    /**\n     * Set borders for each cell re. To border position.\n     *\n     * @private\n     * @param {number} row Visual row index.\n     * @param {number} column Visual column index.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      } else {\n        bordersMeta = normalizeBorder(bordersMeta);\n      }\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n          this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n        this.hot.setCellMeta(row, column, 'borders', denormalizeBorder(bordersMeta));\n      }\n    }\n\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {CellRange[]} selected An array of CellRange objects.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n          end = _ref.end;\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n            case 'start':\n              rangeEach(start.row, end.row, function (rowStart) {\n                _this7.setBorder(rowStart, start.col, place, remove);\n              });\n              break;\n            case 'end':\n              rangeEach(start.row, end.row, function (rowEnd) {\n                _this7.setBorder(rowEnd, end.col, place, remove);\n              });\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `start`, `end`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n      arrayEach(customBorders, function (customBorder) {\n        var normCustomBorder = normalizeBorder(customBorder);\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder.range, normCustomBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, normCustomBorder);\n        }\n      });\n    }\n\n    /**\n     * Count hide property in border object.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @returns {number}\n     */\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var top = border.top,\n        bottom = border.bottom,\n        start = border.start,\n        end = border.end;\n      var values = [top, bottom, start, end];\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n        if (value && value.hide) {\n          result += 1;\n        }\n        return result;\n      }, 0);\n    }\n\n    /**\n     * Clear borders settings from custom selections.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n\n    /**\n     * Clear cellRange with null value.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n          return false; // breaks forAll\n        }\n      });\n    }\n\n    /**\n     * Hide custom borders.\n     *\n     * @private\n     */\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n        _this10.clearNullCellRange();\n      });\n    }\n\n    /**\n     * Splice border from savedBorders.\n     *\n     * @private\n     * @param {string} borderId Border id name as string.\n     */\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n\n    /**\n     * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n      var check = false;\n      var hideCount = this.countHide(border);\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n\n    /**\n     * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {string} place Coordinate where add/remove border - `top`, `bottom`, `start`, `end` and `noBorders`.\n     * @param {boolean} remove True when remove borders, and false when add borders.\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n\n      return check;\n    }\n\n    /**\n     * Check if an border already exists in the customSelections, and if true reset cellRange.\n     *\n     * @private\n     * @param {object} border Object with `row` and `col`, `start`, `end`, `top` and `bottom`, `id` and\n     *                        `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {CellRange} cellRange The selection range to check.\n     * @param {string} [place] Coordinate where add/remove border - `top`, `bottom`, `start`, `end`.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.visualCellRange = cellRange;\n            customSelection.commit();\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings()[PLUGIN_KEY];\n      if (Array.isArray(customBorders)) {\n        var bordersClone = deepClone(customBorders);\n        this.checkSettingsCohesion(bordersClone);\n        if (!bordersClone.length) {\n          this.savedBorders = bordersClone;\n        }\n        this.createCustomBorders(bordersClone);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n\n    /**\n     * Checks the settings cohesion. The properties such like \"left\"/\"right\" are supported only\n     * in the LTR mode and the \"left\"/\"right\" options can not be used together with \"start\"/\"end\" properties.\n     *\n     * @private\n     * @param {object[]} customBorders The user defined custom border objects array.\n     */\n  }, {\n    key: \"checkSettingsCohesion\",\n    value: function checkSettingsCohesion(customBorders) {\n      var hasLeftOrRight = hasLeftRightTypeOptions(customBorders);\n      var hasStartOrEnd = hasStartEndTypeOptions(customBorders);\n      if (hasLeftOrRight && hasStartOrEnd) {\n        throw new Error('The \"left\"/\"right\" and \"start\"/\"end\" options should not be used together. ' + 'Please use only the option \"start\"/\"end\".');\n      }\n      if (this.hot.isRtl() && hasLeftOrRight) {\n        throw new Error('The \"left\"/\"right\" properties are not supported for RTL. Please use option \"start\"/\"end\".');\n      }\n    }\n\n    /**\n     * Add border options to context menu.\n     *\n     * @private\n     * @param {object} defaultOptions Context menu items.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings()[PLUGIN_KEY]) {\n        return;\n      }\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [menuItemTop(this), menuItemRight(this), menuItemBottom(this), menuItemLeft(this), menuItemNoBorders(this)]\n        }\n      });\n    }\n\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n  }]);\n  return CustomBorders;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}