{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { addClass, outerHeight } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\n/**\n * @class GhostTable\n */\nvar GhostTable = /*#__PURE__*/function () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {boolean}\n     */\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {object}\n     * @default {Object}\n     */\n    this.settings = {\n      useHeaders: true\n    };\n  }\n\n  /**\n   * Add row.\n   *\n   * @param {number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n\n    /**\n     * Add a row consisting of the column headers.\n     *\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.appendColumnHeadersRow();\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n\n    /**\n     * Add column.\n     *\n     * @param {number} column Column index.\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n        // We render all columns.\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.columns, function (column) {\n        // The GhostTable class is responsible for calculating the columns' width based on the\n        // contents rendered in the cells. In some cases, when the column's width calculated by\n        // the browser is a decimal point with a fractional component. For example, 35.32px.\n        // The usage of the `.offsetWidth` (or our helper `outerWidth`) is incorrect.\n        // The `outerWidth` in the mentioned example (35.32px) would return 35 pixels that\n        // would cause the text to not fit in the cell, thus increasing the row height.\n        // That's why the `getBoundingClientRect` method is used. The method returns the number\n        // that is rounded up to make sure that there will be a space for the cell's content.\n        var _column$table$getBoun = column.table.getBoundingClientRect(),\n          width = _column$table$getBoun.width;\n        callback(column.col, Math.ceil(width));\n      });\n    }\n\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {object} settings New Ghost Table Settings.\n     */\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {string} name Setting name.\n     * @param {*} value Setting value.\n     */\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n      this.settings[name] = value;\n    }\n\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {string} name The setting name to get.\n     * @returns {boolean|null}\n     */\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n      return null;\n    }\n\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Create table row element.\n     *\n     * @param {number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\n     */\n  }, {\n    key: \"appendColumnHeadersRow\",\n    value: function appendColumnHeadersRow() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      var domFragment = rootDocument.createDocumentFragment();\n      var columnHeaders = [];\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        columnHeaders.push([-1, th]);\n        domFragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          columnHeaders.push([column, th]);\n          domFragment.appendChild(th);\n        });\n      });\n\n      // Appending DOM elements for headers\n      this.table.tHead.appendChild(domFragment);\n      arrayEach(columnHeaders, function (columnHeader) {\n        var _columnHeader = _slicedToArray(columnHeader, 2),\n          column = _columnHeader[0],\n          th = _columnHeader[1];\n\n        // Using source method for filling a header with value.\n        _this3.hot.view.appendColHeader(column, th);\n      });\n    }\n\n    /**\n     * Create table column elements.\n     *\n     * @param {number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Remove table from document and reset internal state.\n     */\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n      if (this.samples) {\n        this.samples.clear();\n      }\n      this.samples = null;\n      this.removeTable();\n    }\n\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\n     */\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n\n    /**\n     * Remove table from document.\n     */\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n\n    /**\n     * Create col element.\n     *\n     * @param {number} column Column index.\n     * @returns {HTMLElement}\n     */\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view._wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n\n    /**\n     * Create table element.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n      table.appendChild(tHead);\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n\n    /**\n     * Create container for tables.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n  return GhostTable;\n}();\nexport default GhostTable;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","addClass","outerHeight","arrayEach","GhostTable","hotInstance","hot","container","injected","rows","columns","samples","settings","useHeaders","addRow","row","Error","createContainer","rootElement","className","rowObject","table","createTable","colGroup","appendChild","createColGroupsCol","tr","createRow","fragment","addColumnHeadersRow","colHeader","getColHeader","appendColumnHeadersRow","addColumn","column","columnObject","col","getSetting","view","appendColHeader","th","tBody","createCol","getHeights","callback","injectTable","getWidths","_column$table$getBoun","getBoundingClientRect","width","Math","ceil","setSettings","setSetting","getSettings","_this","rootDocument","createDocumentFragment","hasRowHeaders","createColElement","forEach","sample","strings","string","_this2","createElement","appendRowHeader","cellProperties","getCellMeta","renderer","getCellRenderer","td","setAttribute","colToProp","_this3","domFragment","columnHeaders","tHead","columnHeader","_columnHeader","_this4","clean","clear","removeTable","parent","arguments","parentNode","removeChild","style","concat","_wt","wtTable","getStretchedColumnWidth","isVertical","isHorizontal","tableLayout","containerClassName","trim"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/utils/ghostTable.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { addClass, outerHeight } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\n/**\n * @class GhostTable\n */\nvar GhostTable = /*#__PURE__*/function () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {boolean}\n     */\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {object}\n     * @default {Object}\n     */\n    this.settings = {\n      useHeaders: true\n    };\n  }\n\n  /**\n   * Add row.\n   *\n   * @param {number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n\n    /**\n     * Add a row consisting of the column headers.\n     *\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.appendColumnHeadersRow();\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n\n    /**\n     * Add column.\n     *\n     * @param {number} column Column index.\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n        // We render all columns.\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.columns, function (column) {\n        // The GhostTable class is responsible for calculating the columns' width based on the\n        // contents rendered in the cells. In some cases, when the column's width calculated by\n        // the browser is a decimal point with a fractional component. For example, 35.32px.\n        // The usage of the `.offsetWidth` (or our helper `outerWidth`) is incorrect.\n        // The `outerWidth` in the mentioned example (35.32px) would return 35 pixels that\n        // would cause the text to not fit in the cell, thus increasing the row height.\n        // That's why the `getBoundingClientRect` method is used. The method returns the number\n        // that is rounded up to make sure that there will be a space for the cell's content.\n        var _column$table$getBoun = column.table.getBoundingClientRect(),\n          width = _column$table$getBoun.width;\n        callback(column.col, Math.ceil(width));\n      });\n    }\n\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {object} settings New Ghost Table Settings.\n     */\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {string} name Setting name.\n     * @param {*} value Setting value.\n     */\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n      this.settings[name] = value;\n    }\n\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {string} name The setting name to get.\n     * @returns {boolean|null}\n     */\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n      return null;\n    }\n\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Create table row element.\n     *\n     * @param {number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\n     */\n  }, {\n    key: \"appendColumnHeadersRow\",\n    value: function appendColumnHeadersRow() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      var domFragment = rootDocument.createDocumentFragment();\n      var columnHeaders = [];\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        columnHeaders.push([-1, th]);\n        domFragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          columnHeaders.push([column, th]);\n          domFragment.appendChild(th);\n        });\n      });\n\n      // Appending DOM elements for headers\n      this.table.tHead.appendChild(domFragment);\n      arrayEach(columnHeaders, function (columnHeader) {\n        var _columnHeader = _slicedToArray(columnHeader, 2),\n          column = _columnHeader[0],\n          th = _columnHeader[1];\n\n        // Using source method for filling a header with value.\n        _this3.hot.view.appendColHeader(column, th);\n      });\n    }\n\n    /**\n     * Create table column elements.\n     *\n     * @param {number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Remove table from document and reset internal state.\n     */\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n      if (this.samples) {\n        this.samples.clear();\n      }\n      this.samples = null;\n      this.removeTable();\n    }\n\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\n     */\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n\n    /**\n     * Remove table from document.\n     */\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n\n    /**\n     * Create col element.\n     *\n     * @param {number} column Column index.\n     * @returns {HTMLElement}\n     */\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view._wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n\n    /**\n     * Create table element.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n      table.appendChild(tHead);\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n\n    /**\n     * Create container for tables.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n  return GhostTable;\n}();\nexport default GhostTable;"],"mappings":"AAAA,SAASA,OAAOA,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAOE,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUF,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOC,MAAM,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;EAAE,CAAC,EAAED,OAAO,CAACC,GAAG,CAAC;AAAE;AAC/U,SAASK,cAAcA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAAE,OAAOC,eAAe,CAACF,GAAG,CAAC,IAAIG,qBAAqB,CAACH,GAAG,EAAEC,CAAC,CAAC,IAAIG,2BAA2B,CAACJ,GAAG,EAAEC,CAAC,CAAC,IAAII,gBAAgB,EAAE;AAAE;AAC7J,SAASA,gBAAgBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,2IAA2I,CAAC;AAAE;AAChM,SAASF,2BAA2BA,CAACG,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGC,MAAM,CAACb,SAAS,CAACc,QAAQ,CAACC,IAAI,CAACN,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIJ,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACV,WAAW,EAAEa,CAAC,GAAGH,CAAC,CAACV,WAAW,CAACkB,IAAI;EAAE,IAAIL,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOM,KAAK,CAACC,IAAI,CAACV,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACQ,IAAI,CAACR,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAC/Z,SAASC,iBAAiBA,CAACT,GAAG,EAAEmB,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGnB,GAAG,CAACoB,MAAM,EAAED,GAAG,GAAGnB,GAAG,CAACoB,MAAM;EAAE,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEoB,IAAI,GAAG,IAAIL,KAAK,CAACG,GAAG,CAAC,EAAElB,CAAC,GAAGkB,GAAG,EAAElB,CAAC,EAAE,EAAEoB,IAAI,CAACpB,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,CAAC;EAAE,OAAOoB,IAAI;AAAE;AAClL,SAASlB,qBAAqBA,CAACH,GAAG,EAAEC,CAAC,EAAE;EAAE,IAAIqB,EAAE,GAAG,IAAI,IAAItB,GAAG,GAAG,IAAI,GAAG,WAAW,IAAI,OAAOL,MAAM,IAAIK,GAAG,CAACL,MAAM,CAACC,QAAQ,CAAC,IAAII,GAAG,CAAC,YAAY,CAAC;EAAE,IAAI,IAAI,IAAIsB,EAAE,EAAE;IAAE,IAAIC,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,IAAI,GAAG,EAAE;MAAEC,EAAE,GAAG,CAAC,CAAC;MAAEC,EAAE,GAAG,CAAC,CAAC;IAAE,IAAI;MAAE,IAAIJ,EAAE,GAAG,CAACH,EAAE,GAAGA,EAAE,CAACT,IAAI,CAACb,GAAG,CAAC,EAAE8B,IAAI,EAAE,CAAC,KAAK7B,CAAC,EAAE;QAAE,IAAIU,MAAM,CAACW,EAAE,CAAC,KAAKA,EAAE,EAAE;QAAQM,EAAE,GAAG,CAAC,CAAC;MAAE,CAAC,MAAM,OAAO,EAAEA,EAAE,GAAG,CAACL,EAAE,GAAGE,EAAE,CAACZ,IAAI,CAACS,EAAE,CAAC,EAAES,IAAI,CAAC,KAAKJ,IAAI,CAACK,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC,EAAEN,IAAI,CAACP,MAAM,KAAKnB,CAAC,CAAC,EAAE2B,EAAE,GAAG,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAEL,EAAE,GAAG,CAAC,CAAC,EAAEL,EAAE,GAAGU,GAAG;IAAE,CAAC,SAAS;MAAE,IAAI;QAAE,IAAI,CAACN,EAAE,IAAI,IAAI,IAAIN,EAAE,CAACa,MAAM,KAAKT,EAAE,GAAGJ,EAAE,CAACa,MAAM,EAAE,EAAExB,MAAM,CAACe,EAAE,CAAC,KAAKA,EAAE,CAAC,EAAE;MAAQ,CAAC,SAAS;QAAE,IAAIG,EAAE,EAAE,MAAML,EAAE;MAAE;IAAE;IAAE,OAAOG,IAAI;EAAE;AAAE;AAC3kB,SAASzB,eAAeA,CAACF,GAAG,EAAE;EAAE,IAAIgB,KAAK,CAACoB,OAAO,CAACpC,GAAG,CAAC,EAAE,OAAOA,GAAG;AAAE;AAiBpE,SAASqC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIjC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AACxJ,SAASkC,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyC,KAAK,CAACtB,MAAM,EAAEnB,CAAC,EAAE,EAAE;IAAE,IAAI0C,UAAU,GAAGD,KAAK,CAACzC,CAAC,CAAC;IAAE0C,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEnC,MAAM,CAACoC,cAAc,CAACN,MAAM,EAAEO,cAAc,CAACL,UAAU,CAACM,GAAG,CAAC,EAAEN,UAAU,CAAC;EAAE;AAAE;AAC5U,SAASO,YAAYA,CAACX,WAAW,EAAEY,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEX,iBAAiB,CAACD,WAAW,CAACzC,SAAS,EAAEqD,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEZ,iBAAiB,CAACD,WAAW,EAAEa,WAAW,CAAC;EAAEzC,MAAM,CAACoC,cAAc,CAACR,WAAW,EAAE,WAAW,EAAE;IAAEO,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAOP,WAAW;AAAE;AAC5R,SAASS,cAAcA,CAACK,GAAG,EAAE;EAAE,IAAIJ,GAAG,GAAGK,YAAY,CAACD,GAAG,EAAE,QAAQ,CAAC;EAAE,OAAO5D,OAAO,CAACwD,GAAG,CAAC,KAAK,QAAQ,GAAGA,GAAG,GAAGM,MAAM,CAACN,GAAG,CAAC;AAAE;AAC5H,SAASK,YAAYA,CAACE,KAAK,EAAEC,IAAI,EAAE;EAAE,IAAIhE,OAAO,CAAC+D,KAAK,CAAC,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOA,KAAK;EAAE,IAAIE,IAAI,GAAGF,KAAK,CAAC7D,MAAM,CAACgE,WAAW,CAAC;EAAE,IAAID,IAAI,KAAKE,SAAS,EAAE;IAAE,IAAIC,GAAG,GAAGH,IAAI,CAAC7C,IAAI,CAAC2C,KAAK,EAAEC,IAAI,IAAI,SAAS,CAAC;IAAE,IAAIhE,OAAO,CAACoE,GAAG,CAAC,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAAE,MAAM,IAAIvD,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAACmD,IAAI,KAAK,QAAQ,GAAGF,MAAM,GAAGO,MAAM,EAAEN,KAAK,CAAC;AAAE;AAC5X,SAASO,QAAQ,EAAEC,WAAW,QAAQ,8BAA8B;AACpE,SAASC,SAAS,QAAQ,wBAAwB;AAClD;AACA;AACA;AACA,IAAIC,UAAU,GAAG,aAAa,YAAY;EACxC,SAASA,UAAUA,CAACC,WAAW,EAAE;IAC/B9B,eAAe,CAAC,IAAI,EAAE6B,UAAU,CAAC;IACjC;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACE,GAAG,GAAGD,WAAW;IACtB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACE,SAAS,GAAG,IAAI;IACrB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAG,EAAE;IACd;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG;MACdC,UAAU,EAAE;IACd,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEzB,YAAY,CAACgB,UAAU,EAAE,CAAC;IACxBjB,GAAG,EAAE,QAAQ;IACbhB,KAAK,EAAE,SAAS2C,MAAMA,CAACC,GAAG,EAAEJ,OAAO,EAAE;MACnC,IAAI,IAAI,CAACD,OAAO,CAACpD,MAAM,EAAE;QACvB,MAAM,IAAI0D,KAAK,CAAC,0CAA0C,CAAC;MAC7D;MACA,IAAI,CAAC,IAAI,CAACP,IAAI,CAACnD,MAAM,EAAE;QACrB,IAAI,CAACiD,SAAS,GAAG,IAAI,CAACU,eAAe,CAAC,IAAI,CAACX,GAAG,CAACY,WAAW,CAACC,SAAS,CAAC;MACvE;MACA,IAAIC,SAAS,GAAG;QACdL,GAAG,EAAEA;MACP,CAAC;MACD,IAAI,CAACN,IAAI,CAACvC,IAAI,CAACkD,SAAS,CAAC;MACzB,IAAI,CAACT,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACU,KAAK,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAAChB,GAAG,CAACe,KAAK,CAACF,SAAS,CAAC;MACvD,IAAI,CAACE,KAAK,CAACE,QAAQ,CAACC,WAAW,CAAC,IAAI,CAACC,kBAAkB,EAAE,CAAC;MAC1D,IAAI,CAACJ,KAAK,CAACK,EAAE,CAACF,WAAW,CAAC,IAAI,CAACG,SAAS,CAACZ,GAAG,CAAC,CAAC;MAC9C,IAAI,CAACR,SAAS,CAACA,SAAS,CAACiB,WAAW,CAAC,IAAI,CAACH,KAAK,CAACO,QAAQ,CAAC;MACzDR,SAAS,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACA,KAAK;IACpC;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlC,GAAG,EAAE,qBAAqB;IAC1BhB,KAAK,EAAE,SAAS0D,mBAAmBA,CAAClB,OAAO,EAAE;MAC3C,IAAImB,SAAS,GAAG,IAAI,CAACxB,GAAG,CAACyB,YAAY,CAAC,CAAC,CAAC;MACxC,IAAID,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,EAAE;QAC9C,IAAIV,SAAS,GAAG;UACdL,GAAG,EAAE,CAAC;QACR,CAAC;QACD,IAAI,CAACN,IAAI,CAACvC,IAAI,CAACkD,SAAS,CAAC;QACzB,IAAI,CAACb,SAAS,GAAG,IAAI,CAACU,eAAe,CAAC,IAAI,CAACX,GAAG,CAACY,WAAW,CAACC,SAAS,CAAC;QACrE,IAAI,CAACR,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACU,KAAK,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAAChB,GAAG,CAACe,KAAK,CAACF,SAAS,CAAC;QACvD,IAAI,CAACE,KAAK,CAACE,QAAQ,CAACC,WAAW,CAAC,IAAI,CAACC,kBAAkB,EAAE,CAAC;QAC1D,IAAI,CAACO,sBAAsB,EAAE;QAC7B,IAAI,CAACzB,SAAS,CAACA,SAAS,CAACiB,WAAW,CAAC,IAAI,CAACH,KAAK,CAACO,QAAQ,CAAC;QACzDR,SAAS,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACA,KAAK;MACpC;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlC,GAAG,EAAE,WAAW;IAChBhB,KAAK,EAAE,SAAS8D,SAASA,CAACC,MAAM,EAAEvB,OAAO,EAAE;MACzC,IAAI,IAAI,CAACF,IAAI,CAACnD,MAAM,EAAE;QACpB,MAAM,IAAI0D,KAAK,CAAC,0CAA0C,CAAC;MAC7D;MACA,IAAI,CAAC,IAAI,CAACN,OAAO,CAACpD,MAAM,EAAE;QACxB,IAAI,CAACiD,SAAS,GAAG,IAAI,CAACU,eAAe,CAAC,IAAI,CAACX,GAAG,CAACY,WAAW,CAACC,SAAS,CAAC;MACvE;MACA,IAAIgB,YAAY,GAAG;QACjBC,GAAG,EAAEF;MACP,CAAC;MACD,IAAI,CAACxB,OAAO,CAACxC,IAAI,CAACiE,YAAY,CAAC;MAC/B,IAAI,CAACxB,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACU,KAAK,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAAChB,GAAG,CAACe,KAAK,CAACF,SAAS,CAAC;MACvD,IAAI,IAAI,CAACkB,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC/B,GAAG,CAACyB,YAAY,CAACG,MAAM,CAAC,KAAK,IAAI,EAAE;QAC3E;QACA;QACA,IAAI,CAAC5B,GAAG,CAACgC,IAAI,CAACC,eAAe,CAACL,MAAM,EAAE,IAAI,CAACb,KAAK,CAACmB,EAAE,CAAC;MACtD;MACA,IAAI,CAACnB,KAAK,CAACoB,KAAK,CAACjB,WAAW,CAAC,IAAI,CAACkB,SAAS,CAACR,MAAM,CAAC,CAAC;MACpD,IAAI,CAAC3B,SAAS,CAACA,SAAS,CAACiB,WAAW,CAAC,IAAI,CAACH,KAAK,CAACO,QAAQ,CAAC;MACzDO,YAAY,CAACd,KAAK,GAAG,IAAI,CAACA,KAAK,CAACA,KAAK;IACvC;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlC,GAAG,EAAE,YAAY;IACjBhB,KAAK,EAAE,SAASwE,UAAUA,CAACC,QAAQ,EAAE;MACnC,IAAI,CAAC,IAAI,CAACpC,QAAQ,EAAE;QAClB,IAAI,CAACqC,WAAW,EAAE;MACpB;MACA1C,SAAS,CAAC,IAAI,CAACM,IAAI,EAAE,UAAUM,GAAG,EAAE;QAClC;QACA6B,QAAQ,CAAC7B,GAAG,CAACA,GAAG,EAAEb,WAAW,CAACa,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC;MAC/C,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDlC,GAAG,EAAE,WAAW;IAChBhB,KAAK,EAAE,SAAS2E,SAASA,CAACF,QAAQ,EAAE;MAClC,IAAI,CAAC,IAAI,CAACpC,QAAQ,EAAE;QAClB,IAAI,CAACqC,WAAW,EAAE;MACpB;MACA1C,SAAS,CAAC,IAAI,CAACO,OAAO,EAAE,UAAUwB,MAAM,EAAE;QACxC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAIa,qBAAqB,GAAGb,MAAM,CAACb,KAAK,CAAC2B,qBAAqB,EAAE;UAC9DC,KAAK,GAAGF,qBAAqB,CAACE,KAAK;QACrCL,QAAQ,CAACV,MAAM,CAACE,GAAG,EAAEc,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD9D,GAAG,EAAE,aAAa;IAClBhB,KAAK,EAAE,SAASiF,WAAWA,CAACxC,QAAQ,EAAE;MACpC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzB,GAAG,EAAE,YAAY;IACjBhB,KAAK,EAAE,SAASkF,UAAUA,CAACpG,IAAI,EAAEkB,KAAK,EAAE;MACtC,IAAI,CAAC,IAAI,CAACyC,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,GAAG,CAAC,CAAC;MACpB;MACA,IAAI,CAACA,QAAQ,CAAC3D,IAAI,CAAC,GAAGkB,KAAK;IAC7B;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDgB,GAAG,EAAE,aAAa;IAClBhB,KAAK,EAAE,SAASmF,WAAWA,CAAA,EAAG;MAC5B,OAAO,IAAI,CAAC1C,QAAQ;IACtB;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzB,GAAG,EAAE,YAAY;IACjBhB,KAAK,EAAE,SAASkE,UAAUA,CAACpF,IAAI,EAAE;MAC/B,IAAI,IAAI,CAAC2D,QAAQ,EAAE;QACjB,OAAO,IAAI,CAACA,QAAQ,CAAC3D,IAAI,CAAC;MAC5B;MACA,OAAO,IAAI;IACb;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDkC,GAAG,EAAE,oBAAoB;IACzBhB,KAAK,EAAE,SAASsD,kBAAkBA,CAAA,EAAG;MACnC,IAAI8B,KAAK,GAAG,IAAI;MAChB,IAAI3B,QAAQ,GAAG,IAAI,CAACtB,GAAG,CAACkD,YAAY,CAACC,sBAAsB,EAAE;MAC7D,IAAI,IAAI,CAACnD,GAAG,CAACoD,aAAa,EAAE,EAAE;QAC5B9B,QAAQ,CAACJ,WAAW,CAAC,IAAI,CAACmC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;MACjD;MACA,IAAI,CAAChD,OAAO,CAACiD,OAAO,CAAC,UAAUC,MAAM,EAAE;QACrC1D,SAAS,CAAC0D,MAAM,CAACC,OAAO,EAAE,UAAUC,MAAM,EAAE;UAC1CnC,QAAQ,CAACJ,WAAW,CAAC+B,KAAK,CAACI,gBAAgB,CAACI,MAAM,CAAC3B,GAAG,CAAC,CAAC;QAC1D,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOR,QAAQ;IACjB;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzC,GAAG,EAAE,WAAW;IAChBhB,KAAK,EAAE,SAASwD,SAASA,CAACZ,GAAG,EAAE;MAC7B,IAAIiD,MAAM,GAAG,IAAI;MACjB,IAAIR,YAAY,GAAG,IAAI,CAAClD,GAAG,CAACkD,YAAY;MACxC,IAAI5B,QAAQ,GAAG4B,YAAY,CAACC,sBAAsB,EAAE;MACpD,IAAIjB,EAAE,GAAGgB,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;MACzC,IAAI,IAAI,CAAC3D,GAAG,CAACoD,aAAa,EAAE,EAAE;QAC5B,IAAI,CAACpD,GAAG,CAACgC,IAAI,CAAC4B,eAAe,CAACnD,GAAG,EAAEyB,EAAE,CAAC;QACtCZ,QAAQ,CAACJ,WAAW,CAACgB,EAAE,CAAC;MAC1B;MACA,IAAI,CAAC7B,OAAO,CAACiD,OAAO,CAAC,UAAUC,MAAM,EAAE;QACrC1D,SAAS,CAAC0D,MAAM,CAACC,OAAO,EAAE,UAAUC,MAAM,EAAE;UAC1C,IAAI7B,MAAM,GAAG6B,MAAM,CAAC3B,GAAG;UACvB,IAAI+B,cAAc,GAAGH,MAAM,CAAC1D,GAAG,CAAC8D,WAAW,CAACrD,GAAG,EAAEmB,MAAM,CAAC;UACxDiC,cAAc,CAAC/B,GAAG,GAAGF,MAAM;UAC3BiC,cAAc,CAACpD,GAAG,GAAGA,GAAG;UACxB,IAAIsD,QAAQ,GAAGL,MAAM,CAAC1D,GAAG,CAACgE,eAAe,CAACH,cAAc,CAAC;UACzD,IAAII,EAAE,GAAGf,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;;UAEzC;UACA;UACAM,EAAE,CAACC,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC;UACjCH,QAAQ,CAACL,MAAM,CAAC1D,GAAG,EAAEiE,EAAE,EAAExD,GAAG,EAAEmB,MAAM,EAAE8B,MAAM,CAAC1D,GAAG,CAACmE,SAAS,CAACvC,MAAM,CAAC,EAAE6B,MAAM,CAAC5F,KAAK,EAAEgG,cAAc,CAAC;UACjGvC,QAAQ,CAACJ,WAAW,CAAC+C,EAAE,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAO3C,QAAQ;IACjB;;IAEA;AACJ;AACA;EACE,CAAC,EAAE;IACDzC,GAAG,EAAE,wBAAwB;IAC7BhB,KAAK,EAAE,SAAS6D,sBAAsBA,CAAA,EAAG;MACvC,IAAI0C,MAAM,GAAG,IAAI;MACjB,IAAIlB,YAAY,GAAG,IAAI,CAAClD,GAAG,CAACkD,YAAY;MACxC,IAAImB,WAAW,GAAGnB,YAAY,CAACC,sBAAsB,EAAE;MACvD,IAAImB,aAAa,GAAG,EAAE;MACtB,IAAI,IAAI,CAACtE,GAAG,CAACoD,aAAa,EAAE,EAAE;QAC5B,IAAIlB,EAAE,GAAGgB,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;QACzCW,aAAa,CAAC1G,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEsE,EAAE,CAAC,CAAC;QAC5BmC,WAAW,CAACnD,WAAW,CAACgB,EAAE,CAAC;MAC7B;MACA,IAAI,CAAC7B,OAAO,CAACiD,OAAO,CAAC,UAAUC,MAAM,EAAE;QACrC1D,SAAS,CAAC0D,MAAM,CAACC,OAAO,EAAE,UAAUC,MAAM,EAAE;UAC1C,IAAI7B,MAAM,GAAG6B,MAAM,CAAC3B,GAAG;UACvB,IAAII,EAAE,GAAGgB,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;UACzCW,aAAa,CAAC1G,IAAI,CAAC,CAACgE,MAAM,EAAEM,EAAE,CAAC,CAAC;UAChCmC,WAAW,CAACnD,WAAW,CAACgB,EAAE,CAAC;QAC7B,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,IAAI,CAACnB,KAAK,CAACwD,KAAK,CAACrD,WAAW,CAACmD,WAAW,CAAC;MACzCxE,SAAS,CAACyE,aAAa,EAAE,UAAUE,YAAY,EAAE;QAC/C,IAAIC,aAAa,GAAG9I,cAAc,CAAC6I,YAAY,EAAE,CAAC,CAAC;UACjD5C,MAAM,GAAG6C,aAAa,CAAC,CAAC,CAAC;UACzBvC,EAAE,GAAGuC,aAAa,CAAC,CAAC,CAAC;;QAEvB;QACAL,MAAM,CAACpE,GAAG,CAACgC,IAAI,CAACC,eAAe,CAACL,MAAM,EAAEM,EAAE,CAAC;MAC7C,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDrD,GAAG,EAAE,WAAW;IAChBhB,KAAK,EAAE,SAASuE,SAASA,CAACR,MAAM,EAAE;MAChC,IAAI8C,MAAM,GAAG,IAAI;MACjB,IAAIxB,YAAY,GAAG,IAAI,CAAClD,GAAG,CAACkD,YAAY;MACxC,IAAI5B,QAAQ,GAAG4B,YAAY,CAACC,sBAAsB,EAAE;MACpD,IAAI,CAAC9C,OAAO,CAACiD,OAAO,CAAC,UAAUC,MAAM,EAAE;QACrC1D,SAAS,CAAC0D,MAAM,CAACC,OAAO,EAAE,UAAUC,MAAM,EAAE;UAC1C,IAAIhD,GAAG,GAAGgD,MAAM,CAAChD,GAAG;UACpB,IAAIoD,cAAc,GAAGa,MAAM,CAAC1E,GAAG,CAAC8D,WAAW,CAACrD,GAAG,EAAEmB,MAAM,CAAC;UACxDiC,cAAc,CAAC/B,GAAG,GAAGF,MAAM;UAC3BiC,cAAc,CAACpD,GAAG,GAAGA,GAAG;UACxB,IAAIsD,QAAQ,GAAGW,MAAM,CAAC1E,GAAG,CAACgE,eAAe,CAACH,cAAc,CAAC;UACzD,IAAII,EAAE,GAAGf,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;UACzC,IAAIvC,EAAE,GAAG8B,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;;UAEzC;UACA;UACAM,EAAE,CAACC,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC;UACjCH,QAAQ,CAACW,MAAM,CAAC1E,GAAG,EAAEiE,EAAE,EAAExD,GAAG,EAAEmB,MAAM,EAAE8C,MAAM,CAAC1E,GAAG,CAACmE,SAAS,CAACvC,MAAM,CAAC,EAAE6B,MAAM,CAAC5F,KAAK,EAAEgG,cAAc,CAAC;UACjGzC,EAAE,CAACF,WAAW,CAAC+C,EAAE,CAAC;UAClB3C,QAAQ,CAACJ,WAAW,CAACE,EAAE,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOE,QAAQ;IACjB;;IAEA;AACJ;AACA;EACE,CAAC,EAAE;IACDzC,GAAG,EAAE,OAAO;IACZhB,KAAK,EAAE,SAAS8G,KAAKA,CAAA,EAAG;MACtB,IAAI,CAACxE,IAAI,CAACnD,MAAM,GAAG,CAAC;MACpB,IAAI,CAACmD,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MACtB,IAAI,CAACC,OAAO,CAACpD,MAAM,GAAG,CAAC;MACvB,IAAI,IAAI,CAACqD,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAACuE,KAAK,EAAE;MACtB;MACA,IAAI,CAACvE,OAAO,GAAG,IAAI;MACnB,IAAI,CAACwE,WAAW,EAAE;IACpB;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDhG,GAAG,EAAE,aAAa;IAClBhB,KAAK,EAAE,SAAS0E,WAAWA,CAAA,EAAG;MAC5B,IAAIuC,MAAM,GAAGC,SAAS,CAAC/H,MAAM,GAAG,CAAC,IAAI+H,SAAS,CAAC,CAAC,CAAC,KAAKvF,SAAS,GAAGuF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MACrF,IAAI,CAAC,IAAI,CAAC7E,QAAQ,EAAE;QAClB,CAAC4E,MAAM,IAAI,IAAI,CAAC9E,GAAG,CAACY,WAAW,EAAEM,WAAW,CAAC,IAAI,CAACjB,SAAS,CAACqB,QAAQ,CAAC;QACrE,IAAI,CAACpB,QAAQ,GAAG,IAAI;MACtB;IACF;;IAEA;AACJ;AACA;EACE,CAAC,EAAE;IACDrB,GAAG,EAAE,aAAa;IAClBhB,KAAK,EAAE,SAASgH,WAAWA,CAAA,EAAG;MAC5B,IAAI,IAAI,CAAC3E,QAAQ,IAAI,IAAI,CAACD,SAAS,CAACA,SAAS,CAAC+E,UAAU,EAAE;QACxD,IAAI,CAAC/E,SAAS,CAACA,SAAS,CAAC+E,UAAU,CAACC,WAAW,CAAC,IAAI,CAAChF,SAAS,CAACA,SAAS,CAAC;QACzE,IAAI,CAACA,SAAS,GAAG,IAAI;QACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACvB;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDrB,GAAG,EAAE,kBAAkB;IACvBhB,KAAK,EAAE,SAASwF,gBAAgBA,CAACzB,MAAM,EAAE;MACvC,IAAIE,GAAG,GAAG,IAAI,CAAC9B,GAAG,CAACkD,YAAY,CAACS,aAAa,CAAC,KAAK,CAAC;MACpD7B,GAAG,CAACoD,KAAK,CAACvC,KAAK,GAAG,EAAE,CAACwC,MAAM,CAAC,IAAI,CAACnF,GAAG,CAACgC,IAAI,CAACoD,GAAG,CAACC,OAAO,CAACC,uBAAuB,CAAC1D,MAAM,CAAC,EAAE,IAAI,CAAC;MAC5F,OAAOE,GAAG;IACZ;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDjD,GAAG,EAAE,aAAa;IAClBhB,KAAK,EAAE,SAASmD,WAAWA,CAAA,EAAG;MAC5B,IAAIH,SAAS,GAAGkE,SAAS,CAAC/H,MAAM,GAAG,CAAC,IAAI+H,SAAS,CAAC,CAAC,CAAC,KAAKvF,SAAS,GAAGuF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MACtF,IAAI7B,YAAY,GAAG,IAAI,CAAClD,GAAG,CAACkD,YAAY;MACxC,IAAI5B,QAAQ,GAAG4B,YAAY,CAACC,sBAAsB,EAAE;MACpD,IAAIpC,KAAK,GAAGmC,YAAY,CAACS,aAAa,CAAC,OAAO,CAAC;MAC/C,IAAIY,KAAK,GAAGrB,YAAY,CAACS,aAAa,CAAC,OAAO,CAAC;MAC/C,IAAIxB,KAAK,GAAGe,YAAY,CAACS,aAAa,CAAC,OAAO,CAAC;MAC/C,IAAI1C,QAAQ,GAAGiC,YAAY,CAACS,aAAa,CAAC,UAAU,CAAC;MACrD,IAAIvC,EAAE,GAAG8B,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;MACzC,IAAIzB,EAAE,GAAGgB,YAAY,CAACS,aAAa,CAAC,IAAI,CAAC;MACzC,IAAI,IAAI,CAAC4B,UAAU,EAAE,EAAE;QACrBxE,KAAK,CAACG,WAAW,CAACD,QAAQ,CAAC;MAC7B;MACA,IAAI,IAAI,CAACuE,YAAY,EAAE,EAAE;QACvBpE,EAAE,CAACF,WAAW,CAACgB,EAAE,CAAC;QAClBqC,KAAK,CAACrD,WAAW,CAACE,EAAE,CAAC;QACrBL,KAAK,CAACmE,KAAK,CAACO,WAAW,GAAG,MAAM;QAChC1E,KAAK,CAACmE,KAAK,CAACvC,KAAK,GAAG,MAAM;MAC5B;MACA5B,KAAK,CAACG,WAAW,CAACqD,KAAK,CAAC;MACxB,IAAI,IAAI,CAACgB,UAAU,EAAE,EAAE;QACrBpD,KAAK,CAACjB,WAAW,CAACE,EAAE,CAAC;MACvB;MACAL,KAAK,CAACG,WAAW,CAACiB,KAAK,CAAC;MACxBxC,QAAQ,CAACoB,KAAK,EAAEF,SAAS,CAAC;MAC1BS,QAAQ,CAACJ,WAAW,CAACH,KAAK,CAAC;MAC3B,OAAO;QACLO,QAAQ,EAAEA,QAAQ;QAClBP,KAAK,EAAEA,KAAK;QACZwD,KAAK,EAAEA,KAAK;QACZpC,KAAK,EAAEA,KAAK;QACZlB,QAAQ,EAAEA,QAAQ;QAClBG,EAAE,EAAEA,EAAE;QACNc,EAAE,EAAEA;MACN,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDrD,GAAG,EAAE,iBAAiB;IACtBhB,KAAK,EAAE,SAAS8C,eAAeA,CAAA,EAAG;MAChC,IAAIE,SAAS,GAAGkE,SAAS,CAAC/H,MAAM,GAAG,CAAC,IAAI+H,SAAS,CAAC,CAAC,CAAC,KAAKvF,SAAS,GAAGuF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MACtF,IAAI7B,YAAY,GAAG,IAAI,CAAClD,GAAG,CAACkD,YAAY;MACxC,IAAI5B,QAAQ,GAAG4B,YAAY,CAACC,sBAAsB,EAAE;MACpD,IAAIlD,SAAS,GAAGiD,YAAY,CAACS,aAAa,CAAC,KAAK,CAAC;MACjD,IAAI+B,kBAAkB,GAAG,0BAA0B,CAACP,MAAM,CAACtE,SAAS,CAAC8E,IAAI,EAAE,CAAC;MAC5EhG,QAAQ,CAACM,SAAS,EAAEyF,kBAAkB,CAAC;MACvCpE,QAAQ,CAACJ,WAAW,CAACjB,SAAS,CAAC;MAC/B,OAAO;QACLqB,QAAQ,EAAEA,QAAQ;QAClBrB,SAAS,EAAEA;MACb,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDpB,GAAG,EAAE,YAAY;IACjBhB,KAAK,EAAE,SAAS0H,UAAUA,CAAA,EAAG;MAC3B,OAAO,CAAC,EAAE,IAAI,CAACpF,IAAI,CAACnD,MAAM,IAAI,CAAC,IAAI,CAACoD,OAAO,CAACpD,MAAM,CAAC;IACrD;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD6B,GAAG,EAAE,cAAc;IACnBhB,KAAK,EAAE,SAAS2H,YAAYA,CAAA,EAAG;MAC7B,OAAO,CAAC,EAAE,IAAI,CAACpF,OAAO,CAACpD,MAAM,IAAI,CAAC,IAAI,CAACmD,IAAI,CAACnD,MAAM,CAAC;IACrD;EACF,CAAC,CAAC,CAAC;EACH,OAAO8C,UAAU;AACnB,CAAC,EAAE;AACH,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}