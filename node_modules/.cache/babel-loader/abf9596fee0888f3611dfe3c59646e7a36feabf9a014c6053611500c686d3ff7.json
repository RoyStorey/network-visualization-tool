{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { hasClass } from \"../../../helpers/dom/element.mjs\";\nimport BaseUI from \"./_base.mjs\";\nimport HeadersUI from \"./headers.mjs\";\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @private\n * @class\n * @augments BaseUI\n */\nvar CollapsingUI = /*#__PURE__*/function (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n  var _super = _createSuper(CollapsingUI);\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n    _classCallCheck(this, CollapsingUI);\n    _this = _super.call(this, nestedRowsPlugin, hotInstance);\n\n    /**\n     * Reference to the TrimRows plugin.\n     */\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0);\n\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.expandMultipleChildren(_this.lastCollapsedRows, forceRender);\n      },\n      shiftStash: function shiftStash(baseIndex, targetIndex) {\n        var delta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        if (targetIndex === null || targetIndex === void 0) {\n          targetIndex = Infinity;\n        }\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem >= baseIndex && elem < targetIndex) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, forceRender);\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {number|object} row The parent row.\n   * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   * @returns {Array}\n   */\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n      return rowsToTrim;\n    }\n\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children).\n     * @param {boolean} [forceRender=true] `true` if the table should be rendered after finishing the function.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n\n    /**\n     * Collapse a single row.\n     *\n     * @param {number} rowIndex Index of the row to collapse.\n     * @param {boolean} [recursive=true] `true` if it should collapse the row's children.\n     */\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {boolean} [recursive=true] `true` if it should collapse the rows' children.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true).\n     */\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      return rowsToTrim;\n    }\n\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim=[]] Array of rows to trim. Defaults to an empty array.\n     * @param {boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n          rowsToTrim.push(elemIndex);\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n    }\n\n    /**\n     * Expand a single row.\n     *\n     * @param {number} rowIndex Index of the row to expand.\n     * @param {boolean} [recursive=true] `true` if it should expand the row's children recursively.\n     */\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {boolean} [recursive=true] `true` if it should expand the rows' children recursively.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      return rowsToUntrim;\n    }\n\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim=[]] Array of the rows to be untrimmed.\n     * @param {boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {boolean} [doTrimming=false] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n            rowsToUntrim.push(elemIndex);\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n    }\n\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {number|object} row Parent row.\n     * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     * @returns {number[]}\n     */\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n          rowsToExpand.push(childIndex);\n        });\n      }\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      return rowsToUntrim;\n    }\n\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {boolean} [forceRender=true] `true` if the table should render after finishing the function.\n     * @param {boolean} [doTrimming=true] `true` if the rows should be untrimmed after finishing the function.\n     */\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n\n    /**\n     * Collapse all collapsable rows.\n     */\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n      var data = this.dataManager.getData();\n      var parentsToCollapse = [];\n      arrayEach(data, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n\n    /**\n     * Expand all collapsable rows.\n     */\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n      var data = this.dataManager.getData();\n      var parentsToExpand = [];\n      arrayEach(data, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n\n    /**\n     * Trim rows.\n     *\n     * @param {Array} rows Physical row indexes.\n     */\n  }, {\n    key: \"trimRows\",\n    value: function trimRows(rows) {\n      var _this12 = this;\n      this.hot.batchExecution(function () {\n        arrayEach(rows, function (physicalRow) {\n          _this12.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, true);\n        });\n      }, true);\n    }\n\n    /**\n     * Untrim rows.\n     *\n     * @param {Array} rows Physical row indexes.\n     */\n  }, {\n    key: \"untrimRows\",\n    value: function untrimRows(rows) {\n      var _this13 = this;\n      this.hot.batchExecution(function () {\n        arrayEach(rows, function (physicalRow) {\n          _this13.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, false);\n        });\n      }, true);\n    }\n\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @private\n     * @param {number|object|null} row The parent row. `null` for the top level.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this14 = this;\n      var rowObj = isNaN(row) ? row : this.dataManager.getDataObject(row);\n      var allCollapsed = true;\n\n      // Checking the children of the top-level \"parent\"\n      if (rowObj === null) {\n        rowObj = {\n          __children: this.dataManager.data\n        };\n      }\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this14.dataManager.getRowIndex(elem);\n          if (!_this14.plugin.collapsedRowsMap.getValueAtIndex(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n      return allCollapsed;\n    }\n\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {object} rowObj Row object.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event.\n     * @param {object} coords Coordinates of the clicked cell/header.\n     */\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n      var row = this.translateTrimmedRow(coords.row);\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n        stopImmediatePropagation(event);\n      }\n    }\n\n    /**\n     * Translate visual row after trimming to physical base row index.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @returns {number} Base row index.\n     */\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.hot.toPhysicalRow(row);\n    }\n\n    /**\n     * Translate physical row after trimming to visual base row index.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @returns {number} Base row index.\n     */\n  }, {\n    key: \"untranslateTrimmedRow\",\n    value: function untranslateTrimmedRow(row) {\n      return this.hot.toVisualRow(row);\n    }\n\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render();\n\n      // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n      this.hot.view.adjustElementsSize();\n    }\n  }]);\n  return CollapsingUI;\n}(BaseUI);\nexport default CollapsingUI;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","stopImmediatePropagation","arrayEach","rangeEach","hasClass","BaseUI","HeadersUI","CollapsingUI","_BaseUI","_super","nestedRowsPlugin","hotInstance","_this","dataManager","plugin","collapsedRows","collapsedRowsStash","stash","forceRender","lastCollapsedRows","expandMultipleChildren","shiftStash","baseIndex","targetIndex","delta","Infinity","elem","applyStash","collapseMultipleChildren","trimStash","realElementIndex","amount","indexOfElement","indexOf","splice","collapseChildren","row","_this2","doTrimming","rowsToCollapse","rowObject","rowIndex","rowsToTrim","isNaN","getRowIndex","getDataObject","hasChildren","__children","push","collapseRows","trimRows","renderAndAdjust","rows","_this3","collapseRow","recursive","rowIndexes","_this4","collapseChildRows","parentIndex","_this5","parentObject","elemIndex","expandRow","expandRows","_this6","rowsToUntrim","expandChildRows","untrimRows","_this7","isAnyParentCollapsed","expandChildren","_this8","rowsToExpand","childIndex","_this9","collapseAll","_this10","data","getData","parentsToCollapse","expandAll","_this11","parentsToExpand","_this12","hot","batchExecution","physicalRow","collapsedRowsMap","setValueAtIndex","_this13","areChildrenCollapsed","_this14","rowObj","allCollapsed","getValueAtIndex","parent","getRowParent","toggleState","event","coords","col","translateTrimmedRow","CSS_CLASSES","button","toPhysicalRow","untranslateTrimmedRow","toVisualRow","render","view","adjustElementsSize"],"sources":["/home/rstorey/wwwdev/Blucktool/node_modules/handsontable/plugins/nestedRows/ui/collapsing.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport { stopImmediatePropagation } from \"../../../helpers/dom/event.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { rangeEach } from \"../../../helpers/number.mjs\";\nimport { hasClass } from \"../../../helpers/dom/element.mjs\";\nimport BaseUI from \"./_base.mjs\";\nimport HeadersUI from \"./headers.mjs\";\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @private\n * @class\n * @augments BaseUI\n */\nvar CollapsingUI = /*#__PURE__*/function (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n  var _super = _createSuper(CollapsingUI);\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n    _classCallCheck(this, CollapsingUI);\n    _this = _super.call(this, nestedRowsPlugin, hotInstance);\n\n    /**\n     * Reference to the TrimRows plugin.\n     */\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0);\n\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.expandMultipleChildren(_this.lastCollapsedRows, forceRender);\n      },\n      shiftStash: function shiftStash(baseIndex, targetIndex) {\n        var delta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        if (targetIndex === null || targetIndex === void 0) {\n          targetIndex = Infinity;\n        }\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem >= baseIndex && elem < targetIndex) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, forceRender);\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {number|object} row The parent row.\n   * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n   * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n   * @returns {Array}\n   */\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n      return rowsToTrim;\n    }\n\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children).\n     * @param {boolean} [forceRender=true] `true` if the table should be rendered after finishing the function.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n\n    /**\n     * Collapse a single row.\n     *\n     * @param {number} rowIndex Index of the row to collapse.\n     * @param {boolean} [recursive=true] `true` if it should collapse the row's children.\n     */\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {boolean} [recursive=true] `true` if it should collapse the rows' children.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true).\n     */\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n      return rowsToTrim;\n    }\n\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim=[]] Array of rows to trim. Defaults to an empty array.\n     * @param {boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n          rowsToTrim.push(elemIndex);\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n      if (doTrimming) {\n        this.trimRows(rowsToTrim);\n      }\n    }\n\n    /**\n     * Expand a single row.\n     *\n     * @param {number} rowIndex Index of the row to expand.\n     * @param {boolean} [recursive=true] `true` if it should expand the row's children recursively.\n     */\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {boolean} [recursive=true] `true` if it should expand the rows' children recursively.\n     * @param {boolean} [doTrimming=true] I determine whether collapsing should envolve trimming rows.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      return rowsToUntrim;\n    }\n\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim=[]] Array of the rows to be untrimmed.\n     * @param {boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {boolean} [doTrimming=false] I determine whether collapsing should envolve trimming rows.\n     */\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n            rowsToUntrim.push(elemIndex);\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n    }\n\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {number|object} row Parent row.\n     * @param {boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     * @returns {number[]}\n     */\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n          rowsToExpand.push(childIndex);\n        });\n      }\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      return rowsToUntrim;\n    }\n\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {boolean} [forceRender=true] `true` if the table should render after finishing the function.\n     * @param {boolean} [doTrimming=true] `true` if the rows should be untrimmed after finishing the function.\n     */\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n\n    /**\n     * Collapse all collapsable rows.\n     */\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n      var data = this.dataManager.getData();\n      var parentsToCollapse = [];\n      arrayEach(data, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n\n    /**\n     * Expand all collapsable rows.\n     */\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n      var data = this.dataManager.getData();\n      var parentsToExpand = [];\n      arrayEach(data, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n\n    /**\n     * Trim rows.\n     *\n     * @param {Array} rows Physical row indexes.\n     */\n  }, {\n    key: \"trimRows\",\n    value: function trimRows(rows) {\n      var _this12 = this;\n      this.hot.batchExecution(function () {\n        arrayEach(rows, function (physicalRow) {\n          _this12.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, true);\n        });\n      }, true);\n    }\n\n    /**\n     * Untrim rows.\n     *\n     * @param {Array} rows Physical row indexes.\n     */\n  }, {\n    key: \"untrimRows\",\n    value: function untrimRows(rows) {\n      var _this13 = this;\n      this.hot.batchExecution(function () {\n        arrayEach(rows, function (physicalRow) {\n          _this13.plugin.collapsedRowsMap.setValueAtIndex(physicalRow, false);\n        });\n      }, true);\n    }\n\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @private\n     * @param {number|object|null} row The parent row. `null` for the top level.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this14 = this;\n      var rowObj = isNaN(row) ? row : this.dataManager.getDataObject(row);\n      var allCollapsed = true;\n\n      // Checking the children of the top-level \"parent\"\n      if (rowObj === null) {\n        rowObj = {\n          __children: this.dataManager.data\n        };\n      }\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this14.dataManager.getRowIndex(elem);\n          if (!_this14.plugin.collapsedRowsMap.getValueAtIndex(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n      return allCollapsed;\n    }\n\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {object} rowObj Row object.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event.\n     * @param {object} coords Coordinates of the clicked cell/header.\n     */\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n      var row = this.translateTrimmedRow(coords.row);\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n        stopImmediatePropagation(event);\n      }\n    }\n\n    /**\n     * Translate visual row after trimming to physical base row index.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @returns {number} Base row index.\n     */\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.hot.toPhysicalRow(row);\n    }\n\n    /**\n     * Translate physical row after trimming to visual base row index.\n     *\n     * @private\n     * @param {number} row Row index.\n     * @returns {number} Base row index.\n     */\n  }, {\n    key: \"untranslateTrimmedRow\",\n    value: function untranslateTrimmedRow(row) {\n      return this.hot.toVisualRow(row);\n    }\n\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render();\n\n      // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n      this.hot.view.adjustElementsSize();\n    }\n  }]);\n  return CollapsingUI;\n}(BaseUI);\nexport default CollapsingUI;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}